<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="port_8c" kind="file" language="C++">
    <compoundname>port.c</compoundname>
    <includes refid="_free_r_t_o_s_8h" local="yes">FreeRTOS.h</includes>
    <includes refid="task_8h" local="yes">task.h</includes>
    <incdepgraph>
      <node id="5">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="2">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>deprecated_definitions.h</label>
        <link refid="deprecated__definitions_8h"/>
      </node>
      <node id="12">
        <label>list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="10">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h"/>
      </node>
      <node id="7">
        <label>portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>projdefs.h</label>
        <link refid="projdefs_8h"/>
      </node>
      <node id="11">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c</label>
        <link refid="port_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>portmacro.h</label>
        <link refid="portmacro_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="port_8c_1adad03b75dbce86018cd8f77724f5f89a" prot="public" static="no">
        <name>portNVIC_SYSTICK_CTRL_REG</name>
        <initializer>( * ( ( volatile uint32_t * ) 0xe000e010 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="37" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="37" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" prot="public" static="no">
        <name>portNVIC_SYSTICK_LOAD_REG</name>
        <initializer>( * ( ( volatile uint32_t * ) 0xe000e014 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="38" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="38" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a840264c4ada33651c41921488329f127" prot="public" static="no">
        <name>portNVIC_SYSTICK_CURRENT_VALUE_REG</name>
        <initializer>( * ( ( volatile uint32_t * ) 0xe000e018 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="39" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="39" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" prot="public" static="no">
        <name>portNVIC_INT_CTRL_REG</name>
        <initializer>( * ( ( volatile uint32_t * ) 0xe000ed04 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="40" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="40" bodyend="-1"/>
        <referencedby refid="port_8c_1add01c927fb689f7ec170e42d47d27927" compoundref="port_8c" startline="252" endline="261">vPortYield</referencedby>
        <referencedby refid="port_8c_1a78100b2d36913d0b45565be8975e5de8" compoundref="port_8c" startline="354" endline="368">xPortSysTickHandler</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a9d076b8b45d4ab187668bb7b0c1f8d31" prot="public" static="no">
        <name>portNVIC_SYSPRI2_REG</name>
        <initializer>( * ( ( volatile uint32_t * ) 0xe000ed20 ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="41" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="41" bodyend="-1"/>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a94a387a85f1ebbd3d23feceb63d995c5" prot="public" static="no">
        <name>portNVIC_SYSTICK_CLK_BIT</name>
        <initializer>( 1UL &lt;&lt; 2UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="42" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1aeb00c00ae5a1b5c39ef0d008cdc2aabe" prot="public" static="no">
        <name>portNVIC_SYSTICK_INT_BIT</name>
        <initializer>( 1UL &lt;&lt; 1UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="43" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="43" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a4c9342fc3940bcd756f344e3489a030e" prot="public" static="no">
        <name>portNVIC_SYSTICK_ENABLE_BIT</name>
        <initializer>( 1UL &lt;&lt; 0UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="44" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a1774a206db4e93668b7508965338893f" prot="public" static="no">
        <name>portNVIC_SYSTICK_COUNT_FLAG_BIT</name>
        <initializer>( 1UL &lt;&lt; 16UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="45" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a16830bf8349e14cdeed05193af234d5e" prot="public" static="no">
        <name>portNVIC_PENDSVSET_BIT</name>
        <initializer>( 1UL &lt;&lt; 28UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="46" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="46" bodyend="-1"/>
        <referencedby refid="port_8c_1add01c927fb689f7ec170e42d47d27927" compoundref="port_8c" startline="252" endline="261">vPortYield</referencedby>
        <referencedby refid="port_8c_1a78100b2d36913d0b45565be8975e5de8" compoundref="port_8c" startline="354" endline="368">xPortSysTickHandler</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a7695fa51586f81228c89bcf517ec44f3" prot="public" static="no">
        <name>portMIN_INTERRUPT_PRIORITY</name>
        <initializer>( 255UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="47" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a71a0b2492ed73217b5864c1e3ba8c9be" prot="public" static="no">
        <name>portNVIC_PENDSV_PRI</name>
        <initializer>( <ref refid="port_8c_1a7695fa51586f81228c89bcf517ec44f3" kindref="member">portMIN_INTERRUPT_PRIORITY</ref> &lt;&lt; 16UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="48" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="48" bodyend="-1"/>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1ae4ddaa528bc05260d1a5a607c8a00d9f" prot="public" static="no">
        <name>portNVIC_SYSTICK_PRI</name>
        <initializer>( <ref refid="port_8c_1a7695fa51586f81228c89bcf517ec44f3" kindref="member">portMIN_INTERRUPT_PRIORITY</ref> &lt;&lt; 24UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="49" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a062d03aca8ae932b4552a2aa19853b44" prot="public" static="no">
        <name>portINITIAL_XPSR</name>
        <initializer>( 0x01000000 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="52" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a14e81b7d3d94bf8d192c05c06f82c8d8" prot="public" static="no">
        <name>portMAX_24_BIT_NUMBER</name>
        <initializer>( 0xffffffUL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="55" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a5ee932503b5ba9d5a6125df7e7fc459b" prot="public" static="no">
        <name>portMISSED_COUNTS_FACTOR</name>
        <initializer>( 45UL )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="61" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" compoundref="port_8c" startline="375" endline="393">__attribute__</referencedby>
      </memberdef>
      <memberdef kind="define" id="port_8c_1a254a1ddd7499c6ec36b38e2fc3486b80" prot="public" static="no">
        <name>portTASK_RETURN_ADDRESS</name>
        <initializer><ref refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" kindref="member">prvTaskExitError</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="70" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="port_8c_1a4649001ea4d29b80759e6eca4bba58eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortSetupTimerInterrupt</definition>
        <argsstring>(void)</argsstring>
        <name>vPortSetupTimerInterrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="78" column="6" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" declline="78" declcolumn="6"/>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a3ab2189d6599a9eb1b1f235c87e8616d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xPortPendSVHandler</definition>
        <argsstring>(void xPortSysTickHandler void)</argsstring>
        <name>xPortPendSVHandler</name>
        <param>
          <type>void <ref refid="_free_r_t_o_s_config__template_8h_1ae42e6318b5d564e44f97f8c765859448" kindref="member">xPortSysTickHandler</ref> void</type>
          <defname>void</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="83" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="83" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prvTaskExitError</definition>
        <argsstring>(void)</argsstring>
        <name>prvTaskExitError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="151" column="13" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="151" bodyend="173"/>
        <references refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" compoundref="_free_r_t_o_s_config_8h" startline="131">configASSERT</references>
        <references refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" compoundref="portmacro_8h" startline="97">portDISABLE_INTERRUPTS</references>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a859e86b6143d6bc4cf96b2867f408c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortSVCHandler</definition>
        <argsstring>(void)</argsstring>
        <name>vPortSVCHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="176" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a5cfc38319f17c8e804020ec247b6325d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortStartFirstTask</definition>
        <argsstring>(void)</argsstring>
        <name>vPortStartFirstTask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="183" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="183" bodyend="208"/>
        <referencedby refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" compoundref="port_8c" startline="214" endline="241">xPortStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="function" id="port_8c_1ade5a8c6666e7413a0355cc252029c5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref></type>
        <definition>BaseType_t xPortStartScheduler</definition>
        <argsstring>(void)</argsstring>
        <name>xPortStartScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="214" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="214" bodyend="241"/>
        <references refid="port_8c_1a71a0b2492ed73217b5864c1e3ba8c9be" compoundref="port_8c" startline="48">portNVIC_PENDSV_PRI</references>
        <references refid="port_8c_1a9d076b8b45d4ab187668bb7b0c1f8d31" compoundref="port_8c" startline="41">portNVIC_SYSPRI2_REG</references>
        <references refid="port_8c_1ae4ddaa528bc05260d1a5a607c8a00d9f" compoundref="port_8c" startline="49">portNVIC_SYSTICK_PRI</references>
        <references refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" compoundref="port_8c" startline="151" endline="173">prvTaskExitError</references>
        <references refid="port_8c_1a4649001ea4d29b80759e6eca4bba58eb">vPortSetupTimerInterrupt</references>
        <references refid="port_8c_1a5cfc38319f17c8e804020ec247b6325d" compoundref="port_8c" startline="183" endline="208">vPortStartFirstTask</references>
        <references refid="task_8h_1a7a82c12c2407390ecbb70c123aa11e58" compoundref="tasks_8c" startline="2988" endline="3060">vTaskSwitchContext</references>
        <referencedby refid="task_8h_1aaf9dca1065c60abdeb309d56ab7293cb" compoundref="tasks_8c" startline="1974" endline="2095">vTaskStartScheduler</referencedby>
      </memberdef>
      <memberdef kind="function" id="port_8c_1af76f3c0b44c5b5c06fc046a4ee1a6423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortEndScheduler</definition>
        <argsstring>(void)</argsstring>
        <name>vPortEndScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="244" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="244" bodyend="249"/>
        <references refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" compoundref="_free_r_t_o_s_config_8h" startline="131">configASSERT</references>
        <referencedby refid="task_8h_1a1651e13c7ccd6273f53a62425ec79a15" compoundref="tasks_8c" startline="2098" endline="2106">vTaskEndScheduler</referencedby>
      </memberdef>
      <memberdef kind="function" id="port_8c_1add01c927fb689f7ec170e42d47d27927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortYield</definition>
        <argsstring>(void)</argsstring>
        <name>vPortYield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="252" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="252" bodyend="261"/>
        <references refid="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" compoundref="port_8c" startline="40">portNVIC_INT_CTRL_REG</references>
        <references refid="port_8c_1a16830bf8349e14cdeed05193af234d5e" compoundref="port_8c" startline="46">portNVIC_PENDSVSET_BIT</references>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a2ed3554a3de09a3bd09d396ee081ab69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortEnterCritical</definition>
        <argsstring>(void)</argsstring>
        <name>vPortEnterCritical</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="264" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="264" bodyend="270"/>
        <references refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" compoundref="portmacro_8h" startline="97">portDISABLE_INTERRUPTS</references>
      </memberdef>
      <memberdef kind="function" id="port_8c_1aed20ada05b957181a0de042802a82a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortExitCritical</definition>
        <argsstring>(void)</argsstring>
        <name>vPortExitCritical</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="273" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="273" bodyend="281"/>
        <references refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" compoundref="_free_r_t_o_s_config_8h" startline="131">configASSERT</references>
        <references refid="portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173" compoundref="portmacro_8h" startline="98">portENABLE_INTERRUPTS</references>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a9f629ba0917b46bc9586dfc49df557ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ulSetInterruptMaskFromISR</definition>
        <argsstring>(void)</argsstring>
        <name>ulSetInterruptMaskFromISR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="284" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="port_8c_1ad292bbba4a300536d7475e0ec48bb1ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vClearInterruptMaskFromISR</definition>
        <argsstring>(__attribute__((unused)) uint32_t ulMask)</argsstring>
        <name>vClearInterruptMaskFromISR</name>
        <param>
          <type><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((unused)) uint32_t</type>
          <declname>ulMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="295" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="295" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a4e6b17b7b6e1a92564afdeff7e9dba91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xPortPendSVHandler</definition>
        <argsstring>(void)</argsstring>
        <name>xPortPendSVHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="305" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="305" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="port_8c_1a78100b2d36913d0b45565be8975e5de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xPortSysTickHandler</definition>
        <argsstring>(void)</argsstring>
        <name>xPortSysTickHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="354" column="6" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="354" bodyend="368"/>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="_free_r_t_o_s_8h_1a2661e2c5a4e4afe5bef2ebe9872e28b3" compoundref="_free_r_t_o_s_8h" startline="286">portCLEAR_INTERRUPT_MASK_FROM_ISR</references>
        <references refid="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" compoundref="port_8c" startline="40">portNVIC_INT_CTRL_REG</references>
        <references refid="port_8c_1a16830bf8349e14cdeed05193af234d5e" compoundref="port_8c" startline="46">portNVIC_PENDSVSET_BIT</references>
        <references refid="_free_r_t_o_s_8h_1a31b4260dbc1823ba80b578f86eb15a98" compoundref="_free_r_t_o_s_8h" startline="282">portSET_INTERRUPT_MASK_FROM_ISR</references>
        <references refid="task_8h_1a978e25460ac35706f9ad30b46d9403d8" compoundref="tasks_8c" startline="2706" endline="2875">xTaskIncrementTick</references>
      </memberdef>
      <memberdef kind="function" id="port_8c_1af9aace1b44b73111e15aa39f06f43456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((weak))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(weak)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" line="375" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c" bodystart="375" bodyend="393"/>
        <references refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" compoundref="_free_r_t_o_s_config_8h" startline="67">configCPU_CLOCK_HZ</references>
        <references refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" compoundref="_free_r_t_o_s_config_8h" startline="68">configTICK_RATE_HZ</references>
        <references refid="port_8c_1a14e81b7d3d94bf8d192c05c06f82c8d8" compoundref="port_8c" startline="55">portMAX_24_BIT_NUMBER</references>
        <references refid="port_8c_1a5ee932503b5ba9d5a6125df7e7fc459b" compoundref="port_8c" startline="61">portMISSED_COUNTS_FACTOR</references>
        <references refid="port_8c_1a94a387a85f1ebbd3d23feceb63d995c5" compoundref="port_8c" startline="42">portNVIC_SYSTICK_CLK_BIT</references>
        <references refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" compoundref="port_8c" startline="37">portNVIC_SYSTICK_CTRL_REG</references>
        <references refid="port_8c_1a840264c4ada33651c41921488329f127" compoundref="port_8c" startline="39">portNVIC_SYSTICK_CURRENT_VALUE_REG</references>
        <references refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" compoundref="port_8c" startline="44">portNVIC_SYSTICK_ENABLE_BIT</references>
        <references refid="port_8c_1aeb00c00ae5a1b5c39ef0d008cdc2aabe" compoundref="port_8c" startline="43">portNVIC_SYSTICK_INT_BIT</references>
        <references refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" compoundref="port_8c" startline="38">portNVIC_SYSTICK_LOAD_REG</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.3.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Implementation<sp/>of<sp/>functions<sp/>defined<sp/>in<sp/>portable.h<sp/>for<sp/>the<sp/>ARM<sp/>CM0<sp/>port.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scheduler<sp/>includes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s_8h" kindref="compound">FreeRTOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="task_8h" kindref="compound">task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constants<sp/>required<sp/>to<sp/>manipulate<sp/>the<sp/>NVIC.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_CTRL_REG<sp/><sp/><sp/><sp/><sp/>(<sp/>*<sp/>(<sp/>(<sp/>volatile<sp/>uint32_t<sp/>*<sp/>)<sp/>0xe000e010<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_LOAD_REG<sp/><sp/><sp/><sp/><sp/>(<sp/>*<sp/>(<sp/>(<sp/>volatile<sp/>uint32_t<sp/>*<sp/>)<sp/>0xe000e014<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="port_8c_1a840264c4ada33651c41921488329f127" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_CURRENT_VALUE_REG<sp/><sp/>(<sp/>*<sp/>(<sp/>(<sp/>volatile<sp/>uint32_t<sp/>*<sp/>)<sp/>0xe000e018<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_INT_CTRL_REG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*<sp/>(<sp/>(<sp/>volatile<sp/>uint32_t<sp/>*<sp/>)<sp/>0xe000ed04<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="port_8c_1a9d076b8b45d4ab187668bb7b0c1f8d31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSPRI2_REG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*<sp/>(<sp/>(<sp/>volatile<sp/>uint32_t<sp/>*<sp/>)<sp/>0xe000ed20<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="port_8c_1a94a387a85f1ebbd3d23feceb63d995c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_CLK_BIT<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1UL<sp/>&lt;&lt;<sp/>2UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="port_8c_1aeb00c00ae5a1b5c39ef0d008cdc2aabe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_INT_BIT<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1UL<sp/>&lt;&lt;<sp/>1UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_ENABLE_BIT<sp/><sp/><sp/><sp/><sp/>(<sp/>1UL<sp/>&lt;&lt;<sp/>0UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="port_8c_1a1774a206db4e93668b7508965338893f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_COUNT_FLAG_BIT<sp/><sp/><sp/>(<sp/>1UL<sp/>&lt;&lt;<sp/>16UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="port_8c_1a16830bf8349e14cdeed05193af234d5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_PENDSVSET_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1UL<sp/>&lt;&lt;<sp/>28UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="port_8c_1a7695fa51586f81228c89bcf517ec44f3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portMIN_INTERRUPT_PRIORITY<sp/><sp/><sp/><sp/>(<sp/>255UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="port_8c_1a71a0b2492ed73217b5864c1e3ba8c9be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_PENDSV_PRI<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>portMIN_INTERRUPT_PRIORITY<sp/>&lt;&lt;<sp/>16UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="port_8c_1ae4ddaa528bc05260d1a5a607c8a00d9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portNVIC_SYSTICK_PRI<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>portMIN_INTERRUPT_PRIORITY<sp/>&lt;&lt;<sp/>24UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constants<sp/>required<sp/>to<sp/>set<sp/>up<sp/>the<sp/>initial<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="port_8c_1a062d03aca8ae932b4552a2aa19853b44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portINITIAL_XPSR<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>0x01000000<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>systick<sp/>is<sp/>a<sp/>24-bit<sp/>counter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="port_8c_1a14e81b7d3d94bf8d192c05c06f82c8d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>portMAX_24_BIT_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>0xffffffUL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>fiddle<sp/>factor<sp/>to<sp/>estimate<sp/>the<sp/>number<sp/>of<sp/>SysTick<sp/>counts<sp/>that<sp/>would<sp/>have</highlight></codeline>
<codeline lineno="58"><highlight class="comment">occurred<sp/>while<sp/>the<sp/>SysTick<sp/>counter<sp/>is<sp/>stopped<sp/>during<sp/>tickless<sp/>idle</highlight></codeline>
<codeline lineno="59"><highlight class="comment">calculations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portMISSED_COUNTS_FACTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="port_8c_1a5ee932503b5ba9d5a6125df7e7fc459b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>portMISSED_COUNTS_FACTOR<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>45UL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>user<sp/>override<sp/>the<sp/>pre-loading<sp/>of<sp/>the<sp/>initial<sp/>LR<sp/>with<sp/>the<sp/>address<sp/>of</highlight></codeline>
<codeline lineno="65"><highlight class="comment">prvTaskExitError()<sp/>in<sp/>case<sp/>it<sp/>messes<sp/>up<sp/>unwinding<sp/>of<sp/>the<sp/>stack<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="66"><highlight class="comment">debugger.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>configTASK_RETURN_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>portTASK_RETURN_ADDRESS<sp/>configTASK_RETURN_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="port_8c_1a254a1ddd7499c6ec36b38e2fc3486b80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>portTASK_RETURN_ADDRESS<sp/>prvTaskExitError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Setup<sp/>the<sp/>timer<sp/>to<sp/>generate<sp/>the<sp/>tick<sp/>interrupts.<sp/><sp/>The<sp/>implementation<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>file<sp/>is<sp/>weak<sp/>to<sp/>allow<sp/>application<sp/>writers<sp/>to<sp/>change<sp/>the<sp/>timer<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>generate<sp/>the<sp/>tick<sp/>interrupt.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="port_8c_1a4649001ea4d29b80759e6eca4bba58eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a4649001ea4d29b80759e6eca4bba58eb" kindref="member">vPortSetupTimerInterrupt</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Exception<sp/>handlers.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="port_8c_1a3ab2189d6599a9eb1b1f235c87e8616d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a4e6b17b7b6e1a92564afdeff7e9dba91" kindref="member">xPortPendSVHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref><sp/>((<sp/>naked<sp/>));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a78100b2d36913d0b45565be8975e5de8" kindref="member">xPortSysTickHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a859e86b6143d6bc4cf96b2867f408c75" kindref="member">vPortSVCHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Start<sp/>first<sp/>task<sp/>is<sp/>a<sp/>separate<sp/>function<sp/>so<sp/>it<sp/>can<sp/>be<sp/>tested<sp/>in<sp/>isolation.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a5cfc38319f17c8e804020ec247b6325d" kindref="member">vPortStartFirstTask</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref><sp/>((<sp/>naked<sp/>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Used<sp/>to<sp/>catch<sp/>tasks<sp/>that<sp/>attempt<sp/>to<sp/>return<sp/>from<sp/>their<sp/>implementing<sp/>function.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" kindref="member">prvTaskExitError</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Each<sp/>task<sp/>maintains<sp/>its<sp/>own<sp/>interrupt<sp/>status<sp/>in<sp/>the<sp/>critical<sp/>nesting</highlight></codeline>
<codeline lineno="100"><highlight class="comment">variable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxCriticalNesting<sp/>=<sp/>0xaaaaaaaa;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*<sp/>The<sp/>number<sp/>of<sp/>SysTick<sp/>increments<sp/>that<sp/>make<sp/>up<sp/>one<sp/>tick<sp/>period.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_TICKLESS_IDLE<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulTimerCountsForOneTick<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TICKLESS_IDLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>tick<sp/>periods<sp/>that<sp/>can<sp/>be<sp/>suppressed<sp/>is<sp/>limited<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>24<sp/>bit<sp/>resolution<sp/>of<sp/>the<sp/>SysTick<sp/>timer.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_TICKLESS_IDLE<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>xMaximumPossibleSuppressedTicks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TICKLESS_IDLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>Compensate<sp/>for<sp/>the<sp/>CPU<sp/>cycles<sp/>that<sp/>pass<sp/>while<sp/>the<sp/>SysTick<sp/>is<sp/>stopped<sp/>(low</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>power<sp/>functionality<sp/>only.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_TICKLESS_IDLE<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulStoppedTimerCompensation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TICKLESS_IDLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>See<sp/>header<sp/>file<sp/>for<sp/>description.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*<ref refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" kindref="member">pxPortInitialiseStack</ref>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTopOfStack,<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxCode,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulate<sp/>the<sp/>stack<sp/>frame<sp/>as<sp/>it<sp/>would<sp/>be<sp/>created<sp/>by<sp/>a<sp/>context<sp/>switch</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>pxTopOfStack--;<sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>added<sp/>to<sp/>account<sp/>for<sp/>the<sp/>way<sp/>the<sp/>MCU<sp/>uses<sp/>the<sp/>stack<sp/>on<sp/>entry/exit<sp/>of<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>*pxTopOfStack<sp/>=<sp/><ref refid="port_8c_1a062d03aca8ae932b4552a2aa19853b44" kindref="member">portINITIAL_XPSR</ref>;<sp/></highlight><highlight class="comment">/*<sp/>xPSR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>pxTopOfStack--;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>*pxTopOfStack<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>)<sp/>pxCode;<sp/></highlight><highlight class="comment">/*<sp/>PC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>pxTopOfStack--;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>*pxTopOfStack<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>)<sp/><ref refid="port_8c_1a254a1ddd7499c6ec36b38e2fc3486b80" kindref="member">portTASK_RETURN_ADDRESS</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>LR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>pxTopOfStack<sp/>-=<sp/>5;<sp/><sp/></highlight><highlight class="comment">/*<sp/>R12,<sp/>R3,<sp/>R2<sp/>and<sp/>R1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>*pxTopOfStack<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>)<sp/>pvParameters;<sp/></highlight><highlight class="comment">/*<sp/>R0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>pxTopOfStack<sp/>-=<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>R11..R4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pxTopOfStack;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" kindref="member">prvTaskExitError</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>ulDummy<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>function<sp/>that<sp/>implements<sp/>a<sp/>task<sp/>must<sp/>not<sp/>exit<sp/>or<sp/>attempt<sp/>to<sp/>return<sp/>to</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>its<sp/>caller<sp/>as<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>return<sp/>to.<sp/><sp/>If<sp/>a<sp/>task<sp/>wants<sp/>to<sp/>exit<sp/>it</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/>should<sp/>instead<sp/>call<sp/>vTaskDelete(<sp/>NULL<sp/>).</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/>Artificially<sp/>force<sp/>an<sp/>assert()<sp/>to<sp/>be<sp/>triggered<sp/>if<sp/>configASSERT()<sp/>is</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/>defined,<sp/>then<sp/>stop<sp/>here<sp/>so<sp/>application<sp/>writers<sp/>can<sp/>catch<sp/>the<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>uxCriticalNesting<sp/>==<sp/>~0UL<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" kindref="member">portDISABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>ulDummy<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>file<sp/>calls<sp/>prvTaskExitError()<sp/>after<sp/>the<sp/>scheduler<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>started<sp/>to<sp/>remove<sp/>a<sp/>compiler<sp/>warning<sp/>about<sp/>the<sp/>function<sp/>being<sp/>defined</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>never<sp/>called.<sp/><sp/>ulDummy<sp/>is<sp/>used<sp/>purely<sp/>to<sp/>quieten<sp/>other<sp/>warnings</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>about<sp/>code<sp/>appearing<sp/>after<sp/>this<sp/>function<sp/>is<sp/>called<sp/>-<sp/>making<sp/>ulDummy</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/>volatile<sp/>makes<sp/>the<sp/>compiler<sp/>think<sp/>the<sp/>function<sp/>could<sp/>return<sp/>and</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>therefore<sp/>not<sp/>output<sp/>an<sp/>&apos;unreachable<sp/>code&apos;<sp/>warning<sp/>for<sp/>code<sp/>that<sp/>appears</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>after<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="port_8c_1a859e86b6143d6bc4cf96b2867f408c75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a859e86b6143d6bc4cf96b2867f408c75" kindref="member">vPortSVCHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>no<sp/>longer<sp/>used,<sp/>but<sp/>retained<sp/>for<sp/>backward</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/>compatibility.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="port_8c_1a5cfc38319f17c8e804020ec247b6325d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a5cfc38319f17c8e804020ec247b6325d" kindref="member">vPortStartFirstTask</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>MSP<sp/>stack<sp/>is<sp/>not<sp/>reset<sp/>as,<sp/>unlike<sp/>on<sp/>M3/4<sp/>parts,<sp/>there<sp/>is<sp/>no<sp/>vector</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/>table<sp/>offset<sp/>register<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>locate<sp/>the<sp/>initial<sp/>stack<sp/>value.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/>Not<sp/>all<sp/>M0<sp/>parts<sp/>have<sp/>the<sp/>application<sp/>vector<sp/>table<sp/>at<sp/>address<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>.syntax<sp/>unified<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/><sp/>r2,<sp/>pxCurrentTCBConst2<sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Obtain<sp/>location<sp/>of<sp/>pxCurrentTCB.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/><sp/>r3,<sp/>[r2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/><sp/>r0,<sp/>[r3]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>item<sp/>in<sp/>pxCurrentTCB<sp/>is<sp/>the<sp/>task<sp/>top<sp/>of<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>adds<sp/>r0,<sp/>#32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>everything<sp/>up<sp/>to<sp/>r0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>msr<sp/><sp/>psp,<sp/>r0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>now<sp/>the<sp/>new<sp/>top<sp/>of<sp/>stack<sp/>to<sp/>use<sp/>in<sp/>the<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>movs<sp/>r0,<sp/>#2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Switch<sp/>to<sp/>the<sp/>psp<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>msr<sp/><sp/>CONTROL,<sp/>r0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>isb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pop<sp/><sp/>{r0-r5}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>the<sp/>registers<sp/>that<sp/>are<sp/>saved<sp/>automatically.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>mov<sp/><sp/>lr,<sp/>r5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>lr<sp/>is<sp/>now<sp/>in<sp/>r5.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pop<sp/><sp/>{r3}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>address<sp/>is<sp/>now<sp/>in<sp/>r3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pop<sp/><sp/>{r2}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>and<sp/>discard<sp/>XPSR.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>cpsie<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>task<sp/>has<sp/>its<sp/>context<sp/>and<sp/>interrupts<sp/>can<sp/>be<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bx<sp/><sp/><sp/>r3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Finally,<sp/>jump<sp/>to<sp/>the<sp/>user<sp/>defined<sp/>task<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>.align<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;pxCurrentTCBConst2:<sp/>.word<sp/>pxCurrentTCB<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>See<sp/>header<sp/>file<sp/>for<sp/>description.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" refkind="member"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="port_8c_1ade5a8c6666e7413a0355cc252029c5c6" kindref="member">xPortStartScheduler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>PendSV,<sp/>CallSV<sp/>and<sp/>SysTick<sp/>the<sp/>same<sp/>priority<sp/>as<sp/>the<sp/>kernel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a9d076b8b45d4ab187668bb7b0c1f8d31" kindref="member">portNVIC_SYSPRI2_REG</ref><sp/>|=<sp/><ref refid="port_8c_1a71a0b2492ed73217b5864c1e3ba8c9be" kindref="member">portNVIC_PENDSV_PRI</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a9d076b8b45d4ab187668bb7b0c1f8d31" kindref="member">portNVIC_SYSPRI2_REG</ref><sp/>|=<sp/><ref refid="port_8c_1ae4ddaa528bc05260d1a5a607c8a00d9f" kindref="member">portNVIC_SYSTICK_PRI</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>timer<sp/>that<sp/>generates<sp/>the<sp/>tick<sp/>ISR.<sp/><sp/>Interrupts<sp/>are<sp/>disabled</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>here<sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a4649001ea4d29b80759e6eca4bba58eb" kindref="member">vPortSetupTimerInterrupt</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>the<sp/>critical<sp/>nesting<sp/>count<sp/>ready<sp/>for<sp/>the<sp/>first<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>uxCriticalNesting<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>first<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a5cfc38319f17c8e804020ec247b6325d" kindref="member">vPortStartFirstTask</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>never<sp/>get<sp/>here<sp/>as<sp/>the<sp/>tasks<sp/>will<sp/>now<sp/>be<sp/>executing!<sp/><sp/>Call<sp/>the<sp/>task</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/>exit<sp/>error<sp/>function<sp/>to<sp/>prevent<sp/>compiler<sp/>warnings<sp/>about<sp/>a<sp/>static<sp/>function</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/>not<sp/>being<sp/>called<sp/>in<sp/>the<sp/>case<sp/>that<sp/>the<sp/>application<sp/>writer<sp/>overrides<sp/>this</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/>functionality<sp/>by<sp/>defining<sp/>configTASK_RETURN_ADDRESS.<sp/><sp/>Call</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>vTaskSwitchContext()<sp/>so<sp/>link<sp/>time<sp/>optimisation<sp/>does<sp/>not<sp/>remove<sp/>the</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>symbol.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1a7a82c12c2407390ecbb70c123aa11e58" kindref="member">vTaskSwitchContext</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a813e8227aedfc6bd83c66c4a9b8e4f41" kindref="member">prvTaskExitError</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>not<sp/>get<sp/>here!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="portable_8h_1af76f3c0b44c5b5c06fc046a4ee1a6423" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1af76f3c0b44c5b5c06fc046a4ee1a6423" kindref="member">vPortEndScheduler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>implemented<sp/>in<sp/>ports<sp/>where<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>return<sp/>to.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/>Artificially<sp/>force<sp/>an<sp/>assert.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>uxCriticalNesting<sp/>==<sp/>1000UL<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="port_8c_1add01c927fb689f7ec170e42d47d27927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1add01c927fb689f7ec170e42d47d27927" kindref="member">vPortYield</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>a<sp/>PendSV<sp/>to<sp/>request<sp/>a<sp/>context<sp/>switch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" kindref="member">portNVIC_INT_CTRL_REG</ref><sp/>=<sp/><ref refid="port_8c_1a16830bf8349e14cdeed05193af234d5e" kindref="member">portNVIC_PENDSVSET_BIT</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Barriers<sp/>are<sp/>normally<sp/>not<sp/>required<sp/>but<sp/>do<sp/>ensure<sp/>the<sp/>code<sp/>is<sp/>completely</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/>within<sp/>the<sp/>specified<sp/>behaviour<sp/>for<sp/>the<sp/>architecture.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="port_8c_1a2ed3554a3de09a3bd09d396ee081ab69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a2ed3554a3de09a3bd09d396ee081ab69" kindref="member">vPortEnterCritical</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" kindref="member">portDISABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>uxCriticalNesting++;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="port_8c_1aed20ada05b957181a0de042802a82a5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1aed20ada05b957181a0de042802a82a5b" kindref="member">vPortExitCritical</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>uxCriticalNesting<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>uxCriticalNesting--;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>uxCriticalNesting<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173" kindref="member">portENABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="port_8c_1a9f629ba0917b46bc9586dfc49df557ed" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="port_8c_1a9f629ba0917b46bc9586dfc49df557ed" kindref="member">ulSetInterruptMaskFromISR</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>mrs<sp/>r0,<sp/>PRIMASK<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>cpsid<sp/>i<sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bx<sp/>lr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="port_8c_1ad292bbba4a300536d7475e0ec48bb1ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1ad292bbba4a300536d7475e0ec48bb1ba" kindref="member">vClearInterruptMaskFromISR</ref>(<sp/><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>(<sp/>(<sp/>unused<sp/>)<sp/>)<sp/>uint32_t<sp/>ulMask<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>msr<sp/>PRIMASK,<sp/>r0<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bx<sp/>lr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="port_8c_1a4e6b17b7b6e1a92564afdeff7e9dba91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a4e6b17b7b6e1a92564afdeff7e9dba91" kindref="member">xPortPendSVHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>naked<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>.syntax<sp/>unified<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>mrs<sp/>r0,<sp/>psp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/>r3,<sp/>pxCurrentTCBConst<sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>location<sp/>of<sp/>the<sp/>current<sp/>TCB.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/>r2,<sp/>[r3]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>subs<sp/>r0,<sp/>r0,<sp/>#32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>space<sp/>for<sp/>the<sp/>remaining<sp/>low<sp/>registers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>str<sp/>r0,<sp/>[r2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>new<sp/>top<sp/>of<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>stmia<sp/>r0!,<sp/>{r4-r7}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>low<sp/>registers<sp/>that<sp/>are<sp/>not<sp/>saved<sp/>automatically.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r4,<sp/>r8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>high<sp/>registers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r5,<sp/>r9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r6,<sp/>r10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r7,<sp/>r11<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>stmia<sp/>r0!,<sp/>{r4-r7}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>push<sp/>{r3,<sp/>r14}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>cpsid<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bl<sp/>vTaskSwitchContext<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>cpsie<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pop<sp/>{r2,<sp/>r3}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>lr<sp/>goes<sp/>in<sp/>r3.<sp/>r2<sp/>now<sp/>holds<sp/>tcb<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/>r1,<sp/>[r2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldr<sp/>r0,<sp/>[r1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>item<sp/>in<sp/>pxCurrentTCB<sp/>is<sp/>the<sp/>task<sp/>top<sp/>of<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>adds<sp/>r0,<sp/>r0,<sp/>#16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>to<sp/>the<sp/>high<sp/>registers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ldmia<sp/>r0!,<sp/>{r4-r7}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>the<sp/>high<sp/>registers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r8,<sp/>r4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r9,<sp/>r5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r10,<sp/>r6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>mov<sp/>r11,<sp/>r7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>msr<sp/>psp,<sp/>r0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>the<sp/>new<sp/>top<sp/>of<sp/>stack<sp/>for<sp/>the<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>subs<sp/>r0,<sp/>r0,<sp/>#32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>back<sp/>for<sp/>the<sp/>low<sp/>registers<sp/>that<sp/>are<sp/>not<sp/>automatically<sp/>restored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>ldmia<sp/>r0!,<sp/>{r4-r7}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Pop<sp/>low<sp/>registers.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bx<sp/>r3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>.align<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;pxCurrentTCBConst:<sp/>.word<sp/>pxCurrentTCB<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="port_8c_1a78100b2d36913d0b45565be8975e5de8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a78100b2d36913d0b45565be8975e5de8" kindref="member">xPortSysTickHandler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal">uint32_t<sp/>ulPreviousMask;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>ulPreviousMask<sp/>=<sp/><ref refid="_free_r_t_o_s_8h_1a31b4260dbc1823ba80b578f86eb15a98" kindref="member">portSET_INTERRUPT_MASK_FROM_ISR</ref>();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>RTOS<sp/>tick.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="task_8h_1a978e25460ac35706f9ad30b46d9403d8" kindref="member">xTaskIncrementTick</ref>()<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pend<sp/>a<sp/>context<sp/>switch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1ae42817ecbd6fe76d846a89cc0fcd0d95" kindref="member">portNVIC_INT_CTRL_REG</ref><sp/>=<sp/><ref refid="port_8c_1a16830bf8349e14cdeed05193af234d5e" kindref="member">portNVIC_PENDSVSET_BIT</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a2661e2c5a4e4afe5bef2ebe9872e28b3" kindref="member">portCLEAR_INTERRUPT_MASK_FROM_ISR</ref>(<sp/>ulPreviousMask<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>Setup<sp/>the<sp/>systick<sp/>timer<sp/>to<sp/>generate<sp/>the<sp/>tick<sp/>interrupts<sp/>at<sp/>the<sp/>required</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>frequency.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" refkind="member"><highlight class="normal"><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((<sp/>weak<sp/>))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="port_8c_1a4649001ea4d29b80759e6eca4bba58eb" kindref="member">vPortSetupTimerInterrupt</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>constants<sp/>required<sp/>to<sp/>configure<sp/>the<sp/>tick<sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if(<sp/>configUSE_TICKLESS_IDLE<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ulTimerCountsForOneTick<sp/>=<sp/>(<sp/><ref refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" kindref="member">configCPU_CLOCK_HZ</ref><sp/>/<sp/><ref refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" kindref="member">configTICK_RATE_HZ</ref><sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>xMaximumPossibleSuppressedTicks<sp/>=<sp/><ref refid="port_8c_1a14e81b7d3d94bf8d192c05c06f82c8d8" kindref="member">portMAX_24_BIT_NUMBER</ref><sp/>/<sp/>ulTimerCountsForOneTick;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ulStoppedTimerCompensation<sp/>=<sp/><ref refid="port_8c_1a5ee932503b5ba9d5a6125df7e7fc459b" kindref="member">portMISSED_COUNTS_FACTOR</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TICKLESS_IDLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>and<sp/>reset<sp/>the<sp/>SysTick.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>SysTick<sp/>to<sp/>interrupt<sp/>at<sp/>the<sp/>requested<sp/>rate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>(<sp/><ref refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" kindref="member">configCPU_CLOCK_HZ</ref><sp/>/<sp/><ref refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" kindref="member">configTICK_RATE_HZ</ref><sp/>)<sp/>-<sp/>1UL;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>=<sp/><ref refid="port_8c_1a94a387a85f1ebbd3d23feceb63d995c5" kindref="member">portNVIC_SYSTICK_CLK_BIT</ref><sp/>|<sp/><ref refid="port_8c_1aeb00c00ae5a1b5c39ef0d008cdc2aabe" kindref="member">portNVIC_SYSTICK_INT_BIT</ref><sp/>|<sp/><ref refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" kindref="member">portNVIC_SYSTICK_ENABLE_BIT</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_TICKLESS_IDLE<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="port_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aefd025907402b0b863d5012673d5036e" kindref="member">vPortSuppressTicksAndSleep</ref>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xExpectedIdleTime<sp/>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ulReloadValue,<sp/>ulCompleteTickPeriods,<sp/>ulCompletedSysTickDecrements;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xModifiableIdleTime;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>the<sp/>SysTick<sp/>reload<sp/>value<sp/>does<sp/>not<sp/>overflow<sp/>the<sp/>counter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xExpectedIdleTime<sp/>&gt;<sp/>xMaximumPossibleSuppressedTicks<sp/>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xExpectedIdleTime<sp/>=<sp/>xMaximumPossibleSuppressedTicks;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>the<sp/>SysTick<sp/>momentarily.<sp/><sp/>The<sp/>time<sp/>the<sp/>SysTick<sp/>is<sp/>stopped<sp/>for</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>accounted<sp/>for<sp/>as<sp/>best<sp/>it<sp/>can<sp/>be,<sp/>but<sp/>using<sp/>the<sp/>tickless<sp/>mode<sp/>will</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>inevitably<sp/>result<sp/>in<sp/>some<sp/>tiny<sp/>drift<sp/>of<sp/>the<sp/>time<sp/>maintained<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>kernel<sp/>with<sp/>respect<sp/>to<sp/>calendar<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>&amp;=<sp/>~portNVIC_SYSTICK_ENABLE_BIT;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>reload<sp/>value<sp/>required<sp/>to<sp/>wait<sp/>xExpectedIdleTime</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>tick<sp/>periods.<sp/><sp/>-1<sp/>is<sp/>used<sp/>because<sp/>this<sp/>code<sp/>will<sp/>execute<sp/>part<sp/>way</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>through<sp/>one<sp/>of<sp/>the<sp/>tick<sp/>periods.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ulReloadValue<sp/>=<sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref><sp/>+<sp/>(<sp/>ulTimerCountsForOneTick<sp/>*<sp/>(<sp/>xExpectedIdleTime<sp/>-<sp/>1UL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ulReloadValue<sp/>&gt;<sp/>ulStoppedTimerCompensation<sp/>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ulReloadValue<sp/>-=<sp/>ulStoppedTimerCompensation;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enter<sp/>a<sp/>critical<sp/>section<sp/>but<sp/>don&apos;t<sp/>use<sp/>the<sp/>taskENTER_CRITICAL()</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>method<sp/>as<sp/>that<sp/>will<sp/>mask<sp/>interrupts<sp/>that<sp/>should<sp/>exit<sp/>sleep<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;cpsid<sp/>i&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>context<sp/>switch<sp/>is<sp/>pending<sp/>or<sp/>a<sp/>task<sp/>is<sp/>waiting<sp/>for<sp/>the<sp/>scheduler</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>be<sp/>unsuspended<sp/>then<sp/>abandon<sp/>the<sp/>low<sp/>power<sp/>entry.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="task_8h_1ad185d5a451380c4040888620d9a92ec6" kindref="member">eTaskConfirmSleepModeStatus</ref>()<sp/>==<sp/><ref refid="task_8h_1afd168a210ae0f2fb0fca242860a8178eaba7b1a394c63faa14a85dbb191f1c6f9" kindref="member">eAbortSleep</ref><sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restart<sp/>from<sp/>whatever<sp/>is<sp/>left<sp/>in<sp/>the<sp/>count<sp/>register<sp/>to<sp/>complete</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>tick<sp/>period.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restart<sp/>SysTick.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>|=<sp/><ref refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" kindref="member">portNVIC_SYSTICK_ENABLE_BIT</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>reload<sp/>register<sp/>to<sp/>the<sp/>value<sp/>required<sp/>for<sp/>normal<sp/>tick</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>periods.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>ulTimerCountsForOneTick<sp/>-<sp/>1UL;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-enable<sp/>interrupts<sp/>-<sp/>see<sp/>comments<sp/>above<sp/>the<sp/>cpsid<sp/>instruction()</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;cpsie<sp/>i&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>new<sp/>reload<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>ulReloadValue;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>SysTick<sp/>count<sp/>flag<sp/>and<sp/>set<sp/>the<sp/>count<sp/>value<sp/>back<sp/>to</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restart<sp/>SysTick.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>|=<sp/><ref refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" kindref="member">portNVIC_SYSTICK_ENABLE_BIT</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sleep<sp/>until<sp/>something<sp/>happens.<sp/><sp/>configPRE_SLEEP_PROCESSING()<sp/>can</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>its<sp/>parameter<sp/>to<sp/>0<sp/>to<sp/>indicate<sp/>that<sp/>its<sp/>implementation<sp/>contains</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>own<sp/>wait<sp/>for<sp/>interrupt<sp/>or<sp/>wait<sp/>for<sp/>event<sp/>instruction,<sp/>and<sp/>so<sp/>wfi</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>not<sp/>be<sp/>executed<sp/>again.<sp/><sp/>However,<sp/>the<sp/>original<sp/>expected<sp/>idle</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>variable<sp/>must<sp/>remain<sp/>unmodified,<sp/>so<sp/>a<sp/>copy<sp/>is<sp/>taken.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xModifiableIdleTime<sp/>=<sp/>xExpectedIdleTime;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a986fc0c49fdf4945edd7fb6701e04978" kindref="member">configPRE_SLEEP_PROCESSING</ref>(<sp/>xModifiableIdleTime<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xModifiableIdleTime<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;wfi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a55f848c10319c953bfcc456fc724cee1" kindref="member">configPOST_SLEEP_PROCESSING</ref>(<sp/>xExpectedIdleTime<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-enable<sp/>interrupts<sp/>to<sp/>allow<sp/>the<sp/>interrupt<sp/>that<sp/>brought<sp/>the<sp/>MCU</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>of<sp/>sleep<sp/>mode<sp/>to<sp/>execute<sp/>immediately.<sp/><sp/>see<sp/>comments<sp/>above</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>__disable_interrupt()<sp/>call<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;cpsie<sp/>i&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>interrupts<sp/>again<sp/>because<sp/>the<sp/>clock<sp/>is<sp/>about<sp/>to<sp/>be<sp/>stopped</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>interrupts<sp/>that<sp/>execute<sp/>while<sp/>the<sp/>clock<sp/>is<sp/>stopped<sp/>will<sp/>increase</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>slippage<sp/>between<sp/>the<sp/>time<sp/>maintained<sp/>by<sp/>the<sp/>RTOS<sp/>and<sp/>calendar</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;cpsid<sp/>i&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;dsb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;isb&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>SysTick<sp/>clock<sp/>without<sp/>reading<sp/>the</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>portNVIC_SYSTICK_CTRL_REG<sp/>register<sp/>to<sp/>ensure<sp/>the</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>portNVIC_SYSTICK_COUNT_FLAG_BIT<sp/>is<sp/>not<sp/>cleared<sp/>if<sp/>it<sp/>is<sp/>set.<sp/><sp/>Again,</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>time<sp/>the<sp/>SysTick<sp/>is<sp/>stopped<sp/>for<sp/>is<sp/>accounted<sp/>for<sp/>as<sp/>best<sp/>it<sp/>can</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>be,<sp/>but<sp/>using<sp/>the<sp/>tickless<sp/>mode<sp/>will<sp/>inevitably<sp/>result<sp/>in<sp/>some<sp/>tiny</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>drift<sp/>of<sp/>the<sp/>time<sp/>maintained<sp/>by<sp/>the<sp/>kernel<sp/>with<sp/>respect<sp/>to<sp/>calendar</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>time*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>=<sp/>(<sp/><ref refid="port_8c_1a94a387a85f1ebbd3d23feceb63d995c5" kindref="member">portNVIC_SYSTICK_CLK_BIT</ref><sp/>|<sp/><ref refid="port_8c_1aeb00c00ae5a1b5c39ef0d008cdc2aabe" kindref="member">portNVIC_SYSTICK_INT_BIT</ref><sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>if<sp/>the<sp/>SysTick<sp/>clock<sp/>has<sp/>already<sp/>counted<sp/>to<sp/>zero<sp/>and</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>been<sp/>set<sp/>back<sp/>to<sp/>the<sp/>current<sp/>reload<sp/>value<sp/>(the<sp/>reload<sp/>back<sp/>being</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>correct<sp/>for<sp/>the<sp/>entire<sp/>expected<sp/>idle<sp/>time)<sp/>or<sp/>if<sp/>the<sp/>SysTick<sp/>is<sp/>yet</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>count<sp/>to<sp/>zero<sp/>(in<sp/>which<sp/>case<sp/>an<sp/>interrupt<sp/>other<sp/>than<sp/>the<sp/>SysTick</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>have<sp/>brought<sp/>the<sp/>system<sp/>out<sp/>of<sp/>sleep<sp/>mode).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>&amp;<sp/><ref refid="port_8c_1a1774a206db4e93668b7508965338893f" kindref="member">portNVIC_SYSTICK_COUNT_FLAG_BIT</ref><sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ulCalculatedLoadValue;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>tick<sp/>interrupt<sp/>is<sp/>already<sp/>pending,<sp/>and<sp/>the<sp/>SysTick<sp/>count</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reloaded<sp/>with<sp/>ulReloadValue.<sp/><sp/>Reset<sp/>the</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portNVIC_SYSTICK_LOAD_REG<sp/>with<sp/>whatever<sp/>remains<sp/>of<sp/>this<sp/>tick</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulCalculatedLoadValue<sp/>=<sp/>(<sp/>ulTimerCountsForOneTick<sp/>-<sp/>1UL<sp/>)<sp/>-<sp/>(<sp/>ulReloadValue<sp/>-<sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref><sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>allow<sp/>a<sp/>tiny<sp/>value,<sp/>or<sp/>values<sp/>that<sp/>have<sp/>somehow</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>underflowed<sp/>because<sp/>the<sp/>post<sp/>sleep<sp/>hook<sp/>did<sp/>something</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>took<sp/>too<sp/>long.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>ulCalculatedLoadValue<sp/>&lt;<sp/>ulStoppedTimerCompensation<sp/>)<sp/>||<sp/>(<sp/>ulCalculatedLoadValue<sp/>&gt;<sp/>ulTimerCountsForOneTick<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulCalculatedLoadValue<sp/>=<sp/>(<sp/>ulTimerCountsForOneTick<sp/>-<sp/>1UL<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>ulCalculatedLoadValue;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>the<sp/>pending<sp/>tick<sp/>will<sp/>be<sp/>processed<sp/>as<sp/>soon<sp/>as<sp/>this</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>exits,<sp/>the<sp/>tick<sp/>value<sp/>maintained<sp/>by<sp/>the<sp/>tick<sp/>is<sp/>stepped</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward<sp/>by<sp/>one<sp/>less<sp/>than<sp/>the<sp/>time<sp/>spent<sp/>waiting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulCompleteTickPeriods<sp/>=<sp/>xExpectedIdleTime<sp/>-<sp/>1UL;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Something<sp/>other<sp/>than<sp/>the<sp/>tick<sp/>interrupt<sp/>ended<sp/>the<sp/>sleep.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Work<sp/>out<sp/>how<sp/>long<sp/>the<sp/>sleep<sp/>lasted<sp/>rounded<sp/>to<sp/>complete<sp/>tick</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periods<sp/>(not<sp/>the<sp/>ulReload<sp/>value<sp/>which<sp/>accounted<sp/>for<sp/>part</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ticks).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulCompletedSysTickDecrements<sp/>=<sp/>(<sp/>xExpectedIdleTime<sp/>*<sp/>ulTimerCountsForOneTick<sp/>)<sp/>-<sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>complete<sp/>tick<sp/>periods<sp/>passed<sp/>while<sp/>the<sp/>processor</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>was<sp/>waiting?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulCompleteTickPeriods<sp/>=<sp/>ulCompletedSysTickDecrements<sp/>/<sp/>ulTimerCountsForOneTick;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>reload<sp/>value<sp/>is<sp/>set<sp/>to<sp/>whatever<sp/>fraction<sp/>of<sp/>a<sp/>single<sp/>tick</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>remains.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>(<sp/>(<sp/>ulCompleteTickPeriods<sp/>+<sp/>1UL<sp/>)<sp/>*<sp/>ulTimerCountsForOneTick<sp/>)<sp/>-<sp/>ulCompletedSysTickDecrements;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restart<sp/>SysTick<sp/>so<sp/>it<sp/>runs<sp/>from<sp/>portNVIC_SYSTICK_LOAD_REG</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>again,<sp/>then<sp/>set<sp/>portNVIC_SYSTICK_LOAD_REG<sp/>back<sp/>to<sp/>its<sp/>standard</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a840264c4ada33651c41921488329f127" kindref="member">portNVIC_SYSTICK_CURRENT_VALUE_REG</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1adad03b75dbce86018cd8f77724f5f89a" kindref="member">portNVIC_SYSTICK_CTRL_REG</ref><sp/>|=<sp/><ref refid="port_8c_1a4c9342fc3940bcd756f344e3489a030e" kindref="member">portNVIC_SYSTICK_ENABLE_BIT</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1a8dda6cb26bb158dd9636873135e63912" kindref="member">vTaskStepTick</ref>(<sp/>ulCompleteTickPeriods<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="port_8c_1a6fb185b6f87a37fcb11be7f5f7f74c3c" kindref="member">portNVIC_SYSTICK_LOAD_REG</ref><sp/>=<sp/>ulTimerCountsForOneTick<sp/>-<sp/>1UL;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>with<sp/>interrpts<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(<sp/></highlight><highlight class="stringliteral">&quot;cpsie<sp/>i&quot;</highlight><highlight class="normal"><sp/>:::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TICKLESS_IDLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/port.c"/>
  </compounddef>
</doxygen>
