<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="group__x_message_buffer_send_completed_from_i_s_r" kind="group">
    <compoundname>xMessageBufferSendCompletedFromISR</compoundname>
    <title>xMessageBufferSendCompletedFromISR</title>
    <briefdescription>
<para><ref refid="message__buffer_8h" kindref="compound">message_buffer.h</ref> </para>
    </briefdescription>
    <detaileddescription>
<para><preformatted>
BaseType_t <ref refid="message__buffer_8h_1a45918d12bf530cb2b4bf21c0936460a9" kindref="member">xMessageBufferSendCompletedFromISR( MessageBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )</ref>;
</preformatted></para>
<para>For advanced users only.</para>
<para>The <ref refid="stream__buffer_8c_1aa75273dfbcd92710254df0165ae1da5d" kindref="member">sbSEND_COMPLETED()</ref> macro is called from within the FreeRTOS APIs when data is sent to a message buffer or stream buffer. If there was a task that was blocked on the message or stream buffer waiting for data to arrive then the <ref refid="stream__buffer_8c_1aa75273dfbcd92710254df0165ae1da5d" kindref="member">sbSEND_COMPLETED()</ref> macro sends a notification to the task to remove it from the Blocked state. <ref refid="message__buffer_8h_1a45918d12bf530cb2b4bf21c0936460a9" kindref="member">xMessageBufferSendCompletedFromISR()</ref> does the same thing. It is provided to enable application writers to implement their own version of <ref refid="stream__buffer_8c_1aa75273dfbcd92710254df0165ae1da5d" kindref="member">sbSEND_COMPLETED()</ref>, and MUST NOT BE USED AT ANY OTHER TIME.</para>
<para>See the example implemented in FreeRTOS/Demo/Minimal/MessageBufferAMP.c for additional information.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xStreamBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle of the stream buffer to which data was written.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pxHigherPriorityTaskWoken</parametername>
</parameternamelist>
<parameterdescription>
<para>*pxHigherPriorityTaskWoken should be initialised to pdFALSE before it is passed into <ref refid="message__buffer_8h_1a45918d12bf530cb2b4bf21c0936460a9" kindref="member">xMessageBufferSendCompletedFromISR()</ref>. If calling <ref refid="message__buffer_8h_1a45918d12bf530cb2b4bf21c0936460a9" kindref="member">xMessageBufferSendCompletedFromISR()</ref> removes a task from the Blocked state, and the task has a priority above the priority of the currently running task, then *pxHigherPriorityTaskWoken will get set to pdTRUE indicating that a context switch should be performed before exiting the ISR.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If a task was removed from the Blocked state then pdTRUE is returned. Otherwise pdFALSE is returned.</para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
