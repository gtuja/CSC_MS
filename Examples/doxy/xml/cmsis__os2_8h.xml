<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="cmsis__os2_8h" kind="file" language="C++">
    <compoundname>cmsis_os2.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="cmsis__os_8h" local="yes">NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h</includedby>
    <includedby refid="cmsis__os2_8c" local="yes">NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h</label>
        <link refid="cmsis__os2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h</label>
        <link refid="cmsis__os_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c</label>
        <link refid="cmsis__os2_8c"/>
      </node>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h</label>
        <link refid="cmsis__os2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Src/main.c</label>
        <link refid="_free_r_t_o_s___queues_2_src_2main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structos_version__t" prot="public">osVersion_t</innerclass>
    <innerclass refid="structos_thread_attr__t" prot="public">osThreadAttr_t</innerclass>
    <innerclass refid="structos_timer_attr__t" prot="public">osTimerAttr_t</innerclass>
    <innerclass refid="structos_event_flags_attr__t" prot="public">osEventFlagsAttr_t</innerclass>
    <innerclass refid="structos_mutex_attr__t" prot="public">osMutexAttr_t</innerclass>
    <innerclass refid="structos_semaphore_attr__t" prot="public">osSemaphoreAttr_t</innerclass>
    <innerclass refid="structos_memory_pool_attr__t" prot="public">osMemoryPoolAttr_t</innerclass>
    <innerclass refid="structos_message_queue_attr__t" prot="public">osMessageQueueAttr_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="cmsis__os2_8h_1a153a4a31b276a9758959580538720a51" prot="public" static="no">
        <name>__NO_RETURN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="38" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a9eb9a7a797a42e4b55eb171ecc609ddb" prot="public" static="no">
        <name>osWaitForever</name>
        <initializer>0xFFFFFFFFU</initializer>
        <briefdescription>
<para>Wait forever timeout value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="151" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a18e63587b8450d5b8798b6f6ec04e012" prot="public" static="no">
        <name>osFlagsWaitAny</name>
        <initializer>0x00000000U</initializer>
        <briefdescription>
<para>Wait for any flag (default). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="154" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" prot="public" static="no">
        <name>osFlagsWaitAll</name>
        <initializer>0x00000001U</initializer>
        <briefdescription>
<para>Wait for all flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="155" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="155" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" compoundref="cmsis__os2_8c" startline="1224" endline="1272">osEventFlagsWait</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" prot="public" static="no">
        <name>osFlagsNoClear</name>
        <initializer>0x00000002U</initializer>
        <briefdescription>
<para>Do not clear flags which have been specified to wait for. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="156" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="156" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" compoundref="cmsis__os2_8c" startline="1224" endline="1272">osEventFlagsWait</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a01c1359c3a5640bff6e08f09bf94ce3a" prot="public" static="no">
        <name>osFlagsError</name>
        <initializer>0x80000000U</initializer>
        <briefdescription>
<para>Error indicator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="159" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a3b1d9fbb83d64eedb62f831c9be647c3" prot="public" static="no">
        <name>osFlagsErrorUnknown</name>
        <initializer>0xFFFFFFFFU</initializer>
        <briefdescription>
<para>osError (-1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="160" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a2e951c3f1c3b7bff4eca3d7836cd19ca" prot="public" static="no">
        <name>osFlagsErrorTimeout</name>
        <initializer>0xFFFFFFFEU</initializer>
        <briefdescription>
<para>osErrorTimeout (-2). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="161" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a4db38b50da1889bcaaa7f747e844f904" prot="public" static="no">
        <name>osFlagsErrorResource</name>
        <initializer>0xFFFFFFFDU</initializer>
        <briefdescription>
<para>osErrorResource (-3). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="162" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1aa8a95ef938f8f5a9fcb815ec53184f77" prot="public" static="no">
        <name>osFlagsErrorParameter</name>
        <initializer>0xFFFFFFFCU</initializer>
        <briefdescription>
<para>osErrorParameter (-4). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="163" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1aea3abd186643f539877e894b62b63448" prot="public" static="no">
        <name>osFlagsErrorISR</name>
        <initializer>0xFFFFFFFAU</initializer>
        <briefdescription>
<para>osErrorISR (-6). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="164" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1aa9336c1073858d6b118e2e011636246f" prot="public" static="no">
        <name>osThreadDetached</name>
        <initializer>0x00000000U</initializer>
        <briefdescription>
<para>Thread created in detached mode (default) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="167" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" prot="public" static="no">
        <name>osThreadJoinable</name>
        <initializer>0x00000001U</initializer>
        <briefdescription>
<para>Thread created in joinable mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="168" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="168" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" compoundref="cmsis__os2_8c" startline="444" endline="510">osThreadNew</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a65c2482cc64a35d03871f3180f305926" prot="public" static="no">
        <name>osMutexRecursive</name>
        <initializer>0x00000001U</initializer>
        <briefdescription>
<para>Recursive mutex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="171" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a40fba270cb31a977b3bd551d41eb9599" prot="public" static="no">
        <name>osMutexPrioInherit</name>
        <initializer>0x00000002U</initializer>
        <briefdescription>
<para>Priority inherit protocol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="172" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1af0e1dee376798b4d516d164981526780" prot="public" static="no">
        <name>osMutexRobust</name>
        <initializer>0x00000008U</initializer>
        <briefdescription>
<para>Robust mutex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="173" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8h_1a78775dae56f0c9698cdab6e1ca74503f" prot="public" static="no">
        <name>TZ_MODULEID_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="211" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="211" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" prot="public" static="no" strong="no">
        <type></type>
        <name>osKernelState_t</name>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" prot="public">
          <name>osKernelInactive</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>Inactive. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" prot="public">
          <name>osKernelReady</name>
          <initializer>=  1</initializer>
          <briefdescription>
<para>Ready. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" prot="public">
          <name>osKernelRunning</name>
          <initializer>=  2</initializer>
          <briefdescription>
<para>Running. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" prot="public">
          <name>osKernelLocked</name>
          <initializer>=  3</initializer>
          <briefdescription>
<para>Locked. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a3240807627595e80f59a46434639b765" prot="public">
          <name>osKernelSuspended</name>
          <initializer>=  4</initializer>
          <briefdescription>
<para>Suspended. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a1b942a8c76daeba2925a763d4d7567a2" prot="public">
          <name>osKernelError</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a9cc4cc562a20a28c0f6f4b878ecf2df5" prot="public">
          <name>osKernelReserved</name>
          <initializer>= 0x7FFFFFFFU</initializer>
          <briefdescription>
<para>Prevents enum down-size compiler optimization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Kernel state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="60" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" prot="public" static="no" strong="no">
        <type></type>
        <name>osThreadState_t</name>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da7d7d4f719a1be6daa63a251563585fdd" prot="public">
          <name>osThreadInactive</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>Inactive. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" prot="public">
          <name>osThreadReady</name>
          <initializer>=  1</initializer>
          <briefdescription>
<para>Ready. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" prot="public">
          <name>osThreadRunning</name>
          <initializer>=  2</initializer>
          <briefdescription>
<para>Running. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" prot="public">
          <name>osThreadBlocked</name>
          <initializer>=  3</initializer>
          <briefdescription>
<para>Blocked. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" prot="public">
          <name>osThreadTerminated</name>
          <initializer>=  4</initializer>
          <briefdescription>
<para>Terminated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" prot="public">
          <name>osThreadError</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da8872f7e352370eb11ee772c7dcca6e6c" prot="public">
          <name>osThreadReserved</name>
          <initializer>= 0x7FFFFFFF</initializer>
          <briefdescription>
<para>Prevents enum down-size compiler optimization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Thread state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="71" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" prot="public" static="no" strong="no">
        <type></type>
        <name>osPriority_t</name>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" prot="public">
          <name>osPriorityNone</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>No priority (not initialized). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" prot="public">
          <name>osPriorityIdle</name>
          <initializer>=  1</initializer>
          <briefdescription>
<para>Reserved for Idle thread. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61cb822239ac8f66dfbdc7291598a3d4" prot="public">
          <name>osPriorityLow</name>
          <initializer>=  8</initializer>
          <briefdescription>
<para>Priority: low. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaba2b6919f0b630c8c1b2c940e3bfadbe" prot="public">
          <name>osPriorityLow1</name>
          <initializer>=  8+1</initializer>
          <briefdescription>
<para>Priority: low + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca78ad5d00aa07a2b4bf30a639544f5507" prot="public">
          <name>osPriorityLow2</name>
          <initializer>=  8+2</initializer>
          <briefdescription>
<para>Priority: low + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca28ccb07942c16f5f5efefb6cf68a7f50" prot="public">
          <name>osPriorityLow3</name>
          <initializer>=  8+3</initializer>
          <briefdescription>
<para>Priority: low + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5a4a4f26d5b220a968e221e854f69a81" prot="public">
          <name>osPriorityLow4</name>
          <initializer>=  8+4</initializer>
          <briefdescription>
<para>Priority: low + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad69b8c14809bc5bdce4887f5a57d9353" prot="public">
          <name>osPriorityLow5</name>
          <initializer>=  8+5</initializer>
          <briefdescription>
<para>Priority: low + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac0f188468664d06d4cd9e6e1ed351393" prot="public">
          <name>osPriorityLow6</name>
          <initializer>=  8+6</initializer>
          <briefdescription>
<para>Priority: low + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5b151ebba7fdeb1baaa9b7b420890b7a" prot="public">
          <name>osPriorityLow7</name>
          <initializer>=  8+7</initializer>
          <briefdescription>
<para>Priority: low + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca193b650117c209b4a203954542bcc3e6" prot="public">
          <name>osPriorityBelowNormal</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>Priority: below normal. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca9138da7187690b15f52d8e5729c18da5" prot="public">
          <name>osPriorityBelowNormal1</name>
          <initializer>= 16+1</initializer>
          <briefdescription>
<para>Priority: below normal + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca4f081d6735bf2f513338b07eddf13ae3" prot="public">
          <name>osPriorityBelowNormal2</name>
          <initializer>= 16+2</initializer>
          <briefdescription>
<para>Priority: below normal + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19c013690d0d6bf3ac90707942be3fdf" prot="public">
          <name>osPriorityBelowNormal3</name>
          <initializer>= 16+3</initializer>
          <briefdescription>
<para>Priority: below normal + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca36931ad6cee5e4700e2c8622bdd2cd24" prot="public">
          <name>osPriorityBelowNormal4</name>
          <initializer>= 16+4</initializer>
          <briefdescription>
<para>Priority: below normal + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0bcd9ad1e7a02e3bf03be7dcc8ece38e" prot="public">
          <name>osPriorityBelowNormal5</name>
          <initializer>= 16+5</initializer>
          <briefdescription>
<para>Priority: below normal + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabd3cc7df5b92b752ddf1e7843a786c05" prot="public">
          <name>osPriorityBelowNormal6</name>
          <initializer>= 16+6</initializer>
          <briefdescription>
<para>Priority: below normal + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab18e3bda7b5e418e309a62d6267ea14b" prot="public">
          <name>osPriorityBelowNormal7</name>
          <initializer>= 16+7</initializer>
          <briefdescription>
<para>Priority: below normal + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" prot="public">
          <name>osPriorityNormal</name>
          <initializer>= 24</initializer>
          <briefdescription>
<para>Priority: normal. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3e70c19e03d5a54e66bd071f0776782c" prot="public">
          <name>osPriorityNormal1</name>
          <initializer>= 24+1</initializer>
          <briefdescription>
<para>Priority: normal + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19e96f2b025b6462a43b1965043c8205" prot="public">
          <name>osPriorityNormal2</name>
          <initializer>= 24+2</initializer>
          <briefdescription>
<para>Priority: normal + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca402bd7ab26fb57c8cee8cf94168f4c91" prot="public">
          <name>osPriorityNormal3</name>
          <initializer>= 24+3</initializer>
          <briefdescription>
<para>Priority: normal + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca93ef07d3a107aeee6508bfd29ba3485d" prot="public">
          <name>osPriorityNormal4</name>
          <initializer>= 24+4</initializer>
          <briefdescription>
<para>Priority: normal + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca68f3f6fdaa639de300277802aa13a0ab" prot="public">
          <name>osPriorityNormal5</name>
          <initializer>= 24+5</initializer>
          <briefdescription>
<para>Priority: normal + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca8221eb0d059726a6309f1f2d0cdb6204" prot="public">
          <name>osPriorityNormal6</name>
          <initializer>= 24+6</initializer>
          <briefdescription>
<para>Priority: normal + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca049abd04f8951415407ec9d92bd9b80b" prot="public">
          <name>osPriorityNormal7</name>
          <initializer>= 24+7</initializer>
          <briefdescription>
<para>Priority: normal + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b36cd9cd38652c2bc6d4803990674b" prot="public">
          <name>osPriorityAboveNormal</name>
          <initializer>= 32</initializer>
          <briefdescription>
<para>Priority: above normal. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabfeafc713edfc7b9130aa5c762d68998" prot="public">
          <name>osPriorityAboveNormal1</name>
          <initializer>= 32+1</initializer>
          <briefdescription>
<para>Priority: above normal + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca901acf86070e06f5990b611734ee2562" prot="public">
          <name>osPriorityAboveNormal2</name>
          <initializer>= 32+2</initializer>
          <briefdescription>
<para>Priority: above normal + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad566b876b64e6efdc3eba0fc04e54013" prot="public">
          <name>osPriorityAboveNormal3</name>
          <initializer>= 32+3</initializer>
          <briefdescription>
<para>Priority: above normal + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6ccac37d7dae4586a2031966d36a63ec" prot="public">
          <name>osPriorityAboveNormal4</name>
          <initializer>= 32+4</initializer>
          <briefdescription>
<para>Priority: above normal + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae36e8b38ee046a3104bcccabb10cf78c" prot="public">
          <name>osPriorityAboveNormal5</name>
          <initializer>= 32+5</initializer>
          <briefdescription>
<para>Priority: above normal + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61e6ce27e1e0f34f2540b413b8a8b207" prot="public">
          <name>osPriorityAboveNormal6</name>
          <initializer>= 32+6</initializer>
          <briefdescription>
<para>Priority: above normal + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecadbbb0fed3ada6b9b50d4a628abc2a67d" prot="public">
          <name>osPriorityAboveNormal7</name>
          <initializer>= 32+7</initializer>
          <briefdescription>
<para>Priority: above normal + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca914433934143a9ba767e59577c56e6c2" prot="public">
          <name>osPriorityHigh</name>
          <initializer>= 40</initializer>
          <briefdescription>
<para>Priority: high. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b7a7e6febf12444a84e90edfce36cb" prot="public">
          <name>osPriorityHigh1</name>
          <initializer>= 40+1</initializer>
          <briefdescription>
<para>Priority: high + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca40a120cf8bbc42e575455c027f3d9b03" prot="public">
          <name>osPriorityHigh2</name>
          <initializer>= 40+2</initializer>
          <briefdescription>
<para>Priority: high + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0b15518b0b5321a29efa0b42b2f8c759" prot="public">
          <name>osPriorityHigh3</name>
          <initializer>= 40+3</initializer>
          <briefdescription>
<para>Priority: high + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecafe5a4f393fab04551ac7d93e80cdf0fb" prot="public">
          <name>osPriorityHigh4</name>
          <initializer>= 40+4</initializer>
          <briefdescription>
<para>Priority: high + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5960841bfbdd959b163429e8502ea4e9" prot="public">
          <name>osPriorityHigh5</name>
          <initializer>= 40+5</initializer>
          <briefdescription>
<para>Priority: high + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5714dda6effc1a3f8ec155d97e3e69bc" prot="public">
          <name>osPriorityHigh6</name>
          <initializer>= 40+6</initializer>
          <briefdescription>
<para>Priority: high + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca63ad0cc52a701ef3d9df52b59b995652" prot="public">
          <name>osPriorityHigh7</name>
          <initializer>= 40+7</initializer>
          <briefdescription>
<para>Priority: high + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca1485dec3702434a1ec3cb74c7a17a4af" prot="public">
          <name>osPriorityRealtime</name>
          <initializer>= 48</initializer>
          <briefdescription>
<para>Priority: realtime. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf685a06b30f0635476e21347a986305b" prot="public">
          <name>osPriorityRealtime1</name>
          <initializer>= 48+1</initializer>
          <briefdescription>
<para>Priority: realtime + 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab832bd9de84e5eec2ecad69d085dadff" prot="public">
          <name>osPriorityRealtime2</name>
          <initializer>= 48+2</initializer>
          <briefdescription>
<para>Priority: realtime + 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3f2261e5e733e92844ae8c630f2f9eaa" prot="public">
          <name>osPriorityRealtime3</name>
          <initializer>= 48+3</initializer>
          <briefdescription>
<para>Priority: realtime + 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf614e3dc966d559cd9d9d2a0f78ebe70" prot="public">
          <name>osPriorityRealtime4</name>
          <initializer>= 48+4</initializer>
          <briefdescription>
<para>Priority: realtime + 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaff84f31ceff203c711fb9476443507df" prot="public">
          <name>osPriorityRealtime5</name>
          <initializer>= 48+5</initializer>
          <briefdescription>
<para>Priority: realtime + 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca80ae9d0dd256312c0c8f44af48316194" prot="public">
          <name>osPriorityRealtime6</name>
          <initializer>= 48+6</initializer>
          <briefdescription>
<para>Priority: realtime + 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaa76da6825c4bd31c4958200bc289103b" prot="public">
          <name>osPriorityRealtime7</name>
          <initializer>= 48+7</initializer>
          <briefdescription>
<para>Priority: realtime + 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" prot="public">
          <name>osPriorityISR</name>
          <initializer>= 56</initializer>
          <briefdescription>
<para>Reserved for ISR deferred thread. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" prot="public">
          <name>osPriorityError</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>System cannot determine priority or illegal priority. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac86c171f8d466cced0cb1b03bb03343b" prot="public">
          <name>osPriorityReserved</name>
          <initializer>= 0x7FFFFFFF</initializer>
          <briefdescription>
<para>Prevents enum down-size compiler optimization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Priority values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="82" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="82" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" prot="public" static="no" strong="no">
        <type></type>
        <name>osTimerType_t</name>
        <enumvalue id="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ad21712f8df5f97069c82dc9eec37b951" prot="public">
          <name>osTimerOnce</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>One-shot timer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ab9c91f9699162edb09bb7c90c11c8788" prot="public">
          <name>osTimerPeriodic</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Repeating timer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Timer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="145" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="enum" id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" prot="public" static="no" strong="no">
        <type></type>
        <name>osStatus_t</name>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" prot="public">
          <name>osOK</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>Operation completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" prot="public">
          <name>osError</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Unspecified RTOS error: run-time error but no other error message fits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" prot="public">
          <name>osErrorTimeout</name>
          <initializer>= -2</initializer>
          <briefdescription>
<para>Operation not completed within the timeout period. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" prot="public">
          <name>osErrorResource</name>
          <initializer>= -3</initializer>
          <briefdescription>
<para>Resource not available. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" prot="public">
          <name>osErrorParameter</name>
          <initializer>= -4</initializer>
          <briefdescription>
<para>Parameter error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eaf1fac0240218e51eb30a13da2f8aae81" prot="public">
          <name>osErrorNoMemory</name>
          <initializer>= -5</initializer>
          <briefdescription>
<para>System is out of memory: it was impossible to allocate or reserve memory for the operation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" prot="public">
          <name>osErrorISR</name>
          <initializer>= -6</initializer>
          <briefdescription>
<para>Not allowed in ISR context: the function cannot be called from interrupt service routines. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea66cc9ce9106b508df0e4a733a55a439d" prot="public">
          <name>osStatusReserved</name>
          <initializer>= 0x7FFFFFFF</initializer>
          <briefdescription>
<para>Prevents enum down-size compiler optimization. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Status code values returned by CMSIS-RTOS functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="176" column="1" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="176" bodyend="185"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* osThreadFunc_t) (void *argument)</definition>
        <argsstring>)(void *argument)</argsstring>
        <name>osThreadFunc_t</name>
        <briefdescription>
<para>Entry point of a thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="139" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* osTimerFunc_t) (void *argument)</definition>
        <argsstring>)(void *argument)</argsstring>
        <name>osTimerFunc_t</name>
        <briefdescription>
<para>Timer callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="142" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osThreadId_t</definition>
        <argsstring></argsstring>
        <name>osThreadId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Thread ID identifies the thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="189" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osTimerId_t</definition>
        <argsstring></argsstring>
        <name>osTimerId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer ID identifies the timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="192" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osEventFlagsId_t</definition>
        <argsstring></argsstring>
        <name>osEventFlagsId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event Flags ID identifies the event flags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="195" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osMutexId_t</definition>
        <argsstring></argsstring>
        <name>osMutexId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mutex ID identifies the mutex. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="198" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osSemaphoreId_t</definition>
        <argsstring></argsstring>
        <name>osSemaphoreId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Semaphore ID identifies the semaphore. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="201" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osMemoryPoolId_t</definition>
        <argsstring></argsstring>
        <name>osMemoryPoolId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Memory Pool ID identifies the memory pool. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="204" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* osMessageQueueId_t</definition>
        <argsstring></argsstring>
        <name>osMessageQueueId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message Queue ID identifies the message queue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="207" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cmsis__os2_8h_1ad5ef21485fe5f60263bc0b48006202cb" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t TZ_ModuleId_t</definition>
        <argsstring></argsstring>
        <name>TZ_ModuleId_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data type that identifies secure software modules called by a process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="213" column="18" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" bodystart="213" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="cmsis__os2_8h_1ae818f6611d25ba3140bede410a52d659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelInitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the RTOS Kernel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="287" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="198" bodyend="220" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="287" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" compoundref="cmsis__os2_8h" startline="61">osKernelInactive</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee">vPortDefineHeapRegions</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a6f7764e7250c5c5364c00c45a5d1d199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelGetInfo</definition>
        <argsstring>(osVersion_t *version, char *id_buf, uint32_t id_size)</argsstring>
        <name>osKernelGetInfo</name>
        <param>
          <type><ref refid="structos_version__t" kindref="compound">osVersion_t</ref> *</type>
          <declname>version</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>id_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id_size</declname>
        </param>
        <briefdescription>
<para>Get RTOS Kernel Information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">version</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for retrieving version information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">id_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for retrieving kernel identification string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer for kernel identification string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="294" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="222" bodyend="238" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="294" declcolumn="12"/>
        <references refid="structos_version__t_1a399e0292985f12145a0e61c0b50a50ec" compoundref="cmsis__os2_8h" startline="55">osVersion_t::api</references>
        <references refid="structos_version__t_1a3a589e0cc665071abb720afda12e9a15" compoundref="cmsis__os2_8h" startline="56">osVersion_t::kernel</references>
        <references refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" compoundref="cmsis__os2_8c" startline="94">KERNEL_ID</references>
        <references refid="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" compoundref="cmsis__os2_8c" startline="90" endline="92">KERNEL_VERSION</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a48b69b81012fce051f639be288b243ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref></type>
        <definition>osKernelState_t osKernelGetState</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current RTOS Kernel state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current RTOS Kernel state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="298" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="240" bodyend="263" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="298" declcolumn="17"/>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" compoundref="cmsis__os2_8h" startline="61">osKernelInactive</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" compoundref="cmsis__os2_8h" startline="64">osKernelLocked</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" compoundref="cmsis__os2_8h" startline="63">osKernelRunning</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a9ae2cc00f0d89d7b6a307bba942b5221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelStart</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelStart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Start the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="302" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="265" bodyend="286" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="302" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" compoundref="cmsis__os2_8h" startline="63">osKernelRunning</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" compoundref="cmsis__os2_8c" startline="174" endline="181">SVC_Setup</references>
        <references refid="task_8h_1aaf9dca1065c60abdeb309d56ab7293cb" compoundref="tasks_8c" startline="1974" endline="2095">vTaskStartScheduler</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a948609ee930d9b38336b9e1c2a4dfe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelLock</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelLock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Lock the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>previous lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="306" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="288" bodyend="313" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="306" declcolumn="9"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1af401728b4657456198c33fe75f8d6720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelUnlock</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelUnlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unlock the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>previous lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="310" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="315" bodyend="345" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="310" declcolumn="9"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ae7d0a71b9586cbbb49fcbdf6a04f0289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelRestoreLock</definition>
        <argsstring>(int32_t lock)</argsstring>
        <name>osKernelRestoreLock</name>
        <param>
          <type>int32_t</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
<para>Restore the RTOS Kernel scheduler lock state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lock</parametername>
</parameternamelist>
<parameterdescription>
<para>lock state obtained by <ref refid="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" kindref="member">osKernelLock</ref> or <ref refid="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" kindref="member">osKernelUnlock</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="315" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="347" bodyend="381" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="315" declcolumn="9"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ae26683e1606ec633354a2876c68f0c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelSuspend</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelSuspend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Suspend the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time in ticks, for how long the system can sleep or power-down. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="319" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="319" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a8c4b4d7ed34cab73c001665d9176aced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void osKernelResume</definition>
        <argsstring>(uint32_t sleep_ticks)</argsstring>
        <name>osKernelResume</name>
        <param>
          <type>uint32_t</type>
          <declname>sleep_ticks</declname>
        </param>
        <briefdescription>
<para>Resume the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sleep_ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>time in ticks for how long the system was in sleep or power-down mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="323" column="6" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="323" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a84bcdbf2fb76b10c8df4e439f0c7e11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetTickCount</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetTickCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel tick count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RTOS kernel current tick count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="327" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="383" bodyend="393" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="327" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
        <references refid="task_8h_1a092be3fd5752625303c307620be523ff" compoundref="tasks_8c" startline="2318" endline="2346">xTaskGetTickCountFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7a8d7bd927eaaa58999f91d7d6310cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetTickFreq</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetTickFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel tick frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>frequency of the kernel tick in hertz, i.e. kernel ticks per second. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="331" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="395" bodyend="397" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="331" declcolumn="10"/>
        <references refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" compoundref="_free_r_t_o_s_config_8h" startline="68">configTICK_RATE_HZ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ae0fcaff6cecfb4013bb556c87afcd7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetSysTimerCount</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetSysTimerCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel system timer count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RTOS kernel current system timer count as 32-bit value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="335" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="415" bodyend="436" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="335" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1a5ebf8cfb0698df19b01d6294912068b9" compoundref="cmsis__os2_8c" startline="65">IS_IRQ_MASKED</references>
        <references refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" compoundref="cmsis__os2_8c" startline="400" endline="403">OS_Tick_GetCount</references>
        <references refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" compoundref="cmsis__os2_8c" startline="411" endline="413">OS_Tick_GetInterval</references>
        <references refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" compoundref="cmsis__os2_8c" startline="406" endline="408">OS_Tick_GetOverflow</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a4d69215a93220f72be3684cad582f16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetSysTimerFreq</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetSysTimerFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel system timer frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>frequency of the system timer in hertz, i.e. timer ticks per second. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="339" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="438" bodyend="440" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="339" declcolumn="10"/>
        <references refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" compoundref="_free_r_t_o_s_config_8h" startline="67">configCPU_CLOCK_HZ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a48d68b8666d99d28fa646ee1d2182b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
        <definition>osThreadId_t osThreadNew</definition>
        <argsstring>(osThreadFunc_t func, void *argument, const osThreadAttr_t *attr)</argsstring>
        <name>osThreadNew</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" kindref="member">osThreadFunc_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>const <ref refid="structos_thread_attr__t" kindref="compound">osThreadAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create a thread and add it to Active Threads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>thread function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argument</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer that is passed to the thread function as start argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>thread attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="349" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="444" bodyend="510" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="349" declcolumn="14"/>
        <references refid="structos_thread_attr__t_1a5f48a821ddc41410fe625860b6380d3a" compoundref="cmsis__os2_8h" startline="220">osThreadAttr_t::attr_bits</references>
        <references refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" compoundref="cmsis__os2_8h" startline="221">osThreadAttr_t::cb_mem</references>
        <references refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" compoundref="cmsis__os2_8h" startline="222">osThreadAttr_t::cb_size</references>
        <references refid="_free_r_t_o_s_config_8h_1a6c534a6cf8a00528fe0be42083484f9a" compoundref="_free_r_t_o_s_config_8h" startline="70">configMINIMAL_STACK_SIZE</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" compoundref="cmsis__os2_8h" startline="219">osThreadAttr_t::name</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" compoundref="cmsis__os2_8h" startline="84">osPriorityIdle</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" compoundref="cmsis__os2_8h" startline="133">osPriorityISR</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" compoundref="cmsis__os2_8h" startline="83">osPriorityNone</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" compoundref="cmsis__os2_8h" startline="101">osPriorityNormal</references>
        <references refid="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" compoundref="cmsis__os2_8h" startline="168">osThreadJoinable</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" compoundref="cmsis__os2_8h" startline="225">osThreadAttr_t::priority</references>
        <references refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" compoundref="cmsis__os2_8h" startline="223">osThreadAttr_t::stack_mem</references>
        <references refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" compoundref="cmsis__os2_8h" startline="224">osThreadAttr_t::stack_size</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ac3230f3a55a297514b013ebf38f27e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osThreadGetName</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get name of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="354" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="512" bodyend="523" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="354" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1aedab278c23c41dcbfdf312d383bdb342" compoundref="tasks_8c" startline="2357" endline="2366">pcTaskGetName</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a8df03548e89fbc56402a5cd584a505da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
        <definition>osThreadId_t osThreadGetId</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadGetId</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the thread ID of the current running thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>thread ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="358" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="525" bodyend="531" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="358" declcolumn="14"/>
        <references refid="task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1acc0a98b42f0a5928e12dc91dc76866b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref></type>
        <definition>osThreadState_t osThreadGetState</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetState</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get current thread state of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current thread state of the specified thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="363" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="533" bodyend="553" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="363" declcolumn="17"/>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af" compoundref="task_8h" startline="83">eBlocked</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" compoundref="task_8h" startline="85">eDeleted</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86" compoundref="task_8h" startline="86">eInvalid</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83" compoundref="task_8h" startline="82">eReady</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6" compoundref="task_8h" startline="81">eRunning</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72" compoundref="task_8h" startline="84">eSuspended</references>
        <references refid="task_8h_1a954df77397d616484edb7c58c7760b10">eTaskGetState</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" compoundref="cmsis__os2_8h" startline="75">osThreadBlocked</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" compoundref="cmsis__os2_8h" startline="77">osThreadError</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" compoundref="cmsis__os2_8h" startline="73">osThreadReady</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" compoundref="cmsis__os2_8h" startline="74">osThreadRunning</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" compoundref="cmsis__os2_8h" startline="76">osThreadTerminated</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab9f8bd715d671c6ee27644867bc1bf65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadGetStackSize</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetStackSize</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get stack size of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>stack size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="368" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="368" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a9c83bd5dd8de329701775d6ef7012720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadGetStackSpace</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetStackSpace</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get available stack space of a thread based on stack watermark recording during execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remaining stack space in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="373" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="555" bodyend="566" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="373" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a799967af01d328132cde814e47733437">uxTaskGetStackHighWaterMark</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a861a420fb2d643115b06622903fb3bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadSetPriority</definition>
        <argsstring>(osThreadId_t thread_id, osPriority_t priority)</argsstring>
        <name>osThreadSetPriority</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Change priority of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>new priority value for the thread function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="379" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="568" bodyend="584" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="379" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" compoundref="cmsis__os2_8h" startline="84">osPriorityIdle</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" compoundref="cmsis__os2_8h" startline="133">osPriorityISR</references>
        <references refid="task_8h_1a1ee31be76e326e0644dbd6ac40a787b6">vTaskPrioritySet</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a0aeaf349604f456e68e78f9d3b42e44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref></type>
        <definition>osPriority_t osThreadGetPriority</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetPriority</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get current priority of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current priority value of the specified thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="384" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="586" bodyend="597" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="384" declcolumn="14"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" compoundref="cmsis__os2_8h" startline="134">osPriorityError</references>
        <references refid="task_8h_1a18d1148c845f5c4bff3b9e5b2077e058">uxTaskPriorityGet</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ad01c7ec26535b1de6b018bb9466720e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadYield</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadYield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pass control to next thread that is in state <bold>READY</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="388" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="599" bodyend="610" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="388" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a767e474430db1e60056e9678763f9202" compoundref="task_8h" startline="173">taskYIELD</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1aa9de419d0152bf77e9bbcd1f369fb990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadSuspend</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadSuspend</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Suspend execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="393" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="613" bodyend="629" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="393" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a84d4e660b04630be2939d91b3c2412f8">vTaskSuspend</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a3dbad90eff394b02de76a452c84c5d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadResume</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadResume</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Resume execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="398" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="631" bodyend="647" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="398" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44">vTaskResume</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1aaad14cd9547341ea8109dc4e8540f1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadDetach</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadDetach</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Detach a thread (thread storage can be reclaimed when thread terminates). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="403" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="403" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a3fca90fb0679afeb968aa8c3d5874487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadJoin</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadJoin</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Wait for specified thread to terminate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="408" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="408" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a76c223e3a19bc16000e7017202610c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void osThreadExit</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadExit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Terminate execution of current running thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="411" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="650" bodyend="655" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="411" declcolumn="9"/>
        <references refid="task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a2f8ba6dba6e9c065a6e236ffd410d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadTerminate</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadTerminate</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Terminate execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="416" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="657" bodyend="684" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="416" declcolumn="12"/>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" compoundref="task_8h" startline="85">eDeleted</references>
        <references refid="task_8h_1a954df77397d616484edb7c58c7760b10">eTaskGetState</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a495b3f812224e7301f23a691793765db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadGetCount</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadGetCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of active threads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of active threads. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="420" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="686" bodyend="696" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="420" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" compoundref="tasks_8c" startline="2349" endline="2354">uxTaskGetNumberOfTasks</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a5606604d56e21ece1a654664be877439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadEnumerate</definition>
        <argsstring>(osThreadId_t *thread_array, uint32_t array_items)</argsstring>
        <name>osThreadEnumerate</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref> *</type>
          <declname>thread_array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>array_items</declname>
        </param>
        <briefdescription>
<para>Enumerate active threads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">thread_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to array for retrieving thread IDs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array_items</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of items in array for retrieving thread IDs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of enumerated threads. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="426" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="699" bodyend="725" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="426" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" compoundref="heap__4_8c" startline="115" endline="263">pvPortMalloc</references>
        <references refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" compoundref="tasks_8c" startline="2349" endline="2354">uxTaskGetNumberOfTasks</references>
        <references refid="task_8h_1aa4603f3de3d809e9beb18d10fbac005d">uxTaskGetSystemState</references>
        <references refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" compoundref="heap__4_8c" startline="266" endline="312">vPortFree</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a6f89ef9caded1d9963c7b12b0f6412c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadFlagsSet</definition>
        <argsstring>(osThreadId_t thread_id, uint32_t flags)</argsstring>
        <name>osThreadFlagsSet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set the specified Thread Flags of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags of the thread that shall be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread flags after setting or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="435" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="435" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a656abc1c862c5b9a2b13584c42cc0bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadFlagsClear</definition>
        <argsstring>(uint32_t flags)</argsstring>
        <name>osThreadFlagsClear</name>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear the specified Thread Flags of current running thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags of the thread that shall be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="440" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="440" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a85c8d2c89466e25abbcb545d9ddd71ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadFlagsGet</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadFlagsGet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Thread Flags of current running thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current thread flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="444" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="444" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ac11542ad6300b600f872fc96e340ec2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadFlagsWait</definition>
        <argsstring>(uint32_t flags, uint32_t options, uint32_t timeout)</argsstring>
        <name>osThreadFlagsWait</name>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for one or more Thread Flags of the current running thread to become signaled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies flags options (osFlagsXxxx). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="451" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="451" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1af6055a51390ef65b6b6edc28bf47322e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osDelay</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>osDelay</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Wait for Timeout (Time Delay). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>time ticks value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="459" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="881" bodyend="896" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="459" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1aa154068cecd7f31446a7a84af44ab1a3">vTaskDelay</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a5722e77ac0684aebdfe2a7927efa501e" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="227" endline="252">MessageQueueProducer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a3c807924c2d6d43bc2ffb49da3f7f3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osDelayUntil</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>osDelayUntil</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Wait until specified time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>absolute time in ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="464" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="898" bodyend="924" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="464" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a067da3e949e248096ec6c01f9cb75a47">vTaskDelayUntil</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
        <definition>osTimerId_t osTimerNew</definition>
        <argsstring>(osTimerFunc_t func, osTimerType_t type, void *argument, const osTimerAttr_t *attr)</argsstring>
        <name>osTimerNew</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" kindref="member">osTimerFunc_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" kindref="member">osTimerType_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>const <ref refid="structos_timer_attr__t" kindref="compound">osTimerAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>function pointer to callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ad21712f8df5f97069c82dc9eec37b951" kindref="member">osTimerOnce</ref> for one-shot or <ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ab9c91f9699162edb09bb7c90c11c8788" kindref="member">osTimerPeriodic</ref> for periodic behavior. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argument</parametername>
</parameternamelist>
<parameterdescription>
<para>argument to the timer callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>timer attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>timer ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="475" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="475" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7938dde88ada1a01b60f41cf120069c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osTimerGetName</definition>
        <argsstring>(osTimerId_t timer_id)</argsstring>
        <name>osTimerGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
<para>Get name of a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>timer ID obtained by <ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="480" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="480" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab6ee2859ea657641b7adfac599b8121d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osTimerStart</definition>
        <argsstring>(osTimerId_t timer_id, uint32_t ticks)</argsstring>
        <name>osTimerStart</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
          <declname>timer_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Start or restart a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>timer ID obtained by <ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>time ticks value of the timer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="486" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="486" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1abd7a89356da7717293eb0bc5d87b8ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osTimerStop</definition>
        <argsstring>(osTimerId_t timer_id)</argsstring>
        <name>osTimerStop</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
<para>Stop a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>timer ID obtained by <ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="491" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="491" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a69d3589f54194022c30dd01e45ec6741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osTimerIsRunning</definition>
        <argsstring>(osTimerId_t timer_id)</argsstring>
        <name>osTimerIsRunning</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
<para>Check if a timer is running. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>timer ID obtained by <ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 not running, 1 running. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="496" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="496" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ad0001dd74721ab461789324806db2453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osTimerDelete</definition>
        <argsstring>(osTimerId_t timer_id)</argsstring>
        <name>osTimerDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref></type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
<para>Delete a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_id</parametername>
</parameternamelist>
<parameterdescription>
<para>timer ID obtained by <ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="501" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="501" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab14b1caeb12ffa42cce1bfe889cd07df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
        <definition>osEventFlagsId_t osEventFlagsNew</definition>
        <argsstring>(const osEventFlagsAttr_t *attr)</argsstring>
        <name>osEventFlagsNew</name>
        <param>
          <type>const <ref refid="structos_event_flags_attr__t" kindref="compound">osEventFlagsAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize an Event Flags object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="509" column="18" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1110" bodyend="1148" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="509" declcolumn="18"/>
        <references refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" compoundref="cmsis__os2_8h" startline="242">osEventFlagsAttr_t::cb_mem</references>
        <references refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" compoundref="cmsis__os2_8h" startline="243">osEventFlagsAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a59f4ddf0ee8c395b1672bb978d1cfc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osEventFlagsGetName</definition>
        <argsstring>(osEventFlagsId_t ef_id)</argsstring>
        <name>osEventFlagsGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <briefdescription>
<para>Get name of an Event Flags object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="514" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="514" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a33b71d14cecf90b4e72639dd19f23a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsSet</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags)</argsstring>
        <name>osEventFlagsSet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set the specified Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags that shall be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags after setting or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="520" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1150" bodyend="1179" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="520" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239" compoundref="event__groups_8c" startline="519" endline="610">xEventGroupSetBits</references>
        <references refid="event__groups_8h_1a62b68278abac6358369ae8e390988a02" compoundref="event__groups_8h" startline="562">xEventGroupSetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a93bf258ca0007c6641fbe8e4f2b8a1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsClear</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags)</argsstring>
        <name>osEventFlagsClear</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear the specified Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags that shall be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="526" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1181" bodyend="1205" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="526" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba" compoundref="event__groups_8c" startline="461" endline="485">xEventGroupClearBits</references>
        <references refid="event__groups_8h_1a3d7de214a697f33fe7b914e26a93f33a" compoundref="event__groups_8h" startline="410">xEventGroupClearBitsFromISR</references>
        <references refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" compoundref="event__groups_8c" startline="503" endline="516">xEventGroupGetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a8bda3185f46bfd278cea8a6cf357677d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsGet</definition>
        <argsstring>(osEventFlagsId_t ef_id)</argsstring>
        <name>osEventFlagsGet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <briefdescription>
<para>Get the current Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current event flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="531" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1207" bodyend="1222" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="531" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="event__groups_8h_1a0ae86f092fb07ccb475ae938f9a12584" compoundref="event__groups_8h" startline="708">xEventGroupGetBits</references>
        <references refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" compoundref="event__groups_8c" startline="503" endline="516">xEventGroupGetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a52acb34a8322e58020227344fe662b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsWait</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout)</argsstring>
        <name>osEventFlagsWait</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for one or more Event Flags to become signaled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies flags options (osFlagsXxxx). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="539" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1224" bodyend="1272" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="539" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" compoundref="cmsis__os2_8h" startline="156">osFlagsNoClear</references>
        <references refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" compoundref="cmsis__os2_8h" startline="155">osFlagsWaitAll</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="event__groups_8c_1a379c5cca4552d3d8acd4c51e8220a6c3" compoundref="event__groups_8c" startline="311" endline="458">xEventGroupWaitBits</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7c4acf2fb0d506ec82905dee53fb5435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osEventFlagsDelete</definition>
        <argsstring>(osEventFlagsId_t ef_id)</argsstring>
        <name>osEventFlagsDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <briefdescription>
<para>Delete an Event Flags object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="544" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1274" bodyend="1294" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="544" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="event__groups_8c_1a6939faca89fc4ba52fa8288527042464" compoundref="event__groups_8c" startline="613" endline="652">vEventGroupDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
        <definition>osMutexId_t osMutexNew</definition>
        <argsstring>(const osMutexAttr_t *attr)</argsstring>
        <name>osMutexNew</name>
        <param>
          <type>const <ref refid="structos_mutex_attr__t" kindref="compound">osMutexAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Mutex object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mutex ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="552" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="552" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a180839843a2eac396fb5afe165f28005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osMutexGetName</definition>
        <argsstring>(osMutexId_t mutex_id)</argsstring>
        <name>osMutexGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
          <declname>mutex_id</declname>
        </param>
        <briefdescription>
<para>Get name of a Mutex object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mutex_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex ID obtained by <ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="557" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="557" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1abc54686ea0fc281823b1763422d2a924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMutexAcquire</definition>
        <argsstring>(osMutexId_t mutex_id, uint32_t timeout)</argsstring>
        <name>osMutexAcquire</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
          <declname>mutex_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Acquire a Mutex or timeout if it is locked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mutex_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex ID obtained by <ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="563" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="563" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1aea629705703580ff58776bf73c8db915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMutexRelease</definition>
        <argsstring>(osMutexId_t mutex_id)</argsstring>
        <name>osMutexRelease</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
          <declname>mutex_id</declname>
        </param>
        <briefdescription>
<para>Release a Mutex that was acquired by <ref refid="cmsis__os2_8h_1abc54686ea0fc281823b1763422d2a924" kindref="member">osMutexAcquire</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mutex_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex ID obtained by <ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="568" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="568" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7f9a7666df0978738cd570cb700b83fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
        <definition>osThreadId_t osMutexGetOwner</definition>
        <argsstring>(osMutexId_t mutex_id)</argsstring>
        <name>osMutexGetOwner</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
          <declname>mutex_id</declname>
        </param>
        <briefdescription>
<para>Get Thread which owns a Mutex object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mutex_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex ID obtained by <ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread ID of owner thread or NULL when mutex was not acquired. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="573" column="14" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="573" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1abee73ad227ba4587d3db12ef9bd582bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMutexDelete</definition>
        <argsstring>(osMutexId_t mutex_id)</argsstring>
        <name>osMutexDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref></type>
          <declname>mutex_id</declname>
        </param>
        <briefdescription>
<para>Delete a Mutex object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mutex_id</parametername>
</parameternamelist>
<parameterdescription>
<para>mutex ID obtained by <ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="578" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="578" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a2a39806ace781a0008a4374ca701b14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
        <definition>osSemaphoreId_t osSemaphoreNew</definition>
        <argsstring>(uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr)</argsstring>
        <name>osSemaphoreNew</name>
        <param>
          <type>uint32_t</type>
          <declname>max_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>initial_count</declname>
        </param>
        <param>
          <type>const <ref refid="structos_semaphore_attr__t" kindref="compound">osSemaphoreAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Semaphore object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of available tokens. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>initial number of available tokens. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>semaphore ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="588" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1509" bodyend="1582" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="588" declcolumn="17"/>
        <references refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" compoundref="cmsis__os2_8h" startline="258">osSemaphoreAttr_t::cb_mem</references>
        <references refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" compoundref="cmsis__os2_8h" startline="259">osSemaphoreAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_semaphore_attr__t_1a0151928f02ecbbc0a22793a63892af66" compoundref="cmsis__os2_8h" startline="256">osSemaphoreAttr_t::name</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" compoundref="_free_r_t_o_s_8h" startline="306">vQueueAddToRegistry</references>
        <references refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" compoundref="semphr_8h" startline="1098">vSemaphoreDelete</references>
        <references refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" compoundref="semphr_8h" startline="447">xSemaphoreGive</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a9586952051f00285f1482dbe6695bbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osSemaphoreGetName</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Get name of a Semaphore object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="593" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="593" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7e94c8b242a0c81f2cc79ec22895c87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreAcquire</definition>
        <argsstring>(osSemaphoreId_t semaphore_id, uint32_t timeout)</argsstring>
        <name>osSemaphoreAcquire</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Acquire a Semaphore token or timeout if no tokens are available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="599" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1584" bodyend="1619" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="599" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" compoundref="semphr_8h" startline="289">xSemaphoreTake</references>
        <references refid="semphr_8h_1a076419b58e072655686939016e7ca3c5" compoundref="semphr_8h" startline="658">xSemaphoreTakeFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a0abcee1b5449d7a6928fb9248c690bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreRelease</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreRelease</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Release a Semaphore token up to the initial maximum count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="604" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1621" bodyend="1647" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="604" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" compoundref="semphr_8h" startline="447">xSemaphoreGive</references>
        <references refid="semphr_8h_1a68aa43df8b2a0dbe17d05fad74670ef0" compoundref="semphr_8h" startline="624">xSemaphoreGiveFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a7559d4dff3cda9992fc5ab5de3e74c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osSemaphoreGetCount</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreGetCount</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Get current Semaphore token count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of tokens available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="609" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1649" bodyend="1663" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="609" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" compoundref="queue_8c" startline="1963" endline="1972">uxQueueMessagesWaitingFromISR</references>
        <references refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" compoundref="semphr_8h" startline="1136">uxSemaphoreGetCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a81258ce9c67fa89f07cc49d2e136cd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreDelete</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Delete a Semaphore object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="614" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1665" bodyend="1689" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="614" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" compoundref="_free_r_t_o_s_8h" startline="307">vQueueUnregisterQueue</references>
        <references refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" compoundref="semphr_8h" startline="1098">vSemaphoreDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
        <definition>osMemoryPoolId_t osMemoryPoolNew</definition>
        <argsstring>(uint32_t block_count, uint32_t block_size, const osMemoryPoolAttr_t *attr)</argsstring>
        <name>osMemoryPoolNew</name>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <param>
          <type>const <ref refid="structos_memory_pool_attr__t" kindref="compound">osMemoryPoolAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Memory Pool object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of memory blocks in memory pool. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>memory block size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>memory pool ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="624" column="18" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="624" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab414a1e138205a55820acfa277c8f386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osMemoryPoolGetName</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Get name of a Memory Pool object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="629" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="629" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a8ead54e99ccb8f112356c88f99d38fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * osMemoryPoolAlloc</definition>
        <argsstring>(osMemoryPoolId_t mp_id, uint32_t timeout)</argsstring>
        <name>osMemoryPoolAlloc</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Allocate a memory block from a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>address of the allocated memory block or NULL in case of no memory is available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="635" column="6" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="635" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1abb4f4560daa6d1f8c8789082ee186d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMemoryPoolFree</definition>
        <argsstring>(osMemoryPoolId_t mp_id, void *block)</argsstring>
        <name>osMemoryPoolFree</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Return an allocated memory block back to a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the allocated memory block to be returned to the memory pool. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="641" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="641" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ad696e94bfbe28f0b6613f9303fdf6a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMemoryPoolGetCapacity</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolGetCapacity</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Get maximum number of memory blocks in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum number of memory blocks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="646" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="646" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ab2bf059b7fa7679c3cccdaeec60b6c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMemoryPoolGetBlockSize</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolGetBlockSize</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Get memory block size in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>memory block size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="651" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="651" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a958a9449bff8c95ce213de98eef5739d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMemoryPoolGetCount</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolGetCount</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Get number of memory blocks used in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of memory blocks used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="656" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="656" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a0394cffa9479a7994e3b03c79c1cb909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMemoryPoolGetSpace</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolGetSpace</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Get number of memory blocks available in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of memory blocks available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="661" column="10" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="661" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a8c39e7e5cd2b9eda907466808e59d62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMemoryPoolDelete</definition>
        <argsstring>(osMemoryPoolId_t mp_id)</argsstring>
        <name>osMemoryPoolDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref></type>
          <declname>mp_id</declname>
        </param>
        <briefdescription>
<para>Delete a Memory Pool object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mp_id</parametername>
</parameternamelist>
<parameterdescription>
<para>memory pool ID obtained by <ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="666" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="666" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a24e895a00f9d484db33aaf784c57bfed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
        <definition>osMessageQueueId_t osMessageQueueNew</definition>
        <argsstring>(uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr)</argsstring>
        <name>osMessageQueueNew</name>
        <param>
          <type>uint32_t</type>
          <declname>msg_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>msg_size</declname>
        </param>
        <param>
          <type>const <ref refid="structos_message_queue_attr__t" kindref="compound">osMessageQueueAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Message Queue object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of messages in queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_size</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum message size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>message queue ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="676" column="20" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1693" bodyend="1748" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="676" declcolumn="20"/>
        <references refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" compoundref="cmsis__os2_8h" startline="276">osMessageQueueAttr_t::cb_mem</references>
        <references refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" compoundref="cmsis__os2_8h" startline="277">osMessageQueueAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" compoundref="cmsis__os2_8h" startline="278">osMessageQueueAttr_t::mq_mem</references>
        <references refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" compoundref="cmsis__os2_8h" startline="279">osMessageQueueAttr_t::mq_size</references>
        <references refid="structos_message_queue_attr__t_1a7a0ddc31f97f8d8e5d9f880f5d03768b" compoundref="cmsis__os2_8h" startline="274">osMessageQueueAttr_t::name</references>
        <references refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" compoundref="_free_r_t_o_s_8h" startline="306">vQueueAddToRegistry</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ae7cf7bf2b97a5ae481fb60fcce99247a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osMessageQueueGetName</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get name of a Message Queue object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="681" column="12" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="681" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1aa515fc8b956f721a8f72b2c505813bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueuePut</definition>
        <argsstring>(osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout)</argsstring>
        <name>osMessageQueuePut</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msg_prio</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Put a Message into a Queue or timeout if Queue is full. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer with message to put into a queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_prio</parametername>
</parameternamelist>
<parameterdescription>
<para>message priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="689" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1750" bodyend="1789" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="689" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" compoundref="queue_8h" startline="395">xQueueSendToBack</references>
        <references refid="queue_8h_1a51e9f73417b11441a181cdc4f33a68e9" compoundref="queue_8h" startline="1055">xQueueSendToBackFromISR</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a5722e77ac0684aebdfe2a7927efa501e" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="227" endline="252">MessageQueueProducer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ad90d4959466a7a65105061da8256ab9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueGet</definition>
        <argsstring>(osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout)</argsstring>
        <name>osMessageQueueGet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>msg_prio</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Get a Message from a Queue or timeout if Queue is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for message to get from a queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_prio</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for message priority or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="697" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1791" bodyend="1830" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="697" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9" compoundref="queue_8c" startline="1277" endline="1415">xQueueReceive</references>
        <references refid="queue_8h_1acdf528f5c91131ae2f31c669cfd65758" compoundref="queue_8c" startline="1785" endline="1873">xQueueReceiveFromISR</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a0322cad3bd0e264bdf2104b17b6d971d" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="261" endline="292">MessageQueueConsumer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ac24f87d4f395e9e9c900c320e45ade8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetCapacity</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetCapacity</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get maximum number of messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum number of messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="702" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1832" bodyend="1844" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="702" declcolumn="10"/>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a96d3d84069b20359de48109e28a1a89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetMsgSize</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetMsgSize</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get maximum message size in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum message size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="707" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1846" bodyend="1858" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="707" declcolumn="10"/>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1a6a32ac394fcff568b251c160cc3014b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetCount</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetCount</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get number of queued messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of queued messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="712" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1860" bodyend="1875" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="712" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="queue_8h_1add7ee0701ba35904d190811b9e5a4eda" compoundref="queue_8c" startline="1930" endline="1943">uxQueueMessagesWaiting</references>
        <references refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" compoundref="queue_8c" startline="1963" endline="1972">uxQueueMessagesWaitingFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1addf0904427436dd3880d46263c2dc9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetSpace</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetSpace</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get number of available slots for messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of available slots for messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="717" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1877" bodyend="1898" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="717" declcolumn="10"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1acb27098fc27d117f720d96bfdcd2b4c8" compoundref="task_8h" startline="188">taskENTER_CRITICAL_FROM_ISR</references>
        <references refid="task_8h_1afa2f5acc3c925b6542ecca1acf67a234" compoundref="task_8h" startline="203">taskEXIT_CRITICAL_FROM_ISR</references>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
        <references refid="queue_8h_1aae75791e91707c1e0bb31d761921531c" compoundref="queue_8c" startline="1946" endline="1960">uxQueueSpacesAvailable</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1ac6dce7f9ad132d266292c2e979d861b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueReset</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueReset</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Reset a Message Queue to initial empty state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="722" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1900" bodyend="1916" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="722" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="queue_8h_1a94df8d8bc938424151f8196db2f1177b" compoundref="queue_8h" startline="1433">xQueueReset</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8h_1aba987f665444e0d83fa6a3a68bc72abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueDelete</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Delete a Message Queue object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" line="727" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1918" bodyend="1942" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h" declline="727" declcolumn="12"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="queue_8h_1a707cbcfe3aed6b877b6aa6d9d75a3f22" compoundref="queue_8c" startline="1975" endline="2014">vQueueDelete</references>
        <references refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" compoundref="_free_r_t_o_s_8h" startline="307">vQueueUnregisterQueue</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Portions<sp/>Copyright<sp/>©<sp/>2017<sp/>STMicroelectronics<sp/>International<sp/>N.V.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portions<sp/>Copyright<sp/>(c)<sp/>2013-2017<sp/>ARM<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Name:<sp/><sp/><sp/><sp/>cmsis_os2.h</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Purpose:<sp/>CMSIS<sp/>RTOS2<sp/>wrapper<sp/>for<sp/>FreeRTOS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CMSIS_OS2_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMSIS_OS2_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__NO_RETURN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NO_RETURN<sp/>__declspec(noreturn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARMCC_VERSION)<sp/>&amp;&amp;<sp/>(__ARMCC_VERSION<sp/>&gt;=<sp/>6010050)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NO_RETURN<sp/>__attribute__((__noreturn__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NO_RETURN<sp/>__attribute__((__noreturn__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ICCARM__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NO_RETURN<sp/>__noreturn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="cmsis__os2_8h_1a153a4a31b276a9758959580538720a51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NO_RETURN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Enumerations,<sp/>structures,<sp/>defines<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structos_version__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="structos_version__t_1a399e0292985f12145a0e61c0b50a50ec" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_version__t_1a399e0292985f12145a0e61c0b50a50ec" kindref="member">api</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structos_version__t_1a3a589e0cc665071abb720afda12e9a15" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_version__t_1a3a589e0cc665071abb720afda12e9a15" kindref="member">kernel</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="structos_version__t" kindref="compound">osVersion_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" kindref="member">osKernelInactive</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" kindref="member">osKernelReady</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" kindref="member">osKernelRunning</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" kindref="member">osKernelLocked</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a3240807627595e80f59a46434639b765" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a3240807627595e80f59a46434639b765" kindref="member">osKernelSuspended</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a1b942a8c76daeba2925a763d4d7567a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a1b942a8c76daeba2925a763d4d7567a2" kindref="member">osKernelError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a9cc4cc562a20a28c0f6f4b878ecf2df5" kindref="member">osKernelReserved</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x7FFFFFFFU<sp/></highlight></codeline>
<codeline lineno="68" refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a9cc4cc562a20a28c0f6f4b878ecf2df5" refkind="member"><highlight class="normal">}<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da7d7d4f719a1be6daa63a251563585fdd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da7d7d4f719a1be6daa63a251563585fdd" kindref="member">osThreadInactive</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" kindref="member">osThreadReady</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" kindref="member">osThreadRunning</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" kindref="member">osThreadBlocked</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" kindref="member">osThreadTerminated</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" kindref="member">osThreadError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da8872f7e352370eb11ee772c7dcca6e6c" kindref="member">osThreadReserved</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x7FFFFFFF<sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da8872f7e352370eb11ee772c7dcca6e6c" refkind="member"><highlight class="normal">}<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" kindref="member">osPriorityNone</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" kindref="member">osPriorityIdle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61cb822239ac8f66dfbdc7291598a3d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61cb822239ac8f66dfbdc7291598a3d4" kindref="member">osPriorityLow</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaba2b6919f0b630c8c1b2c940e3bfadbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaba2b6919f0b630c8c1b2c940e3bfadbe" kindref="member">osPriorityLow1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca78ad5d00aa07a2b4bf30a639544f5507" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca78ad5d00aa07a2b4bf30a639544f5507" kindref="member">osPriorityLow2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca28ccb07942c16f5f5efefb6cf68a7f50" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca28ccb07942c16f5f5efefb6cf68a7f50" kindref="member">osPriorityLow3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5a4a4f26d5b220a968e221e854f69a81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5a4a4f26d5b220a968e221e854f69a81" kindref="member">osPriorityLow4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad69b8c14809bc5bdce4887f5a57d9353" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad69b8c14809bc5bdce4887f5a57d9353" kindref="member">osPriorityLow5</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac0f188468664d06d4cd9e6e1ed351393" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac0f188468664d06d4cd9e6e1ed351393" kindref="member">osPriorityLow6</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5b151ebba7fdeb1baaa9b7b420890b7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5b151ebba7fdeb1baaa9b7b420890b7a" kindref="member">osPriorityLow7</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca193b650117c209b4a203954542bcc3e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca193b650117c209b4a203954542bcc3e6" kindref="member">osPriorityBelowNormal</ref><sp/><sp/><sp/>=<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca9138da7187690b15f52d8e5729c18da5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca9138da7187690b15f52d8e5729c18da5" kindref="member">osPriorityBelowNormal1</ref><sp/><sp/>=<sp/>16+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca4f081d6735bf2f513338b07eddf13ae3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca4f081d6735bf2f513338b07eddf13ae3" kindref="member">osPriorityBelowNormal2</ref><sp/><sp/>=<sp/>16+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19c013690d0d6bf3ac90707942be3fdf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19c013690d0d6bf3ac90707942be3fdf" kindref="member">osPriorityBelowNormal3</ref><sp/><sp/>=<sp/>16+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca36931ad6cee5e4700e2c8622bdd2cd24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca36931ad6cee5e4700e2c8622bdd2cd24" kindref="member">osPriorityBelowNormal4</ref><sp/><sp/>=<sp/>16+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0bcd9ad1e7a02e3bf03be7dcc8ece38e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0bcd9ad1e7a02e3bf03be7dcc8ece38e" kindref="member">osPriorityBelowNormal5</ref><sp/><sp/>=<sp/>16+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabd3cc7df5b92b752ddf1e7843a786c05" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabd3cc7df5b92b752ddf1e7843a786c05" kindref="member">osPriorityBelowNormal6</ref><sp/><sp/>=<sp/>16+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab18e3bda7b5e418e309a62d6267ea14b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab18e3bda7b5e418e309a62d6267ea14b" kindref="member">osPriorityBelowNormal7</ref><sp/><sp/>=<sp/>16+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" kindref="member">osPriorityNormal</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3e70c19e03d5a54e66bd071f0776782c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3e70c19e03d5a54e66bd071f0776782c" kindref="member">osPriorityNormal1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19e96f2b025b6462a43b1965043c8205" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca19e96f2b025b6462a43b1965043c8205" kindref="member">osPriorityNormal2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca402bd7ab26fb57c8cee8cf94168f4c91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca402bd7ab26fb57c8cee8cf94168f4c91" kindref="member">osPriorityNormal3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca93ef07d3a107aeee6508bfd29ba3485d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca93ef07d3a107aeee6508bfd29ba3485d" kindref="member">osPriorityNormal4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca68f3f6fdaa639de300277802aa13a0ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca68f3f6fdaa639de300277802aa13a0ab" kindref="member">osPriorityNormal5</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca8221eb0d059726a6309f1f2d0cdb6204" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca8221eb0d059726a6309f1f2d0cdb6204" kindref="member">osPriorityNormal6</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca049abd04f8951415407ec9d92bd9b80b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca049abd04f8951415407ec9d92bd9b80b" kindref="member">osPriorityNormal7</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b36cd9cd38652c2bc6d4803990674b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b36cd9cd38652c2bc6d4803990674b" kindref="member">osPriorityAboveNormal</ref><sp/><sp/><sp/>=<sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabfeafc713edfc7b9130aa5c762d68998" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecabfeafc713edfc7b9130aa5c762d68998" kindref="member">osPriorityAboveNormal1</ref><sp/><sp/>=<sp/>32+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca901acf86070e06f5990b611734ee2562" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca901acf86070e06f5990b611734ee2562" kindref="member">osPriorityAboveNormal2</ref><sp/><sp/>=<sp/>32+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad566b876b64e6efdc3eba0fc04e54013" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecad566b876b64e6efdc3eba0fc04e54013" kindref="member">osPriorityAboveNormal3</ref><sp/><sp/>=<sp/>32+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6ccac37d7dae4586a2031966d36a63ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6ccac37d7dae4586a2031966d36a63ec" kindref="member">osPriorityAboveNormal4</ref><sp/><sp/>=<sp/>32+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae36e8b38ee046a3104bcccabb10cf78c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae36e8b38ee046a3104bcccabb10cf78c" kindref="member">osPriorityAboveNormal5</ref><sp/><sp/>=<sp/>32+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61e6ce27e1e0f34f2540b413b8a8b207" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca61e6ce27e1e0f34f2540b413b8a8b207" kindref="member">osPriorityAboveNormal6</ref><sp/><sp/>=<sp/>32+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecadbbb0fed3ada6b9b50d4a628abc2a67d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecadbbb0fed3ada6b9b50d4a628abc2a67d" kindref="member">osPriorityAboveNormal7</ref><sp/><sp/>=<sp/>32+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca914433934143a9ba767e59577c56e6c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca914433934143a9ba767e59577c56e6c2" kindref="member">osPriorityHigh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b7a7e6febf12444a84e90edfce36cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca17b7a7e6febf12444a84e90edfce36cb" kindref="member">osPriorityHigh1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca40a120cf8bbc42e575455c027f3d9b03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca40a120cf8bbc42e575455c027f3d9b03" kindref="member">osPriorityHigh2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0b15518b0b5321a29efa0b42b2f8c759" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca0b15518b0b5321a29efa0b42b2f8c759" kindref="member">osPriorityHigh3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecafe5a4f393fab04551ac7d93e80cdf0fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecafe5a4f393fab04551ac7d93e80cdf0fb" kindref="member">osPriorityHigh4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5960841bfbdd959b163429e8502ea4e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5960841bfbdd959b163429e8502ea4e9" kindref="member">osPriorityHigh5</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5714dda6effc1a3f8ec155d97e3e69bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca5714dda6effc1a3f8ec155d97e3e69bc" kindref="member">osPriorityHigh6</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca63ad0cc52a701ef3d9df52b59b995652" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca63ad0cc52a701ef3d9df52b59b995652" kindref="member">osPriorityHigh7</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca1485dec3702434a1ec3cb74c7a17a4af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca1485dec3702434a1ec3cb74c7a17a4af" kindref="member">osPriorityRealtime</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>48,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf685a06b30f0635476e21347a986305b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf685a06b30f0635476e21347a986305b" kindref="member">osPriorityRealtime1</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab832bd9de84e5eec2ecad69d085dadff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecab832bd9de84e5eec2ecad69d085dadff" kindref="member">osPriorityRealtime2</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3f2261e5e733e92844ae8c630f2f9eaa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3f2261e5e733e92844ae8c630f2f9eaa" kindref="member">osPriorityRealtime3</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf614e3dc966d559cd9d9d2a0f78ebe70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaf614e3dc966d559cd9d9d2a0f78ebe70" kindref="member">osPriorityRealtime4</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaff84f31ceff203c711fb9476443507df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaff84f31ceff203c711fb9476443507df" kindref="member">osPriorityRealtime5</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca80ae9d0dd256312c0c8f44af48316194" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca80ae9d0dd256312c0c8f44af48316194" kindref="member">osPriorityRealtime6</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaa76da6825c4bd31c4958200bc289103b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecaa76da6825c4bd31c4958200bc289103b" kindref="member">osPriorityRealtime7</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>48+7,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" kindref="member">osPriorityISR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>56,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" kindref="member">osPriorityError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac86c171f8d466cced0cb1b03bb03343b" kindref="member">osPriorityReserved</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x7FFFFFFF<sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecac86c171f8d466cced0cb1b03bb03343b" refkind="member"><highlight class="normal">}<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" kindref="member">osThreadFunc_t</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" kindref="member">osTimerFunc_t</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146" refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ad21712f8df5f97069c82dc9eec37b951" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ad21712f8df5f97069c82dc9eec37b951" kindref="member">osTimerOnce</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ab9c91f9699162edb09bb7c90c11c8788" kindref="member">osTimerPeriodic</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ab9c91f9699162edb09bb7c90c11c8788" refkind="member"><highlight class="normal">}<sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" kindref="member">osTimerType_t</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timeout<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="cmsis__os2_8h_1a9eb9a7a797a42e4b55eb171ecc609ddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osWaitForever<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFFFFU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>options<sp/>(\ref<sp/>osThreadFlagsWait<sp/>and<sp/>\ref<sp/>osEventFlagsWait).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="cmsis__os2_8h_1a18e63587b8450d5b8798b6f6ec04e012" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsWaitAny<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsWaitAll<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000001U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsNoClear<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000002U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>errors<sp/>(returned<sp/>by<sp/>osThreadFlagsXxxx<sp/>and<sp/>osEventFlagsXxxx).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="cmsis__os2_8h_1a01c1359c3a5640bff6e08f09bf94ce3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="cmsis__os2_8h_1a3b1d9fbb83d64eedb62f831c9be647c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsErrorUnknown<sp/><sp/><sp/>0xFFFFFFFFU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="cmsis__os2_8h_1a2e951c3f1c3b7bff4eca3d7836cd19ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsErrorTimeout<sp/><sp/><sp/>0xFFFFFFFEU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="cmsis__os2_8h_1a4db38b50da1889bcaaa7f747e844f904" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsErrorResource<sp/><sp/>0xFFFFFFFDU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="cmsis__os2_8h_1aa8a95ef938f8f5a9fcb815ec53184f77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsErrorParameter<sp/>0xFFFFFFFCU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="cmsis__os2_8h_1aea3abd186643f539877e894b62b63448" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osFlagsErrorISR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFFFAU<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>attributes<sp/>(attr_bits<sp/>in<sp/>\ref<sp/>osThreadAttr_t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="cmsis__os2_8h_1aa9336c1073858d6b118e2e011636246f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osThreadDetached<sp/><sp/><sp/><sp/><sp/><sp/>0x00000000U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osThreadJoinable<sp/><sp/><sp/><sp/><sp/><sp/>0x00000001U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mutex<sp/>attributes<sp/>(attr_bits<sp/>in<sp/>\ref<sp/>osMutexAttr_t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="cmsis__os2_8h_1a65c2482cc64a35d03871f3180f305926" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osMutexRecursive<sp/><sp/><sp/><sp/><sp/><sp/>0x00000001U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="cmsis__os2_8h_1a40fba270cb31a977b3bd551d41eb9599" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osMutexPrioInherit<sp/><sp/><sp/><sp/>0x00000002U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="cmsis__os2_8h_1af0e1dee376798b4d516d164981526780" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>osMutexRobust<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000008U<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eaf1fac0240218e51eb30a13da2f8aae81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eaf1fac0240218e51eb30a13da2f8aae81" kindref="member">osErrorNoMemory</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea66cc9ce9106b508df0e4a733a55a439d" kindref="member">osStatusReserved</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x7FFFFFFF<sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea66cc9ce9106b508df0e4a733a55a439d" refkind="member"><highlight class="normal">}<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TZ_MODULEID_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="cmsis__os2_8h_1a78775dae56f0c9698cdab6e1ca74503f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TZ_MODULEID_T</highlight></codeline>
<codeline lineno="213" refid="cmsis__os2_8h_1ad5ef21485fe5f60263bc0b48006202cb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8h_1ad5ef21485fe5f60263bc0b48006202cb" kindref="member">TZ_ModuleId_t</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structos_thread_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219" refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="structos_thread_attr__t_1a5f48a821ddc41410fe625860b6380d3a" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1a5f48a821ddc41410fe625860b6380d3a" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221" refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223" refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" kindref="member">stack_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224" refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" kindref="member">stack_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" kindref="member">priority</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="structos_thread_attr__t_1a5cefc38447dae2c9f3fb81c193c49536" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad5ef21485fe5f60263bc0b48006202cb" kindref="member">TZ_ModuleId_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1a5cefc38447dae2c9f3fb81c193c49536" kindref="member">tz_module</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="structos_thread_attr__t_1a553fd9961d8f9e4562f84cd68709ae2d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_thread_attr__t_1a553fd9961d8f9e4562f84cd68709ae2d" kindref="member">reserved</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/><ref refid="structos_thread_attr__t" kindref="compound">osThreadAttr_t</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structos_timer_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232" refid="structos_timer_attr__t_1a2b432a32e222f51f5c3ed37db14a2db5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_timer_attr__t_1a2b432a32e222f51f5c3ed37db14a2db5" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233" refid="structos_timer_attr__t_1a7701a75e9afe37e9bd46bb5626e17759" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_timer_attr__t_1a7701a75e9afe37e9bd46bb5626e17759" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="structos_timer_attr__t_1a2a7f8245862c91afe08d0c671ded2fd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_timer_attr__t_1a2a7f8245862c91afe08d0c671ded2fd3" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="structos_timer_attr__t_1aa5c0dc5e54b430c01ca3d212a44e31fb" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_timer_attr__t_1aa5c0dc5e54b430c01ca3d212a44e31fb" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/><ref refid="structos_timer_attr__t" kindref="compound">osTimerAttr_t</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structos_event_flags_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240" refid="structos_event_flags_attr__t_1ac3d95d16f3eed79d9e068567acb2b0d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_event_flags_attr__t_1ac3d95d16f3eed79d9e068567acb2b0d4" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="structos_event_flags_attr__t_1a7aabb3ae376079d34ddd78787733ca5c" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_event_flags_attr__t_1a7aabb3ae376079d34ddd78787733ca5c" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242" refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><ref refid="structos_event_flags_attr__t" kindref="compound">osEventFlagsAttr_t</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structos_mutex_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248" refid="structos_mutex_attr__t_1af3997dba664ce0e0f788a35e8f473a4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_mutex_attr__t_1af3997dba664ce0e0f788a35e8f473a4d" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249" refid="structos_mutex_attr__t_1a9dbf080ff04a6e5fde40b8e962868fd5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_mutex_attr__t_1a9dbf080ff04a6e5fde40b8e962868fd5" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="structos_mutex_attr__t_1a444c834a2336196cc87b200cbd33106c" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_mutex_attr__t_1a444c834a2336196cc87b200cbd33106c" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/><ref refid="structos_mutex_attr__t" kindref="compound">osMutexAttr_t</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="structos_semaphore_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256" refid="structos_semaphore_attr__t_1a0151928f02ecbbc0a22793a63892af66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_semaphore_attr__t_1a0151928f02ecbbc0a22793a63892af66" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="structos_semaphore_attr__t_1a718a87b56a768a4f358a90f8c09b1aab" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_semaphore_attr__t_1a718a87b56a768a4f358a90f8c09b1aab" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259" refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal">}<sp/><ref refid="structos_semaphore_attr__t" kindref="compound">osSemaphoreAttr_t</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="structos_memory_pool_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="264" refid="structos_memory_pool_attr__t_1a1a14604293f5327ce10f33f67f718679" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_memory_pool_attr__t_1a1a14604293f5327ce10f33f67f718679" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="structos_memory_pool_attr__t_1a855bf6d976d2457a2fe76b0285fa140a" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_memory_pool_attr__t_1a855bf6d976d2457a2fe76b0285fa140a" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="structos_memory_pool_attr__t_1a429ab7932bd1acff955ece56f51b2fe1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_memory_pool_attr__t_1a429ab7932bd1acff955ece56f51b2fe1" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267" refid="structos_memory_pool_attr__t_1ac503c59e0429dd8bb57058ac6264a3b7" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_memory_pool_attr__t_1ac503c59e0429dd8bb57058ac6264a3b7" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268" refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" kindref="member">mp_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269" refid="structos_memory_pool_attr__t_1a170b59ba063d6d3f5387a23478db8d28" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_memory_pool_attr__t_1a170b59ba063d6d3f5387a23478db8d28" kindref="member">mp_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}<sp/><ref refid="structos_memory_pool_attr__t" kindref="compound">osMemoryPoolAttr_t</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structos_message_queue_attr__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274" refid="structos_message_queue_attr__t_1a7a0ddc31f97f8d8e5d9f880f5d03768b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_message_queue_attr__t_1a7a0ddc31f97f8d8e5d9f880f5d03768b" kindref="member">name</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275" refid="structos_message_queue_attr__t_1a89d1d6bc8c5926f764c0c915f7fc04e5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_message_queue_attr__t_1a89d1d6bc8c5926f764c0c915f7fc04e5" kindref="member">attr_bits</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" kindref="member">cb_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277" refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" kindref="member">cb_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278" refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" kindref="member">mq_mem</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279" refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" kindref="member">mq_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}<sp/><ref refid="structos_message_queue_attr__t" kindref="compound">osMessageQueueAttr_t</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Kernel<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ae818f6611d25ba3140bede410a52d659" kindref="member">osKernelInitialize</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a6f7764e7250c5c5364c00c45a5d1d199" kindref="member">osKernelGetInfo</ref><sp/>(<ref refid="structos_version__t" kindref="compound">osVersion_t</ref><sp/>*version,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*id_buf,<sp/>uint32_t<sp/>id_size);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref><sp/><ref refid="cmsis__os2_8h_1a48b69b81012fce051f639be288b243ba" kindref="member">osKernelGetState</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a9ae2cc00f0d89d7b6a307bba942b5221" kindref="member">osKernelStart</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8h_1a948609ee930d9b38336b9e1c2a4dfe12" kindref="member">osKernelLock</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8h_1af401728b4657456198c33fe75f8d6720" kindref="member">osKernelUnlock</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8h_1ae7d0a71b9586cbbb49fcbdf6a04f0289" kindref="member">osKernelRestoreLock</ref><sp/>(int32_t<sp/>lock);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="cmsis__os2_8h_1ae26683e1606ec633354a2876c68f0c1f" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ae26683e1606ec633354a2876c68f0c1f" kindref="member">osKernelSuspend</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="cmsis__os2_8h_1a8c4b4d7ed34cab73c001665d9176aced" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8h_1a8c4b4d7ed34cab73c001665d9176aced" kindref="member">osKernelResume</ref><sp/>(uint32_t<sp/>sleep_ticks);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a84bcdbf2fb76b10c8df4e439f0c7e11b" kindref="member">osKernelGetTickCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a7a8d7bd927eaaa58999f91d7d6310cee" kindref="member">osKernelGetTickFreq</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ae0fcaff6cecfb4013bb556c87afcd7d2" kindref="member">osKernelGetSysTimerCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a4d69215a93220f72be3684cad582f16a" kindref="member">osKernelGetSysTimerFreq</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Thread<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8h_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref><sp/>(<ref refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" kindref="member">osThreadFunc_t</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_thread_attr__t" kindref="compound">osThreadAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1ac3230f3a55a297514b013ebf38f27e0a" kindref="member">osThreadGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8h_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref><sp/><ref refid="cmsis__os2_8h_1acc0a98b42f0a5928e12dc91dc76866b9" kindref="member">osThreadGetState</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="cmsis__os2_8h_1ab9f8bd715d671c6ee27644867bc1bf65" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ab9f8bd715d671c6ee27644867bc1bf65" kindref="member">osThreadGetStackSize</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a9c83bd5dd8de329701775d6ef7012720" kindref="member">osThreadGetStackSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a861a420fb2d643115b06622903fb3bfb" kindref="member">osThreadSetPriority</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id,<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/>priority);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/><ref refid="cmsis__os2_8h_1a0aeaf349604f456e68e78f9d3b42e44b" kindref="member">osThreadGetPriority</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ad01c7ec26535b1de6b018bb9466720e2" kindref="member">osThreadYield</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aa9de419d0152bf77e9bbcd1f369fb990" kindref="member">osThreadSuspend</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a3dbad90eff394b02de76a452c84c5d80" kindref="member">osThreadResume</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="cmsis__os2_8h_1aaad14cd9547341ea8109dc4e8540f1dc" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aaad14cd9547341ea8109dc4e8540f1dc" kindref="member">osThreadDetach</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="cmsis__os2_8h_1a3fca90fb0679afeb968aa8c3d5874487" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a3fca90fb0679afeb968aa8c3d5874487" kindref="member">osThreadJoin</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><ref refid="cmsis__os2_8h_1a153a4a31b276a9758959580538720a51" kindref="member">__NO_RETURN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8h_1a76c223e3a19bc16000e7017202610c82" kindref="member">osThreadExit</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a2f8ba6dba6e9c065a6e236ffd410d74a" kindref="member">osThreadTerminate</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a495b3f812224e7301f23a691793765db" kindref="member">osThreadGetCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a5606604d56e21ece1a654664be877439" kindref="member">osThreadEnumerate</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>*thread_array,<sp/>uint32_t<sp/>array_items);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Thread<sp/>Flags<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="cmsis__os2_8h_1a6f89ef9caded1d9963c7b12b0f6412c9" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a6f89ef9caded1d9963c7b12b0f6412c9" kindref="member">osThreadFlagsSet</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id,<sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="cmsis__os2_8h_1a656abc1c862c5b9a2b13584c42cc0bfa" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a656abc1c862c5b9a2b13584c42cc0bfa" kindref="member">osThreadFlagsClear</ref><sp/>(uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="cmsis__os2_8h_1a85c8d2c89466e25abbcb545d9ddd71ba" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a85c8d2c89466e25abbcb545d9ddd71ba" kindref="member">osThreadFlagsGet</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="cmsis__os2_8h_1ac11542ad6300b600f872fc96e340ec2b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ac11542ad6300b600f872fc96e340ec2b" kindref="member">osThreadFlagsWait</ref><sp/>(uint32_t<sp/>flags,<sp/>uint32_t<sp/>options,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Generic<sp/>Wait<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1af6055a51390ef65b6b6edc28bf47322e" kindref="member">osDelay</ref><sp/>(uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a3c807924c2d6d43bc2ffb49da3f7f3a1" kindref="member">osDelayUntil</ref><sp/>(uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Timer<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/><ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref><sp/>(<ref refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" kindref="member">osTimerFunc_t</ref><sp/>func,<sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" kindref="member">osTimerType_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_timer_attr__t" kindref="compound">osTimerAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="cmsis__os2_8h_1a7938dde88ada1a01b60f41cf120069c0" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a7938dde88ada1a01b60f41cf120069c0" kindref="member">osTimerGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="cmsis__os2_8h_1ab6ee2859ea657641b7adfac599b8121d" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ab6ee2859ea657641b7adfac599b8121d" kindref="member">osTimerStart</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id,<sp/>uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="cmsis__os2_8h_1abd7a89356da7717293eb0bc5d87b8ac9" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abd7a89356da7717293eb0bc5d87b8ac9" kindref="member">osTimerStop</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="cmsis__os2_8h_1a69d3589f54194022c30dd01e45ec6741" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a69d3589f54194022c30dd01e45ec6741" kindref="member">osTimerIsRunning</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="cmsis__os2_8h_1ad0001dd74721ab461789324806db2453" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ad0001dd74721ab461789324806db2453" kindref="member">osTimerDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Event<sp/>Flags<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/><ref refid="cmsis__os2_8h_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_event_flags_attr__t" kindref="compound">osEventFlagsAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="cmsis__os2_8h_1a59f4ddf0ee8c395b1672bb978d1cfc88" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a59f4ddf0ee8c395b1672bb978d1cfc88" kindref="member">osEventFlagsGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a33b71d14cecf90b4e72639dd19f23a5e" kindref="member">osEventFlagsSet</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a93bf258ca0007c6641fbe8e4f2b8a1e5" kindref="member">osEventFlagsClear</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a8bda3185f46bfd278cea8a6cf357677d" kindref="member">osEventFlagsGet</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a52acb34a8322e58020227344fe662b4e" kindref="member">osEventFlagsWait</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags,<sp/>uint32_t<sp/>options,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a7c4acf2fb0d506ec82905dee53fb5435" kindref="member">osEventFlagsDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Mutex<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/><ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_mutex_attr__t" kindref="compound">osMutexAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="cmsis__os2_8h_1a180839843a2eac396fb5afe165f28005" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a180839843a2eac396fb5afe165f28005" kindref="member">osMutexGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="cmsis__os2_8h_1abc54686ea0fc281823b1763422d2a924" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abc54686ea0fc281823b1763422d2a924" kindref="member">osMutexAcquire</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="cmsis__os2_8h_1aea629705703580ff58776bf73c8db915" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aea629705703580ff58776bf73c8db915" kindref="member">osMutexRelease</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="cmsis__os2_8h_1a7f9a7666df0978738cd570cb700b83fb" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8h_1a7f9a7666df0978738cd570cb700b83fb" kindref="member">osMutexGetOwner</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="cmsis__os2_8h_1abee73ad227ba4587d3db12ef9bd582bc" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abee73ad227ba4587d3db12ef9bd582bc" kindref="member">osMutexDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Semaphore<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/><ref refid="cmsis__os2_8h_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref><sp/>(uint32_t<sp/>max_count,<sp/>uint32_t<sp/>initial_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_semaphore_attr__t" kindref="compound">osSemaphoreAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="cmsis__os2_8h_1a9586952051f00285f1482dbe6695bbc4" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a9586952051f00285f1482dbe6695bbc4" kindref="member">osSemaphoreGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a7e94c8b242a0c81f2cc79ec22895c87b" kindref="member">osSemaphoreAcquire</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a0abcee1b5449d7a6928fb9248c690bb6" kindref="member">osSemaphoreRelease</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a7559d4dff3cda9992fc5ab5de3e74c70" kindref="member">osSemaphoreGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a81258ce9c67fa89f07cc49d2e136cd88" kindref="member">osSemaphoreDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Memory<sp/>Pool<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/><ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref><sp/>(uint32_t<sp/>block_count,<sp/>uint32_t<sp/>block_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_memory_pool_attr__t" kindref="compound">osMemoryPoolAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="cmsis__os2_8h_1ab414a1e138205a55820acfa277c8f386" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1ab414a1e138205a55820acfa277c8f386" kindref="member">osMemoryPoolGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="cmsis__os2_8h_1a8ead54e99ccb8f112356c88f99d38fbe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a8ead54e99ccb8f112356c88f99d38fbe" kindref="member">osMemoryPoolAlloc</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="cmsis__os2_8h_1abb4f4560daa6d1f8c8789082ee186d16" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abb4f4560daa6d1f8c8789082ee186d16" kindref="member">osMemoryPoolFree</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="cmsis__os2_8h_1ad696e94bfbe28f0b6613f9303fdf6a37" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ad696e94bfbe28f0b6613f9303fdf6a37" kindref="member">osMemoryPoolGetCapacity</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="cmsis__os2_8h_1ab2bf059b7fa7679c3cccdaeec60b6c0e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ab2bf059b7fa7679c3cccdaeec60b6c0e" kindref="member">osMemoryPoolGetBlockSize</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="cmsis__os2_8h_1a958a9449bff8c95ce213de98eef5739d" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a958a9449bff8c95ce213de98eef5739d" kindref="member">osMemoryPoolGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="cmsis__os2_8h_1a0394cffa9479a7994e3b03c79c1cb909" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a0394cffa9479a7994e3b03c79c1cb909" kindref="member">osMemoryPoolGetSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="cmsis__os2_8h_1a8c39e7e5cd2b9eda907466808e59d62e" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a8c39e7e5cd2b9eda907466808e59d62e" kindref="member">osMemoryPoolDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>====<sp/>Message<sp/>Queue<sp/>Management<sp/>Functions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/><ref refid="cmsis__os2_8h_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref><sp/>(uint32_t<sp/>msg_count,<sp/>uint32_t<sp/>msg_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_message_queue_attr__t" kindref="compound">osMessageQueueAttr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="cmsis__os2_8h_1ae7cf7bf2b97a5ae481fb60fcce99247a" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1ae7cf7bf2b97a5ae481fb60fcce99247a" kindref="member">osMessageQueueGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aa515fc8b956f721a8f72b2c505813bfc" kindref="member">osMessageQueuePut</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_ptr,<sp/>uint8_t<sp/>msg_prio,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ad90d4959466a7a65105061da8256ab9e" kindref="member">osMessageQueueGet</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_ptr,<sp/>uint8_t<sp/>*msg_prio,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ac24f87d4f395e9e9c900c320e45ade8a" kindref="member">osMessageQueueGetCapacity</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a96d3d84069b20359de48109e28a1a89e" kindref="member">osMessageQueueGetMsgSize</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a6a32ac394fcff568b251c160cc3014b2" kindref="member">osMessageQueueGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1addf0904427436dd3880d46263c2dc9fa" kindref="member">osMessageQueueGetSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ac6dce7f9ad132d266292c2e979d861b4" kindref="member">osMessageQueueReset</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aba987f665444e0d83fa6a3a68bc72abe" kindref="member">osMessageQueueDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>CMSIS_OS2_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"/>
  </compounddef>
</doxygen>
