<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="croutine_8c" kind="file" language="C++">
    <compoundname>croutine.c</compoundname>
    <includes refid="_free_r_t_o_s_8h" local="yes">FreeRTOS.h</includes>
    <includes refid="task_8h" local="yes">task.h</includes>
    <includes refid="croutine_8h" local="yes">croutine.h</includes>
    <incdepgraph>
      <node id="5">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/croutine.c</label>
        <link refid="croutine_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>croutine.h</label>
        <link refid="croutine_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>deprecated_definitions.h</label>
        <link refid="deprecated__definitions_8h"/>
      </node>
      <node id="12">
        <label>list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="10">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h"/>
      </node>
      <node id="7">
        <label>portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>projdefs.h</label>
        <link refid="projdefs_8h"/>
      </node>
      <node id="11">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>portmacro.h</label>
        <link refid="portmacro_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.3.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s_8h" kindref="compound">FreeRTOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="task_8h" kindref="compound">task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="croutine_8h" kindref="compound">croutine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>whole<sp/>file<sp/>is<sp/>co-routines<sp/>are<sp/>not<sp/>being<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configUSE_CO_ROUTINES<sp/>!=<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Some<sp/>kernel<sp/>aware<sp/>debuggers<sp/>require<sp/>data<sp/>to<sp/>be<sp/>viewed<sp/>to<sp/>be<sp/>global,<sp/>rather</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>than<sp/>file<sp/>scope.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>portREMOVE_STATIC_QUALIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lists<sp/>for<sp/>ready<sp/>and<sp/>blocked<sp/>co-routines.<sp/>--------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>pxReadyCoRoutineLists[<sp/><ref refid="_free_r_t_o_s_config_8h_1ae8f3fd645e6e78dfeb8a6e874af6195a" kindref="member">configMAX_CO_ROUTINE_PRIORITIES</ref><sp/>];<sp/></highlight><highlight class="comment">/*&lt;<sp/>Prioritised<sp/>ready<sp/>co-routines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>xDelayedCoRoutineList1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Delayed<sp/>co-routines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>xDelayedCoRoutineList2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Delayed<sp/>co-routines<sp/>(two<sp/>lists<sp/>are<sp/>used<sp/>-<sp/>one<sp/>for<sp/>delays<sp/>that<sp/>have<sp/>overflowed<sp/>the<sp/>current<sp/>tick<sp/>count.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>pxDelayedCoRoutineList;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Points<sp/>to<sp/>the<sp/>delayed<sp/>co-routine<sp/>list<sp/>currently<sp/>being<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>pxOverflowDelayedCoRoutineList;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Points<sp/>to<sp/>the<sp/>delayed<sp/>co-routine<sp/>list<sp/>currently<sp/>being<sp/>used<sp/>to<sp/>hold<sp/>co-routines<sp/>that<sp/>have<sp/>overflowed<sp/>the<sp/>current<sp/>tick<sp/>count.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>xPendingReadyCoRoutineList;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>Holds<sp/>co-routines<sp/>that<sp/>have<sp/>been<sp/>readied<sp/>by<sp/>an<sp/>external<sp/>event.<sp/><sp/>They<sp/>cannot<sp/>be<sp/>added<sp/>directly<sp/>to<sp/>the<sp/>ready<sp/>lists<sp/>as<sp/>the<sp/>ready<sp/>lists<sp/>cannot<sp/>be<sp/>accessed<sp/>by<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Other<sp/>file<sp/>private<sp/>variables.<sp/>--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*<sp/>pxCurrentCoRoutine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxTopCoRoutineReadyPriority<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xCoRoutineTickCount<sp/>=<sp/>0,<sp/>xLastTickCount<sp/>=<sp/>0,<sp/>xPassedTicks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>initial<sp/>state<sp/>of<sp/>the<sp/>co-routine<sp/>when<sp/>it<sp/>is<sp/>created.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>corINITIAL_STATE<sp/><sp/>(<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Place<sp/>the<sp/>co-routine<sp/>represented<sp/>by<sp/>pxCRCB<sp/>into<sp/>the<sp/>appropriate<sp/>ready<sp/>queue</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>priority.<sp/><sp/>It<sp/>is<sp/>inserted<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>This<sp/>macro<sp/>accesses<sp/>the<sp/>co-routine<sp/>ready<sp/>lists<sp/>and<sp/>therefore<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>used<sp/>from<sp/>within<sp/>an<sp/>ISR.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>prvAddCoRoutineToReadyQueue(<sp/>pxCRCB<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>if(<sp/>pxCRCB-&gt;uxPriority<sp/>&gt;<sp/>uxTopCoRoutineReadyPriority<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uxTopCoRoutineReadyPriority<sp/>=<sp/>pxCRCB-&gt;uxPriority;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>vListInsertEnd(<sp/>(<sp/>List_t<sp/>*<sp/>)<sp/>&amp;(<sp/>pxReadyCoRoutineLists[<sp/>pxCRCB-&gt;uxPriority<sp/>]<sp/>),<sp/>&amp;(<sp/>pxCRCB-&gt;xGenericListItem<sp/>)<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Utility<sp/>to<sp/>ready<sp/>all<sp/>the<sp/>lists<sp/>used<sp/>by<sp/>the<sp/>scheduler.<sp/><sp/>This<sp/>is<sp/>called</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>automatically<sp/>upon<sp/>the<sp/>creation<sp/>of<sp/>the<sp/>first<sp/>co-routine.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvInitialiseCoRoutineLists(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>Co-routines<sp/>that<sp/>are<sp/>readied<sp/>by<sp/>an<sp/>interrupt<sp/>cannot<sp/>be<sp/>placed<sp/>directly<sp/>into</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>the<sp/>ready<sp/>lists<sp/>(there<sp/>is<sp/>no<sp/>mutual<sp/>exclusion).<sp/><sp/>Instead<sp/>they<sp/>are<sp/>placed<sp/>in</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>pending<sp/>ready<sp/>list<sp/>in<sp/>order<sp/>that<sp/>they<sp/>can<sp/>later<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>ready</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>list<sp/>by<sp/>the<sp/>co-routine<sp/>scheduler.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckPendingReadyList(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>Macro<sp/>that<sp/>looks<sp/>at<sp/>the<sp/>list<sp/>of<sp/>co-routines<sp/>that<sp/>are<sp/>currently<sp/>delayed<sp/>to</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>see<sp/>if<sp/>any<sp/>require<sp/>waking.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>Co-routines<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>queue<sp/>in<sp/>the<sp/>order<sp/>of<sp/>their<sp/>wake<sp/>time<sp/>-</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>meaning<sp/>once<sp/>one<sp/>co-routine<sp/>has<sp/>been<sp/>found<sp/>whose<sp/>timer<sp/>has<sp/>not<sp/>expired</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>we<sp/>need<sp/>not<sp/>look<sp/>any<sp/>further<sp/>down<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckDelayedList(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="croutine_8h_1ae0e03637a3d2c134e9b52006f353d8c0" kindref="member">xCoRoutineCreate</ref>(<sp/><ref refid="croutine_8h_1a397a7505718dd366d8411ce324c49758" kindref="member">crCOROUTINE_CODE</ref><sp/>pxCoRoutineCode,<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxPriority,<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxIndex<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*pxCoRoutine;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>memory<sp/>that<sp/>will<sp/>store<sp/>the<sp/>co-routine<sp/>control<sp/>block.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>pxCoRoutine<sp/>=<sp/>(<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*<sp/>)<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxCoRoutine<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>pxCurrentCoRoutine<sp/>is<sp/>NULL<sp/>then<sp/>this<sp/>is<sp/>the<sp/>first<sp/>co-routine<sp/>to</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>created<sp/>and<sp/>the<sp/>co-routine<sp/>data<sp/>structures<sp/>need<sp/>initialising.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxCurrentCoRoutine<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxCurrentCoRoutine<sp/>=<sp/>pxCoRoutine;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prvInitialiseCoRoutineLists();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>priority<sp/>is<sp/>within<sp/>limits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>uxPriority<sp/>&gt;=<sp/><ref refid="_free_r_t_o_s_config_8h_1ae8f3fd645e6e78dfeb8a6e874af6195a" kindref="member">configMAX_CO_ROUTINE_PRIORITIES</ref><sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uxPriority<sp/>=<sp/><ref refid="_free_r_t_o_s_config_8h_1ae8f3fd645e6e78dfeb8a6e874af6195a" kindref="member">configMAX_CO_ROUTINE_PRIORITIES</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>out<sp/>the<sp/>co-routine<sp/>control<sp/>block<sp/>from<sp/>the<sp/>function<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa0d702ff5a23c61598fe13e5a78fb1dc" kindref="member">uxState</ref><sp/>=<sp/>corINITIAL_STATE;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a752101a5d41b5caa7fd5149436613c8f" kindref="member">uxPriority</ref><sp/>=<sp/>uxPriority;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a6c185cd2145f562fb570bea9b158fc81" kindref="member">uxIndex</ref><sp/>=<sp/>uxIndex;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1acc98c7364cd88e8e034a5f9bba113832" kindref="member">pxCoRoutineFunction</ref><sp/>=<sp/>pxCoRoutineCode;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>all<sp/>the<sp/>other<sp/>co-routine<sp/>control<sp/>block<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1ab91611baae53be209a05d211f55f5395" kindref="member">vListInitialiseItem</ref>(<sp/>&amp;(<sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1ab91611baae53be209a05d211f55f5395" kindref="member">vListInitialiseItem</ref>(<sp/>&amp;(<sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>co-routine<sp/>control<sp/>block<sp/>as<sp/>a<sp/>link<sp/>back<sp/>from<sp/>the<sp/>ListItem_t.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>so<sp/>we<sp/>can<sp/>get<sp/>back<sp/>to<sp/>the<sp/>containing<sp/>CRCB<sp/>from<sp/>a<sp/>generic<sp/>item</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>a<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1acc01a08e534b54fe438847ef02e5060a" kindref="member">listSET_LIST_ITEM_OWNER</ref>(<sp/>&amp;(<sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>),<sp/>pxCoRoutine<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1acc01a08e534b54fe438847ef02e5060a" kindref="member">listSET_LIST_ITEM_OWNER</ref>(<sp/>&amp;(<sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>),<sp/>pxCoRoutine<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Event<sp/>lists<sp/>are<sp/>always<sp/>in<sp/>priority<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a83e95e61652f032fdc26aa622f5e2610" kindref="member">listSET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>),<sp/>(<sp/>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1ae8f3fd645e6e78dfeb8a6e874af6195a" kindref="member">configMAX_CO_ROUTINE_PRIORITIES</ref><sp/>-<sp/>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>)<sp/>uxPriority<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>the<sp/>co-routine<sp/>has<sp/>been<sp/>initialised<sp/>it<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>ready</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/>list<sp/>at<sp/>the<sp/>correct<sp/>priority.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>prvAddCoRoutineToReadyQueue(<sp/>pxCoRoutine<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1a0b024e12cbca6f5018f5f1a43818b03d" kindref="member">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="croutine_8h_1a6b5b1c5857d38b79c96636754208e32d" kindref="member">vCoRoutineAddToDelayedList</ref>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTicksToDelay,<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxEventList<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeToWake;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>time<sp/>to<sp/>wake<sp/>-<sp/>this<sp/>may<sp/>overflow<sp/>but<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/>not<sp/>a<sp/>problem.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>xTimeToWake<sp/>=<sp/>xCoRoutineTickCount<sp/>+<sp/>xTicksToDelay;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>remove<sp/>ourselves<sp/>from<sp/>the<sp/>ready<sp/>list<sp/>before<sp/>adding</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/>ourselves<sp/>to<sp/>the<sp/>blocked<sp/>list<sp/>as<sp/>the<sp/>same<sp/>list<sp/>item<sp/>is<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/>both<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/>)<sp/>&amp;(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>list<sp/>item<sp/>will<sp/>be<sp/>inserted<sp/>in<sp/>wake<sp/>time<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1a83e95e61652f032fdc26aa622f5e2610" kindref="member">listSET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>),<sp/>xTimeToWake<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimeToWake<sp/>&lt;<sp/>xCoRoutineTickCount<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wake<sp/>time<sp/>has<sp/>overflowed.<sp/><sp/>Place<sp/>this<sp/>item<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>overflow<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>pxOverflowDelayedCoRoutineList,<sp/>(<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/>)<sp/>&amp;(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>wake<sp/>time<sp/>has<sp/>not<sp/>overflowed,<sp/>so<sp/>we<sp/>can<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>current<sp/>block<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>pxDelayedCoRoutineList,<sp/>(<sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/>*<sp/>)<sp/>&amp;(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxEventList<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>add<sp/>the<sp/>co-routine<sp/>to<sp/>an<sp/>event<sp/>list.<sp/><sp/>If<sp/>this<sp/>is<sp/>done<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>function<sp/>must<sp/>be<sp/>called<sp/>with<sp/>interrupts<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>pxEventList,<sp/>&amp;(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckPendingReadyList(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Are<sp/>there<sp/>any<sp/>co-routines<sp/>waiting<sp/>to<sp/>get<sp/>moved<sp/>to<sp/>the<sp/>ready<sp/>list?<sp/><sp/>These</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/>are<sp/>co-routines<sp/>that<sp/>have<sp/>been<sp/>readied<sp/>by<sp/>an<sp/>ISR.<sp/><sp/>The<sp/>ISR<sp/>cannot<sp/>access</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/>the<sp/>ready<sp/>lists<sp/>itself.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>&amp;xPendingReadyCoRoutineList<sp/>)<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*pxUnblockedCRCB;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>pending<sp/>ready<sp/>list<sp/>can<sp/>be<sp/>accessed<sp/>by<sp/>an<sp/>ISR.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" kindref="member">portDISABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxUnblockedCRCB<sp/>=<sp/>(<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*<sp/>)<sp/><ref refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" kindref="member">listGET_OWNER_OF_HEAD_ENTRY</ref>(<sp/>(&amp;xPendingReadyCoRoutineList)<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxUnblockedCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173" kindref="member">portENABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxUnblockedCRCB-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>prvAddCoRoutineToReadyQueue(<sp/>pxUnblockedCRCB<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckDelayedList(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*pxCRCB;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>xPassedTicks<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>()<sp/>-<sp/>xLastTickCount;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>xPassedTicks<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>xCoRoutineTickCount++;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>xPassedTicks--;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>tick<sp/>count<sp/>has<sp/>overflowed<sp/>we<sp/>need<sp/>to<sp/>swap<sp/>the<sp/>ready<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xCoRoutineTickCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>pxTemp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tick<sp/>count<sp/>has<sp/>overflowed<sp/>so<sp/>we<sp/>need<sp/>to<sp/>swap<sp/>the<sp/>delay<sp/>lists.<sp/><sp/>If<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>items<sp/>in<sp/>pxDelayedCoRoutineList<sp/>here<sp/>then<sp/>there<sp/>is<sp/>an<sp/>error!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxTemp<sp/>=<sp/>pxDelayedCoRoutineList;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxDelayedCoRoutineList<sp/>=<sp/>pxOverflowDelayedCoRoutineList;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxOverflowDelayedCoRoutineList<sp/>=<sp/>pxTemp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>this<sp/>tick<sp/>has<sp/>made<sp/>a<sp/>timeout<sp/>expire.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>pxDelayedCoRoutineList<sp/>)<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxCRCB<sp/>=<sp/>(<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*<sp/>)<sp/><ref refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" kindref="member">listGET_OWNER_OF_HEAD_ENTRY</ref>(<sp/>pxDelayedCoRoutineList<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xCoRoutineTickCount<sp/>&lt;<sp/><ref refid="list_8h_1aa50d09950abc602741d7ebe8387f4e1a" kindref="member">listGET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxCRCB-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timeout<sp/>not<sp/>yet<sp/>expired.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1" kindref="member">portDISABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>event<sp/>could<sp/>have<sp/>occurred<sp/>just<sp/>before<sp/>this<sp/>critical</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section.<sp/><sp/>If<sp/>this<sp/>is<sp/>the<sp/>case<sp/>then<sp/>the<sp/>generic<sp/>list<sp/>item<sp/>will</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>been<sp/>moved<sp/>to<sp/>the<sp/>pending<sp/>ready<sp/>list<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>is<sp/>still<sp/>valid.<sp/><sp/>Also<sp/>the<sp/>pvContainer<sp/>parameter<sp/>will<sp/>have</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>been<sp/>set<sp/>to<sp/>NULL<sp/>so<sp/>the<sp/>following<sp/>lines<sp/>are<sp/>also<sp/>valid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxCRCB-&gt;<ref refid="structcor_co_routine_control_block_1aa2900494db8782eeb8ef12d482501406" kindref="member">xGenericListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>co-routine<sp/>waiting<sp/>on<sp/>an<sp/>event<sp/>also?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref>.<ref refid="structx_l_i_s_t___i_t_e_m_1a07dc4f55365dc7d44624d04290a80263" kindref="member">pxContainer</ref><sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173" kindref="member">portENABLE_INTERRUPTS</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prvAddCoRoutineToReadyQueue(<sp/>pxCRCB<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>xLastTickCount<sp/>=<sp/>xCoRoutineTickCount;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="croutine_8h_1a5333c649a2c063006ca3cd7a3b5b9240" kindref="member">vCoRoutineSchedule</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>any<sp/>co-routines<sp/>readied<sp/>by<sp/>events<sp/>need<sp/>moving<sp/>to<sp/>the<sp/>ready<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>prvCheckPendingReadyList();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>any<sp/>delayed<sp/>co-routines<sp/>have<sp/>timed<sp/>out.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>prvCheckDelayedList();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>highest<sp/>priority<sp/>queue<sp/>that<sp/>contains<sp/>ready<sp/>co-routines.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>&amp;(<sp/>pxReadyCoRoutineLists[<sp/>uxTopCoRoutineReadyPriority<sp/>]<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>uxTopCoRoutineReadyPriority<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>more<sp/>co-routines<sp/>to<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>--uxTopCoRoutineReadyPriority;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>listGET_OWNER_OF_NEXT_ENTRY<sp/>walks<sp/>through<sp/>the<sp/>list,<sp/>so<sp/>the<sp/>co-routines</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>of<sp/>the<sp/>same<sp/>priority<sp/>get<sp/>an<sp/>equal<sp/>share<sp/>of<sp/>the<sp/>processor<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd" kindref="member">listGET_OWNER_OF_NEXT_ENTRY</ref>(<sp/>pxCurrentCoRoutine,<sp/>&amp;(<sp/>pxReadyCoRoutineLists[<sp/>uxTopCoRoutineReadyPriority<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>co-routine.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>(<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1acc98c7364cd88e8e034a5f9bba113832" kindref="member">pxCoRoutineFunction</ref><sp/>)(<sp/>pxCurrentCoRoutine,<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a6c185cd2145f562fb570bea9b158fc81" kindref="member">uxIndex</ref><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvInitialiseCoRoutineLists(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxPriority;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>uxPriority<sp/>=<sp/>0;<sp/>uxPriority<sp/>&lt;<sp/><ref refid="_free_r_t_o_s_config_8h_1ae8f3fd645e6e78dfeb8a6e874af6195a" kindref="member">configMAX_CO_ROUTINE_PRIORITIES</ref>;<sp/>uxPriority++<sp/>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>&amp;(<sp/>pxReadyCoRoutineLists[<sp/>uxPriority<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>&amp;xDelayedCoRoutineList1<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>&amp;xDelayedCoRoutineList2<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>&amp;xPendingReadyCoRoutineList<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>with<sp/>pxDelayedCoRoutineList<sp/>using<sp/>list1<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/>pxOverflowDelayedCoRoutineList<sp/>using<sp/>list2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>pxDelayedCoRoutineList<sp/>=<sp/>&amp;xDelayedCoRoutineList1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>pxOverflowDelayedCoRoutineList<sp/>=<sp/>&amp;xDelayedCoRoutineList2;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873" kindref="member">xCoRoutineRemoveFromEventList</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxEventList<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*pxUnblockedCRCB;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>from<sp/>within<sp/>an<sp/>interrupt.<sp/><sp/>It<sp/>can<sp/>only<sp/>access</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/>event<sp/>lists<sp/>and<sp/>the<sp/>pending<sp/>ready<sp/>list.<sp/><sp/>This<sp/>function<sp/>assumes<sp/>that<sp/>a</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/>check<sp/>has<sp/>already<sp/>been<sp/>made<sp/>to<sp/>ensure<sp/>pxEventList<sp/>is<sp/>not<sp/>empty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>pxUnblockedCRCB<sp/>=<sp/>(<sp/><ref refid="structcor_co_routine_control_block" kindref="compound">CRCB_t</ref><sp/>*<sp/>)<sp/><ref refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" kindref="member">listGET_OWNER_OF_HEAD_ENTRY</ref>(<sp/>pxEventList<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxUnblockedCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1a71a6a6099b3cbd8f90539aabe5c9e572" kindref="member">vListInsertEnd</ref>(<sp/>(<sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*<sp/>)<sp/>&amp;(<sp/>xPendingReadyCoRoutineList<sp/>),<sp/>&amp;(<sp/>pxUnblockedCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a105d316da0069f766acc3b210afed1b9" kindref="member">xEventListItem</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxUnblockedCRCB-&gt;<ref refid="structcor_co_routine_control_block_1a752101a5d41b5caa7fd5149436613c8f" kindref="member">uxPriority</ref><sp/>&gt;=<sp/>pxCurrentCoRoutine-&gt;<ref refid="structcor_co_routine_control_block_1a752101a5d41b5caa7fd5149436613c8f" kindref="member">uxPriority</ref><sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_CO_ROUTINES<sp/>==<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/croutine.c"/>
  </compounddef>
</doxygen>
