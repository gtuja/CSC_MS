<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="cmsis__os2_8c" kind="file" language="C++">
    <compoundname>cmsis_os2.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="cmsis__os2_8h" local="yes">cmsis_os2.h</includes>
    <includes local="yes">cmsis_compiler.h</includes>
    <includes refid="_free_r_t_o_s_8h" local="yes">FreeRTOS.h</includes>
    <includes refid="task_8h" local="yes">task.h</includes>
    <includes refid="event__groups_8h" local="yes">event_groups.h</includes>
    <includes refid="semphr_8h" local="yes">semphr.h</includes>
    <includes refid="freertos__mpool_8h" local="yes">freertos_mpool.h</includes>
    <includes refid="freertos__os2_8h" local="yes">freertos_os2.h</includes>
    <incdepgraph>
      <node id="22">
        <label>CMSIS_device_header</label>
      </node>
      <node id="8">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c</label>
        <link refid="cmsis__os2_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmsis_os2.h</label>
        <link refid="cmsis__os2_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>freertos_mpool.h</label>
        <link refid="freertos__mpool_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>freertos_os2.h</label>
        <link refid="freertos__os2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>deprecated_definitions.h</label>
        <link refid="deprecated__definitions_8h"/>
      </node>
      <node id="16">
        <label>event_groups.h</label>
        <link refid="event__groups_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="13">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h"/>
      </node>
      <node id="10">
        <label>portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>projdefs.h</label>
        <link refid="projdefs_8h"/>
      </node>
      <node id="19">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>timers.h</label>
        <link refid="timers_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>portmacro.h</label>
        <link refid="portmacro_8h"/>
      </node>
      <node id="6">
        <label>cmsis_compiler.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_timer_callback__t" prot="public">TimerCallback_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="cmsis__os2_8c_1a8be4ebde5d4dd91b161d206545ce59aa" prot="public" static="no">
        <name>__ARM_ARCH_6M__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="38" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a43e1af8bedda108dfc4f8584e6b278a2" prot="public" static="no">
        <name>__ARM_ARCH_7M__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="41" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a43ab3e79ec5ecb615f1f2f6e83e7d48a" prot="public" static="no">
        <name>__ARM_ARCH_7EM__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="44" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1ad424c7143edd08c982dddad0ff65f4cd" prot="public" static="no">
        <name>__ARM_ARCH_8M_MAIN__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="47" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1aee91bdfb2b6986731af09835bc9c6e74" prot="public" static="no">
        <name>__ARM_ARCH_7A__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="50" column="11" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a5ebf8cfb0698df19b01d6294912068b9" prot="public" static="no">
        <name>IS_IRQ_MASKED</name>
        <param></param>
        <initializer>(__get_PRIMASK() != 0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="65" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="65" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" compoundref="cmsis__os2_8c" startline="415" endline="436">osKernelGetSysTimerCount</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1ab95d37f29a083ecbae5500bdac7fb90c" prot="public" static="no">
        <name>IS_IRQ_MODE</name>
        <param></param>
        <initializer>(__get_IPSR() != 0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="75" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" prot="public" static="no">
        <name>IS_IRQ</name>
        <param></param>
        <initializer><ref refid="cmsis__os2_8c_1ab95d37f29a083ecbae5500bdac7fb90c" kindref="member">IS_IRQ_MODE</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="78" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="78" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1af6055a51390ef65b6b6edc28bf47322e" compoundref="cmsis__os2_8c" startline="881" endline="896">osDelay</referencedby>
        <referencedby refid="cmsis__os2_8c_1a3c807924c2d6d43bc2ffb49da3f7f3a1" compoundref="cmsis__os2_8c" startline="898" endline="924">osDelayUntil</referencedby>
        <referencedby refid="cmsis__os2_8c_1a93bf258ca0007c6641fbe8e4f2b8a1e5" compoundref="cmsis__os2_8c" startline="1181" endline="1205">osEventFlagsClear</referencedby>
        <referencedby refid="cmsis__os2_8c_1a7c4acf2fb0d506ec82905dee53fb5435" compoundref="cmsis__os2_8c" startline="1274" endline="1294">osEventFlagsDelete</referencedby>
        <referencedby refid="cmsis__os2_8c_1a8bda3185f46bfd278cea8a6cf357677d" compoundref="cmsis__os2_8c" startline="1207" endline="1222">osEventFlagsGet</referencedby>
        <referencedby refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" compoundref="cmsis__os2_8c" startline="1110" endline="1148">osEventFlagsNew</referencedby>
        <referencedby refid="cmsis__os2_8c_1a33b71d14cecf90b4e72639dd19f23a5e" compoundref="cmsis__os2_8c" startline="1150" endline="1179">osEventFlagsSet</referencedby>
        <referencedby refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" compoundref="cmsis__os2_8c" startline="1224" endline="1272">osEventFlagsWait</referencedby>
        <referencedby refid="cmsis__os2_8c_1a84bcdbf2fb76b10c8df4e439f0c7e11b" compoundref="cmsis__os2_8c" startline="383" endline="393">osKernelGetTickCount</referencedby>
        <referencedby refid="cmsis__os2_8c_1ae818f6611d25ba3140bede410a52d659" compoundref="cmsis__os2_8c" startline="198" endline="220">osKernelInitialize</referencedby>
        <referencedby refid="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" compoundref="cmsis__os2_8c" startline="288" endline="313">osKernelLock</referencedby>
        <referencedby refid="cmsis__os2_8c_1ae7d0a71b9586cbbb49fcbdf6a04f0289" compoundref="cmsis__os2_8c" startline="347" endline="381">osKernelRestoreLock</referencedby>
        <referencedby refid="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" compoundref="cmsis__os2_8c" startline="265" endline="286">osKernelStart</referencedby>
        <referencedby refid="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" compoundref="cmsis__os2_8c" startline="315" endline="345">osKernelUnlock</referencedby>
        <referencedby refid="cmsis__os2_8c_1aba987f665444e0d83fa6a3a68bc72abe" compoundref="cmsis__os2_8c" startline="1918" endline="1942">osMessageQueueDelete</referencedby>
        <referencedby refid="cmsis__os2_8c_1ad90d4959466a7a65105061da8256ab9e" compoundref="cmsis__os2_8c" startline="1791" endline="1830">osMessageQueueGet</referencedby>
        <referencedby refid="cmsis__os2_8c_1a6a32ac394fcff568b251c160cc3014b2" compoundref="cmsis__os2_8c" startline="1860" endline="1875">osMessageQueueGetCount</referencedby>
        <referencedby refid="cmsis__os2_8c_1addf0904427436dd3880d46263c2dc9fa" compoundref="cmsis__os2_8c" startline="1877" endline="1898">osMessageQueueGetSpace</referencedby>
        <referencedby refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" compoundref="cmsis__os2_8c" startline="1693" endline="1748">osMessageQueueNew</referencedby>
        <referencedby refid="cmsis__os2_8c_1aa515fc8b956f721a8f72b2c505813bfc" compoundref="cmsis__os2_8c" startline="1750" endline="1789">osMessageQueuePut</referencedby>
        <referencedby refid="cmsis__os2_8c_1ac6dce7f9ad132d266292c2e979d861b4" compoundref="cmsis__os2_8c" startline="1900" endline="1916">osMessageQueueReset</referencedby>
        <referencedby refid="cmsis__os2_8c_1a7e94c8b242a0c81f2cc79ec22895c87b" compoundref="cmsis__os2_8c" startline="1584" endline="1619">osSemaphoreAcquire</referencedby>
        <referencedby refid="cmsis__os2_8c_1a81258ce9c67fa89f07cc49d2e136cd88" compoundref="cmsis__os2_8c" startline="1665" endline="1689">osSemaphoreDelete</referencedby>
        <referencedby refid="cmsis__os2_8c_1a7559d4dff3cda9992fc5ab5de3e74c70" compoundref="cmsis__os2_8c" startline="1649" endline="1663">osSemaphoreGetCount</referencedby>
        <referencedby refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" compoundref="cmsis__os2_8c" startline="1509" endline="1582">osSemaphoreNew</referencedby>
        <referencedby refid="cmsis__os2_8c_1a0abcee1b5449d7a6928fb9248c690bb6" compoundref="cmsis__os2_8c" startline="1621" endline="1647">osSemaphoreRelease</referencedby>
        <referencedby refid="cmsis__os2_8c_1a5606604d56e21ece1a654664be877439" compoundref="cmsis__os2_8c" startline="699" endline="725">osThreadEnumerate</referencedby>
        <referencedby refid="cmsis__os2_8c_1a495b3f812224e7301f23a691793765db" compoundref="cmsis__os2_8c" startline="686" endline="696">osThreadGetCount</referencedby>
        <referencedby refid="cmsis__os2_8c_1ac3230f3a55a297514b013ebf38f27e0a" compoundref="cmsis__os2_8c" startline="512" endline="523">osThreadGetName</referencedby>
        <referencedby refid="cmsis__os2_8c_1a0aeaf349604f456e68e78f9d3b42e44b" compoundref="cmsis__os2_8c" startline="586" endline="597">osThreadGetPriority</referencedby>
        <referencedby refid="cmsis__os2_8c_1a9c83bd5dd8de329701775d6ef7012720" compoundref="cmsis__os2_8c" startline="555" endline="566">osThreadGetStackSpace</referencedby>
        <referencedby refid="cmsis__os2_8c_1acc0a98b42f0a5928e12dc91dc76866b9" compoundref="cmsis__os2_8c" startline="533" endline="553">osThreadGetState</referencedby>
        <referencedby refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" compoundref="cmsis__os2_8c" startline="444" endline="510">osThreadNew</referencedby>
        <referencedby refid="cmsis__os2_8c_1a3dbad90eff394b02de76a452c84c5d80" compoundref="cmsis__os2_8c" startline="631" endline="647">osThreadResume</referencedby>
        <referencedby refid="cmsis__os2_8c_1a861a420fb2d643115b06622903fb3bfb" compoundref="cmsis__os2_8c" startline="568" endline="584">osThreadSetPriority</referencedby>
        <referencedby refid="cmsis__os2_8c_1aa9de419d0152bf77e9bbcd1f369fb990" compoundref="cmsis__os2_8c" startline="613" endline="629">osThreadSuspend</referencedby>
        <referencedby refid="cmsis__os2_8c_1a2f8ba6dba6e9c065a6e236ffd410d74a" compoundref="cmsis__os2_8c" startline="657" endline="684">osThreadTerminate</referencedby>
        <referencedby refid="cmsis__os2_8c_1ad01c7ec26535b1de6b018bb9466720e2" compoundref="cmsis__os2_8c" startline="599" endline="610">osThreadYield</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a175bef38e15c35e3420559e9dd43b112" prot="public" static="no">
        <name>SVCall_IRQ_NBR</name>
        <initializer>(IRQn_Type) -5	/* SVCall_IRQ_NBR added as SV_Call handler name is not the same for CM0 and for all other CMx */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="80" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="80" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" compoundref="cmsis__os2_8c" startline="174" endline="181">SVC_Setup</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a07e090e218afff7169b927a09f769add" prot="public" static="no">
        <name>MAX_BITS_TASK_NOTIFY</name>
        <initializer>31U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="83" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a711fcb67d2b932018350e8b1479ef64a" prot="public" static="no">
        <name>MAX_BITS_EVENT_GROUPS</name>
        <initializer>24U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="84" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1ab19214e61e9b81acb72c867a9598c77a" prot="public" static="no">
        <name>THREAD_FLAGS_INVALID_BITS</name>
        <initializer>(~((1UL &lt;&lt; <ref refid="cmsis__os2_8c_1a07e090e218afff7169b927a09f769add" kindref="member">MAX_BITS_TASK_NOTIFY</ref>)  - 1U))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="86" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" prot="public" static="no">
        <name>EVENT_FLAGS_INVALID_BITS</name>
        <initializer>(~((1UL &lt;&lt; <ref refid="cmsis__os2_8c_1a711fcb67d2b932018350e8b1479ef64a" kindref="member">MAX_BITS_EVENT_GROUPS</ref>) - 1U))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="87" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="87" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a93bf258ca0007c6641fbe8e4f2b8a1e5" compoundref="cmsis__os2_8c" startline="1181" endline="1205">osEventFlagsClear</referencedby>
        <referencedby refid="cmsis__os2_8c_1a33b71d14cecf90b4e72639dd19f23a5e" compoundref="cmsis__os2_8c" startline="1150" endline="1179">osEventFlagsSet</referencedby>
        <referencedby refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" compoundref="cmsis__os2_8c" startline="1224" endline="1272">osEventFlagsWait</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" prot="public" static="no">
        <name>KERNEL_VERSION</name>
        <initializer>                                   (((uint32_t)<ref refid="task_8h_1a790e0e16f79e71d4791435a31d5b0fc7" kindref="member">tskKERNEL_VERSION_MAJOR</ref> * 10000000UL) | \
                                   ((uint32_t)<ref refid="task_8h_1ab0b5ab04d8419227d0a5ac94af6b3639" kindref="member">tskKERNEL_VERSION_MINOR</ref> *    10000UL) | \
                                   ((uint32_t)<ref refid="task_8h_1a4cb001d5c86f4a8a5272f27227eb3247" kindref="member">tskKERNEL_VERSION_BUILD</ref> *        1UL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="90" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="90" bodyend="92"/>
        <referencedby refid="cmsis__os2_8c_1a6f7764e7250c5c5364c00c45a5d1d199" compoundref="cmsis__os2_8c" startline="222" endline="238">osKernelGetInfo</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" prot="public" static="no">
        <name>KERNEL_ID</name>
        <initializer>(&quot;FreeRTOS &quot; tskKERNEL_VERSION_NUMBER)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="94" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="94" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a6f7764e7250c5c5364c00c45a5d1d199" compoundref="cmsis__os2_8c" startline="222" endline="238">osKernelGetInfo</referencedby>
      </memberdef>
      <memberdef kind="define" id="cmsis__os2_8c_1a03b7cb6ac11b161ce9e11f18a111d24c" prot="public" static="no">
        <name>uxSemaphoreGetCountFromISR</name>
        <param><defname>xSemaphore</defname></param>
        <initializer><ref refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" kindref="member">uxQueueMessagesWaitingFromISR</ref>( ( <ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref> ) ( xSemaphore ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="187" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="187" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" prot="public" static="yes" mutable="no">
        <type><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref></type>
        <definition>osKernelState_t KernelState</definition>
        <argsstring></argsstring>
        <name>KernelState</name>
        <initializer>= <ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" kindref="member">osKernelInactive</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="103" column="24" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="103" bodyend="-1"/>
        <referencedby refid="cmsis__os2_8c_1a48b69b81012fce051f639be288b243ba" compoundref="cmsis__os2_8c" startline="240" endline="263">osKernelGetState</referencedby>
        <referencedby refid="cmsis__os2_8c_1ae818f6611d25ba3140bede410a52d659" compoundref="cmsis__os2_8c" startline="198" endline="220">osKernelInitialize</referencedby>
        <referencedby refid="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" compoundref="cmsis__os2_8c" startline="265" endline="286">osKernelStart</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void SVC_Setup</definition>
        <argsstring>(void)</argsstring>
        <name>SVC_Setup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="174" column="22" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="174" bodyend="181"/>
        <references refid="cmsis__os2_8c_1a175bef38e15c35e3420559e9dd43b112" compoundref="cmsis__os2_8c" startline="80">SVCall_IRQ_NBR</references>
        <referencedby refid="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" compoundref="cmsis__os2_8c" startline="265" endline="286">osKernelStart</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t OS_Tick_GetCount</definition>
        <argsstring>(void)</argsstring>
        <name>OS_Tick_GetCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="400" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="400" bodyend="403" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="191" declcolumn="17"/>
        <referencedby refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" compoundref="cmsis__os2_8c" startline="415" endline="436">osKernelGetSysTimerCount</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t OS_Tick_GetOverflow</definition>
        <argsstring>(void)</argsstring>
        <name>OS_Tick_GetOverflow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="406" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="406" bodyend="408" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="193" declcolumn="17"/>
        <referencedby refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" compoundref="cmsis__os2_8c" startline="415" endline="436">osKernelGetSysTimerCount</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t OS_Tick_GetInterval</definition>
        <argsstring>(void)</argsstring>
        <name>OS_Tick_GetInterval</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="411" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="411" bodyend="413" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="195" declcolumn="17"/>
        <referencedby refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" compoundref="cmsis__os2_8c" startline="415" endline="436">osKernelGetSysTimerCount</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ae818f6611d25ba3140bede410a52d659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelInitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the RTOS Kernel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="198" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="198" bodyend="220"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" compoundref="cmsis__os2_8h" startline="61">osKernelInactive</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee">vPortDefineHeapRegions</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a6f7764e7250c5c5364c00c45a5d1d199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelGetInfo</definition>
        <argsstring>(osVersion_t *version, char *id_buf, uint32_t id_size)</argsstring>
        <name>osKernelGetInfo</name>
        <param>
          <type><ref refid="structos_version__t" kindref="compound">osVersion_t</ref> *</type>
          <declname>version</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>id_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id_size</declname>
        </param>
        <briefdescription>
<para>Get RTOS Kernel Information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">version</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for retrieving version information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">id_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for retrieving kernel identification string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer for kernel identification string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="222" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="222" bodyend="238"/>
        <references refid="structos_version__t_1a399e0292985f12145a0e61c0b50a50ec" compoundref="cmsis__os2_8h" startline="55">osVersion_t::api</references>
        <references refid="structos_version__t_1a3a589e0cc665071abb720afda12e9a15" compoundref="cmsis__os2_8h" startline="56">osVersion_t::kernel</references>
        <references refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" compoundref="cmsis__os2_8c" startline="94">KERNEL_ID</references>
        <references refid="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" compoundref="cmsis__os2_8c" startline="90" endline="92">KERNEL_VERSION</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a48b69b81012fce051f639be288b243ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref></type>
        <definition>osKernelState_t osKernelGetState</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current RTOS Kernel state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current RTOS Kernel state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="240" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="240" bodyend="263"/>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" compoundref="cmsis__os2_8h" startline="61">osKernelInactive</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" compoundref="cmsis__os2_8h" startline="64">osKernelLocked</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" compoundref="cmsis__os2_8h" startline="63">osKernelRunning</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osKernelStart</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelStart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Start the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="265" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="265" bodyend="286"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" compoundref="cmsis__os2_8c" startline="103">KernelState</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" compoundref="cmsis__os2_8h" startline="62">osKernelReady</references>
        <references refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" compoundref="cmsis__os2_8h" startline="63">osKernelRunning</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" compoundref="cmsis__os2_8c" startline="174" endline="181">SVC_Setup</references>
        <references refid="task_8h_1aaf9dca1065c60abdeb309d56ab7293cb" compoundref="tasks_8c" startline="1974" endline="2095">vTaskStartScheduler</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelLock</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelLock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Lock the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>previous lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="288" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="288" bodyend="313"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelUnlock</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelUnlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unlock the RTOS Kernel scheduler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>previous lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="315" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="315" bodyend="345"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ae7d0a71b9586cbbb49fcbdf6a04f0289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t osKernelRestoreLock</definition>
        <argsstring>(int32_t lock)</argsstring>
        <name>osKernelRestoreLock</name>
        <param>
          <type>int32_t</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
<para>Restore the RTOS Kernel scheduler lock state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lock</parametername>
</parameternamelist>
<parameterdescription>
<para>lock state obtained by <ref refid="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" kindref="member">osKernelLock</ref> or <ref refid="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" kindref="member">osKernelUnlock</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new lock state (1 - locked, 0 - not locked, error code if negative). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="347" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="347" bodyend="381"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" compoundref="task_8h" startline="228">taskSCHEDULER_NOT_STARTED</references>
        <references refid="task_8h_1acbb675035741787d29da475b5a887545" compoundref="task_8h" startline="229">taskSCHEDULER_RUNNING</references>
        <references refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" compoundref="task_8h" startline="227">taskSCHEDULER_SUSPENDED</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a84bcdbf2fb76b10c8df4e439f0c7e11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetTickCount</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetTickCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel tick count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RTOS kernel current tick count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="383" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="383" bodyend="393"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
        <references refid="task_8h_1a092be3fd5752625303c307620be523ff" compoundref="tasks_8c" startline="2318" endline="2346">xTaskGetTickCountFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a7a8d7bd927eaaa58999f91d7d6310cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetTickFreq</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetTickFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel tick frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>frequency of the kernel tick in hertz, i.e. kernel ticks per second. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="395" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="395" bodyend="397"/>
        <references refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" compoundref="_free_r_t_o_s_config_8h" startline="68">configTICK_RATE_HZ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetSysTimerCount</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetSysTimerCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel system timer count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RTOS kernel current system timer count as 32-bit value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="415" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="415" bodyend="436"/>
        <references refid="cmsis__os2_8c_1a5ebf8cfb0698df19b01d6294912068b9" compoundref="cmsis__os2_8c" startline="65">IS_IRQ_MASKED</references>
        <references refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" compoundref="cmsis__os2_8c" startline="400" endline="403">OS_Tick_GetCount</references>
        <references refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" compoundref="cmsis__os2_8c" startline="411" endline="413">OS_Tick_GetInterval</references>
        <references refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" compoundref="cmsis__os2_8c" startline="406" endline="408">OS_Tick_GetOverflow</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a4d69215a93220f72be3684cad582f16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osKernelGetSysTimerFreq</definition>
        <argsstring>(void)</argsstring>
        <name>osKernelGetSysTimerFreq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the RTOS kernel system timer frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>frequency of the system timer in hertz, i.e. timer ticks per second. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="438" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="438" bodyend="440"/>
        <references refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" compoundref="_free_r_t_o_s_config_8h" startline="67">configCPU_CLOCK_HZ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
        <definition>osThreadId_t osThreadNew</definition>
        <argsstring>(osThreadFunc_t func, void *argument, const osThreadAttr_t *attr)</argsstring>
        <name>osThreadNew</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" kindref="member">osThreadFunc_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <param>
          <type>const <ref refid="structos_thread_attr__t" kindref="compound">osThreadAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create a thread and add it to Active Threads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>thread function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argument</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer that is passed to the thread function as start argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>thread attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>thread ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="444" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="444" bodyend="510"/>
        <references refid="structos_thread_attr__t_1a5f48a821ddc41410fe625860b6380d3a" compoundref="cmsis__os2_8h" startline="220">osThreadAttr_t::attr_bits</references>
        <references refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" compoundref="cmsis__os2_8h" startline="221">osThreadAttr_t::cb_mem</references>
        <references refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" compoundref="cmsis__os2_8h" startline="222">osThreadAttr_t::cb_size</references>
        <references refid="_free_r_t_o_s_config_8h_1a6c534a6cf8a00528fe0be42083484f9a" compoundref="_free_r_t_o_s_config_8h" startline="70">configMINIMAL_STACK_SIZE</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" compoundref="cmsis__os2_8h" startline="219">osThreadAttr_t::name</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" compoundref="cmsis__os2_8h" startline="84">osPriorityIdle</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" compoundref="cmsis__os2_8h" startline="133">osPriorityISR</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" compoundref="cmsis__os2_8h" startline="83">osPriorityNone</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" compoundref="cmsis__os2_8h" startline="101">osPriorityNormal</references>
        <references refid="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" compoundref="cmsis__os2_8h" startline="168">osThreadJoinable</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" compoundref="cmsis__os2_8h" startline="225">osThreadAttr_t::priority</references>
        <references refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" compoundref="cmsis__os2_8h" startline="223">osThreadAttr_t::stack_mem</references>
        <references refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" compoundref="cmsis__os2_8h" startline="224">osThreadAttr_t::stack_size</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ac3230f3a55a297514b013ebf38f27e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * osThreadGetName</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetName</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get name of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name as NULL terminated string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="512" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="512" bodyend="523"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1aedab278c23c41dcbfdf312d383bdb342" compoundref="tasks_8c" startline="2357" endline="2366">pcTaskGetName</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
        <definition>osThreadId_t osThreadGetId</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadGetId</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return the thread ID of the current running thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>thread ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="525" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="525" bodyend="531"/>
        <references refid="task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1acc0a98b42f0a5928e12dc91dc76866b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref></type>
        <definition>osThreadState_t osThreadGetState</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetState</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get current thread state of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current thread state of the specified thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="533" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="533" bodyend="553"/>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af" compoundref="task_8h" startline="83">eBlocked</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" compoundref="task_8h" startline="85">eDeleted</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86" compoundref="task_8h" startline="86">eInvalid</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83" compoundref="task_8h" startline="82">eReady</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6" compoundref="task_8h" startline="81">eRunning</references>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72" compoundref="task_8h" startline="84">eSuspended</references>
        <references refid="task_8h_1a954df77397d616484edb7c58c7760b10">eTaskGetState</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" compoundref="cmsis__os2_8h" startline="75">osThreadBlocked</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" compoundref="cmsis__os2_8h" startline="77">osThreadError</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" compoundref="cmsis__os2_8h" startline="73">osThreadReady</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" compoundref="cmsis__os2_8h" startline="74">osThreadRunning</references>
        <references refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" compoundref="cmsis__os2_8h" startline="76">osThreadTerminated</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a9c83bd5dd8de329701775d6ef7012720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadGetStackSpace</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetStackSpace</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get available stack space of a thread based on stack watermark recording during execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remaining stack space in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="555" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="555" bodyend="566"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a799967af01d328132cde814e47733437">uxTaskGetStackHighWaterMark</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a861a420fb2d643115b06622903fb3bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadSetPriority</definition>
        <argsstring>(osThreadId_t thread_id, osPriority_t priority)</argsstring>
        <name>osThreadSetPriority</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Change priority of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>new priority value for the thread function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="568" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="568" bodyend="584"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" compoundref="cmsis__os2_8h" startline="84">osPriorityIdle</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" compoundref="cmsis__os2_8h" startline="133">osPriorityISR</references>
        <references refid="task_8h_1a1ee31be76e326e0644dbd6ac40a787b6">vTaskPrioritySet</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a0aeaf349604f456e68e78f9d3b42e44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref></type>
        <definition>osPriority_t osThreadGetPriority</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadGetPriority</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Get current priority of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current priority value of the specified thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="586" column="14" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="586" bodyend="597"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" compoundref="cmsis__os2_8h" startline="134">osPriorityError</references>
        <references refid="task_8h_1a18d1148c845f5c4bff3b9e5b2077e058">uxTaskPriorityGet</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ad01c7ec26535b1de6b018bb9466720e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadYield</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadYield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pass control to next thread that is in state <bold>READY</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="599" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="599" bodyend="610"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a767e474430db1e60056e9678763f9202" compoundref="task_8h" startline="173">taskYIELD</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1aa9de419d0152bf77e9bbcd1f369fb990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadSuspend</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadSuspend</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Suspend execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="613" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="613" bodyend="629"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a84d4e660b04630be2939d91b3c2412f8">vTaskSuspend</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a3dbad90eff394b02de76a452c84c5d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadResume</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadResume</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Resume execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="631" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="631" bodyend="647"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44">vTaskResume</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a76c223e3a19bc16000e7017202610c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void osThreadExit</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadExit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Terminate execution of current running thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="650" column="7" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="650" bodyend="655"/>
        <references refid="task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a2f8ba6dba6e9c065a6e236ffd410d74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osThreadTerminate</definition>
        <argsstring>(osThreadId_t thread_id)</argsstring>
        <name>osThreadTerminate</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref></type>
          <declname>thread_id</declname>
        </param>
        <briefdescription>
<para>Terminate execution of a thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thread_id</parametername>
</parameternamelist>
<parameterdescription>
<para>thread ID obtained by <ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref> or <ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="657" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="657" bodyend="684"/>
        <references refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" compoundref="task_8h" startline="85">eDeleted</references>
        <references refid="task_8h_1a954df77397d616484edb7c58c7760b10">eTaskGetState</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a495b3f812224e7301f23a691793765db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadGetCount</definition>
        <argsstring>(void)</argsstring>
        <name>osThreadGetCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of active threads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of active threads. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="686" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="686" bodyend="696"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" compoundref="tasks_8c" startline="2349" endline="2354">uxTaskGetNumberOfTasks</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a5606604d56e21ece1a654664be877439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osThreadEnumerate</definition>
        <argsstring>(osThreadId_t *thread_array, uint32_t array_items)</argsstring>
        <name>osThreadEnumerate</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref> *</type>
          <declname>thread_array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>array_items</declname>
        </param>
        <briefdescription>
<para>Enumerate active threads. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">thread_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to array for retrieving thread IDs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array_items</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of items in array for retrieving thread IDs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of enumerated threads. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="699" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="699" bodyend="725"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" compoundref="heap__4_8c" startline="115" endline="263">pvPortMalloc</references>
        <references refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" compoundref="tasks_8c" startline="2349" endline="2354">uxTaskGetNumberOfTasks</references>
        <references refid="task_8h_1aa4603f3de3d809e9beb18d10fbac005d">uxTaskGetSystemState</references>
        <references refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" compoundref="heap__4_8c" startline="266" endline="312">vPortFree</references>
        <references refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" compoundref="tasks_8c" startline="2109" endline="2127">vTaskSuspendAll</references>
        <references refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" compoundref="tasks_8c" startline="2193" endline="2300">xTaskResumeAll</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1af6055a51390ef65b6b6edc28bf47322e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osDelay</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>osDelay</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Wait for Timeout (Time Delay). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>time ticks value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="881" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="881" bodyend="896"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1aa154068cecd7f31446a7a84af44ab1a3">vTaskDelay</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a5722e77ac0684aebdfe2a7927efa501e" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="227" endline="252">MessageQueueProducer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a3c807924c2d6d43bc2ffb49da3f7f3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osDelayUntil</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>osDelayUntil</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>Wait until specified time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>absolute time in ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="898" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="898" bodyend="924"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="task_8h_1a067da3e949e248096ec6c01f9cb75a47">vTaskDelayUntil</references>
        <references refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" compoundref="tasks_8c" startline="2303" endline="2315">xTaskGetTickCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
        <definition>osEventFlagsId_t osEventFlagsNew</definition>
        <argsstring>(const osEventFlagsAttr_t *attr)</argsstring>
        <name>osEventFlagsNew</name>
        <param>
          <type>const <ref refid="structos_event_flags_attr__t" kindref="compound">osEventFlagsAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize an Event Flags object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1110" column="18" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1110" bodyend="1148"/>
        <references refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" compoundref="cmsis__os2_8h" startline="242">osEventFlagsAttr_t::cb_mem</references>
        <references refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" compoundref="cmsis__os2_8h" startline="243">osEventFlagsAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a33b71d14cecf90b4e72639dd19f23a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsSet</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags)</argsstring>
        <name>osEventFlagsSet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set the specified Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags that shall be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags after setting or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1150" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1150" bodyend="1179"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239" compoundref="event__groups_8c" startline="519" endline="610">xEventGroupSetBits</references>
        <references refid="event__groups_8h_1a62b68278abac6358369ae8e390988a02" compoundref="event__groups_8h" startline="562">xEventGroupSetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a93bf258ca0007c6641fbe8e4f2b8a1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsClear</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags)</argsstring>
        <name>osEventFlagsClear</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear the specified Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags that shall be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1181" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1181" bodyend="1205"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba" compoundref="event__groups_8c" startline="461" endline="485">xEventGroupClearBits</references>
        <references refid="event__groups_8h_1a3d7de214a697f33fe7b914e26a93f33a" compoundref="event__groups_8h" startline="410">xEventGroupClearBitsFromISR</references>
        <references refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" compoundref="event__groups_8c" startline="503" endline="516">xEventGroupGetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a8bda3185f46bfd278cea8a6cf357677d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsGet</definition>
        <argsstring>(osEventFlagsId_t ef_id)</argsstring>
        <name>osEventFlagsGet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <briefdescription>
<para>Get the current Event Flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current event flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1207" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1207" bodyend="1222"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="event__groups_8h_1a0ae86f092fb07ccb475ae938f9a12584" compoundref="event__groups_8h" startline="708">xEventGroupGetBits</references>
        <references refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" compoundref="event__groups_8c" startline="503" endline="516">xEventGroupGetBitsFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osEventFlagsWait</definition>
        <argsstring>(osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout)</argsstring>
        <name>osEventFlagsWait</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for one or more Event Flags to become signaled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the flags to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies flags options (osFlagsXxxx). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event flags before clearing or error code if highest bit set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1224" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1224" bodyend="1272"/>
        <references refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" compoundref="cmsis__os2_8c" startline="87">EVENT_FLAGS_INVALID_BITS</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" compoundref="cmsis__os2_8h" startline="156">osFlagsNoClear</references>
        <references refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" compoundref="cmsis__os2_8h" startline="155">osFlagsWaitAll</references>
        <references refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" compoundref="projdefs_8h" startline="48">pdFAIL</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="event__groups_8c_1a379c5cca4552d3d8acd4c51e8220a6c3" compoundref="event__groups_8c" startline="311" endline="458">xEventGroupWaitBits</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a7c4acf2fb0d506ec82905dee53fb5435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osEventFlagsDelete</definition>
        <argsstring>(osEventFlagsId_t ef_id)</argsstring>
        <name>osEventFlagsDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref></type>
          <declname>ef_id</declname>
        </param>
        <briefdescription>
<para>Delete an Event Flags object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ef_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event flags ID obtained by <ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1274" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1274" bodyend="1294"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="event__groups_8c_1a6939faca89fc4ba52fa8288527042464" compoundref="event__groups_8c" startline="613" endline="652">vEventGroupDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
        <definition>osSemaphoreId_t osSemaphoreNew</definition>
        <argsstring>(uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr)</argsstring>
        <name>osSemaphoreNew</name>
        <param>
          <type>uint32_t</type>
          <declname>max_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>initial_count</declname>
        </param>
        <param>
          <type>const <ref refid="structos_semaphore_attr__t" kindref="compound">osSemaphoreAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Semaphore object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of available tokens. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>initial number of available tokens. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>semaphore ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1509" column="17" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1509" bodyend="1582"/>
        <references refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" compoundref="cmsis__os2_8h" startline="258">osSemaphoreAttr_t::cb_mem</references>
        <references refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" compoundref="cmsis__os2_8h" startline="259">osSemaphoreAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_semaphore_attr__t_1a0151928f02ecbbc0a22793a63892af66" compoundref="cmsis__os2_8h" startline="256">osSemaphoreAttr_t::name</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" compoundref="_free_r_t_o_s_8h" startline="306">vQueueAddToRegistry</references>
        <references refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" compoundref="semphr_8h" startline="1098">vSemaphoreDelete</references>
        <references refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" compoundref="semphr_8h" startline="447">xSemaphoreGive</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a7e94c8b242a0c81f2cc79ec22895c87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreAcquire</definition>
        <argsstring>(osSemaphoreId_t semaphore_id, uint32_t timeout)</argsstring>
        <name>osSemaphoreAcquire</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Acquire a Semaphore token or timeout if no tokens are available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1584" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1584" bodyend="1619"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" compoundref="semphr_8h" startline="289">xSemaphoreTake</references>
        <references refid="semphr_8h_1a076419b58e072655686939016e7ca3c5" compoundref="semphr_8h" startline="658">xSemaphoreTakeFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a0abcee1b5449d7a6928fb9248c690bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreRelease</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreRelease</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Release a Semaphore token up to the initial maximum count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1621" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1621" bodyend="1647"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" compoundref="semphr_8h" startline="447">xSemaphoreGive</references>
        <references refid="semphr_8h_1a68aa43df8b2a0dbe17d05fad74670ef0" compoundref="semphr_8h" startline="624">xSemaphoreGiveFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a7559d4dff3cda9992fc5ab5de3e74c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osSemaphoreGetCount</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreGetCount</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Get current Semaphore token count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of tokens available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1649" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1649" bodyend="1663"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" compoundref="queue_8c" startline="1963" endline="1972">uxQueueMessagesWaitingFromISR</references>
        <references refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" compoundref="semphr_8h" startline="1136">uxSemaphoreGetCount</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a81258ce9c67fa89f07cc49d2e136cd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osSemaphoreDelete</definition>
        <argsstring>(osSemaphoreId_t semaphore_id)</argsstring>
        <name>osSemaphoreDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref></type>
          <declname>semaphore_id</declname>
        </param>
        <briefdescription>
<para>Delete a Semaphore object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">semaphore_id</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore ID obtained by <ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1665" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1665" bodyend="1689"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" compoundref="_free_r_t_o_s_8h" startline="307">vQueueUnregisterQueue</references>
        <references refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" compoundref="semphr_8h" startline="1098">vSemaphoreDelete</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
        <definition>osMessageQueueId_t osMessageQueueNew</definition>
        <argsstring>(uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr)</argsstring>
        <name>osMessageQueueNew</name>
        <param>
          <type>uint32_t</type>
          <declname>msg_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>msg_size</declname>
        </param>
        <param>
          <type>const <ref refid="structos_message_queue_attr__t" kindref="compound">osMessageQueueAttr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Create and Initialize a Message Queue object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_count</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of messages in queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_size</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum message size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue attributes; NULL: default values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>message queue ID for reference by other functions or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1693" column="20" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1693" bodyend="1748"/>
        <references refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" compoundref="cmsis__os2_8h" startline="276">osMessageQueueAttr_t::cb_mem</references>
        <references refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" compoundref="cmsis__os2_8h" startline="277">osMessageQueueAttr_t::cb_size</references>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" compoundref="cmsis__os2_8h" startline="278">osMessageQueueAttr_t::mq_mem</references>
        <references refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" compoundref="cmsis__os2_8h" startline="279">osMessageQueueAttr_t::mq_size</references>
        <references refid="structos_message_queue_attr__t_1a7a0ddc31f97f8d8e5d9f880f5d03768b" compoundref="cmsis__os2_8h" startline="274">osMessageQueueAttr_t::name</references>
        <references refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" compoundref="_free_r_t_o_s_8h" startline="306">vQueueAddToRegistry</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="88" endline="168">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1aa515fc8b956f721a8f72b2c505813bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueuePut</definition>
        <argsstring>(osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout)</argsstring>
        <name>osMessageQueuePut</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msg_prio</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Put a Message into a Queue or timeout if Queue is full. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer with message to put into a queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg_prio</parametername>
</parameternamelist>
<parameterdescription>
<para>message priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1750" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1750" bodyend="1789"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" compoundref="projdefs_8h" startline="45">pdTRUE</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" compoundref="queue_8h" startline="395">xQueueSendToBack</references>
        <references refid="queue_8h_1a51e9f73417b11441a181cdc4f33a68e9" compoundref="queue_8h" startline="1055">xQueueSendToBackFromISR</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a5722e77ac0684aebdfe2a7927efa501e" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="227" endline="252">MessageQueueProducer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ad90d4959466a7a65105061da8256ab9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueGet</definition>
        <argsstring>(osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout)</argsstring>
        <name>osMessageQueueGet</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>msg_prio</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Get a Message from a Queue or timeout if Queue is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for message to get from a queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_prio</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer for message priority or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>CMSIS_RTOS_TimeOutValue or 0 in case of no time-out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1791" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1791" bodyend="1830"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" compoundref="cmsis__os2_8h" startline="180">osErrorResource</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" compoundref="cmsis__os2_8h" startline="179">osErrorTimeout</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" compoundref="projdefs_8h" startline="44">pdFALSE</references>
        <references refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" compoundref="projdefs_8h" startline="47">pdPASS</references>
        <references refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" compoundref="portmacro_8h" startline="85">portYIELD_FROM_ISR</references>
        <references refid="queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9" compoundref="queue_8c" startline="1277" endline="1415">xQueueReceive</references>
        <references refid="queue_8h_1acdf528f5c91131ae2f31c669cfd65758" compoundref="queue_8c" startline="1785" endline="1873">xQueueReceiveFromISR</references>
        <referencedby refid="_free_r_t_o_s___queues_2_src_2main_8c_1a0322cad3bd0e264bdf2104b17b6d971d" compoundref="_free_r_t_o_s___queues_2_src_2main_8c" startline="261" endline="292">MessageQueueConsumer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ac24f87d4f395e9e9c900c320e45ade8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetCapacity</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetCapacity</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get maximum number of messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum number of messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1832" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1832" bodyend="1844"/>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a96d3d84069b20359de48109e28a1a89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetMsgSize</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetMsgSize</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get maximum message size in a Memory Pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum message size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1846" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1846" bodyend="1858"/>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a6a32ac394fcff568b251c160cc3014b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetCount</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetCount</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get number of queued messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of queued messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1860" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1860" bodyend="1875"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="queue_8h_1add7ee0701ba35904d190811b9e5a4eda" compoundref="queue_8c" startline="1930" endline="1943">uxQueueMessagesWaiting</references>
        <references refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" compoundref="queue_8c" startline="1963" endline="1972">uxQueueMessagesWaitingFromISR</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1addf0904427436dd3880d46263c2dc9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t osMessageQueueGetSpace</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueGetSpace</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Get number of available slots for messages in a Message Queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of available slots for messages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1877" column="10" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1877" bodyend="1898"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="task_8h_1acb27098fc27d117f720d96bfdcd2b4c8" compoundref="task_8h" startline="188">taskENTER_CRITICAL_FROM_ISR</references>
        <references refid="task_8h_1afa2f5acc3c925b6542ecca1acf67a234" compoundref="task_8h" startline="203">taskEXIT_CRITICAL_FROM_ISR</references>
        <references refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" compoundref="_free_r_t_o_s_8h" startline="1187">xSTATIC_QUEUE::uxDummy4</references>
        <references refid="queue_8h_1aae75791e91707c1e0bb31d761921531c" compoundref="queue_8c" startline="1946" endline="1960">uxQueueSpacesAvailable</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ac6dce7f9ad132d266292c2e979d861b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueReset</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueReset</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Reset a Message Queue to initial empty state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1900" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1900" bodyend="1916"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="queue_8h_1a94df8d8bc938424151f8196db2f1177b" compoundref="queue_8h" startline="1433">xQueueReset</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1aba987f665444e0d83fa6a3a68bc72abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref></type>
        <definition>osStatus_t osMessageQueueDelete</definition>
        <argsstring>(osMessageQueueId_t mq_id)</argsstring>
        <name>osMessageQueueDelete</name>
        <param>
          <type><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref></type>
          <declname>mq_id</declname>
        </param>
        <briefdescription>
<para>Delete a Message Queue object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>message queue ID obtained by <ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status code that indicates the execution status of the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="1918" column="12" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" bodystart="1918" bodyend="1942"/>
        <references refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" compoundref="cmsis__os2_8c" startline="78">IS_IRQ</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" compoundref="cmsis__os2_8h" startline="178">osError</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" compoundref="cmsis__os2_8h" startline="183">osErrorISR</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" compoundref="cmsis__os2_8h" startline="181">osErrorParameter</references>
        <references refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" compoundref="cmsis__os2_8h" startline="177">osOK</references>
        <references refid="queue_8h_1a707cbcfe3aed6b877b6aa6d9d75a3f22" compoundref="queue_8c" startline="1975" endline="2014">vQueueDelete</references>
        <references refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" compoundref="_free_r_t_o_s_8h" startline="307">vQueueUnregisterQueue</references>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a97fd430f36f8b065226e2bff9bad1de5" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vApplicationIdleHook</definition>
        <argsstring>(void)</argsstring>
        <name>vApplicationIdleHook</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="2404" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="2404" declcolumn="13"/>
        <referencedby refid="tasks_8c_1a36c7cc58985d41c2cb1b263563dbbaa1" compoundref="tasks_8c" startline="3391" endline="3505">portTASK_FUNCTION</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1a9ca051aa77e17583aa5a85d5de5c199a" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vApplicationTickHook</definition>
        <argsstring>(void)</argsstring>
        <name>vApplicationTickHook</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="2405" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="2405" declcolumn="13"/>
        <referencedby refid="task_8h_1a978e25460ac35706f9ad30b46d9403d8" compoundref="tasks_8c" startline="2706" endline="2875">xTaskIncrementTick</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ab7e5c95cf72a3f819bc4462a7fb62ca3" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vApplicationMallocFailedHook</definition>
        <argsstring>(void)</argsstring>
        <name>vApplicationMallocFailedHook</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="2406" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="2406" declcolumn="13"/>
        <referencedby refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" compoundref="heap__4_8c" startline="115" endline="263">pvPortMalloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vApplicationDaemonTaskStartupHook</definition>
        <argsstring>(void)</argsstring>
        <name>vApplicationDaemonTaskStartupHook</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="2407" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="2407" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cmsis__os2_8c_1ab87104b26fc04ce57c4717306fc97735" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vApplicationStackOverflowHook</definition>
        <argsstring>(TaskHandle_t xTask, signed char *pcTaskName)</argsstring>
        <name>vApplicationStackOverflowHook</name>
        <param>
          <type><ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref></type>
          <declname>xTask</declname>
        </param>
        <param>
          <type>signed char *</type>
          <declname>pcTaskName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" line="2408" column="13" declfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c" declline="2408" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013-2020<sp/>Arm<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Name:<sp/><sp/><sp/><sp/>cmsis_os2.c</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Purpose:<sp/>CMSIS<sp/>RTOS2<sp/>wrapper<sp/>for<sp/>FreeRTOS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmsis__os2_8h" kindref="compound">cmsis_os2.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::CMSIS:RTOS2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmsis_compiler.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compiler<sp/>agnostic<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s_8h" kindref="compound">FreeRTOS.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARM.FreeRTOS::RTOS:Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="task_8h" kindref="compound">task.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARM.FreeRTOS::RTOS:Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event__groups_8h" kindref="compound">event_groups.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARM.FreeRTOS::RTOS:Event<sp/>Groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="semphr_8h" kindref="compound">semphr.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARM.FreeRTOS::RTOS:Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freertos__mpool_8h" kindref="compound">freertos_mpool.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>osMemoryPool<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freertos__os2_8h" kindref="compound">freertos_os2.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>check<sp/>and<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ARM_ARCH_6M__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="cmsis__os2_8c_1a8be4ebde5d4dd91b161d206545ce59aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__ARM_ARCH_6M__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ARM_ARCH_7M__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="cmsis__os2_8c_1a43e1af8bedda108dfc4f8584e6b278a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__ARM_ARCH_7M__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ARM_ARCH_7EM__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="cmsis__os2_8c_1a43ab3e79ec5ecb615f1f2f6e83e7d48a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__ARM_ARCH_7EM__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ARM_ARCH_8M_MAIN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="cmsis__os2_8c_1ad424c7143edd08c982dddad0ff65f4cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__ARM_ARCH_8M_MAIN__<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__ARM_ARCH_7A__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="cmsis__os2_8c_1aee91bdfb2b6986731af09835bc9c6e74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__ARM_ARCH_7A__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/>((__ARM_ARCH_7M__<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1U)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__ARM_ARCH_7EM__<sp/><sp/><sp/><sp/><sp/>==<sp/>1U)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__ARM_ARCH_8M_MAIN__<sp/>==<sp/>1U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MASKED()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__get_PRIMASK()<sp/>!=<sp/>0U)<sp/>||<sp/>(__get_BASEPRI()<sp/>!=<sp/>0U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/><sp/>(__ARM_ARCH_6M__<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MASKED()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__get_PRIMASK()<sp/>!=<sp/>0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(__ARM_ARCH_7A__<sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CPSR<sp/>mask<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CPSR_MASKBIT_I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MASKED()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__get_CPSR()<sp/>&amp;<sp/>CPSR_MASKBIT_I)<sp/>!=<sp/>0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="cmsis__os2_8c_1a5ebf8cfb0698df19b01d6294912068b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MASKED()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__get_PRIMASK()<sp/>!=<sp/>0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/><sp/>(__ARM_ARCH_7A__<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CPSR<sp/>mode<sp/>bitmasks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CPSR_MODE_USER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CPSR_MODE_SYSTEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1FU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MODE()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__get_mode()<sp/>!=<sp/>CPSR_MODE_USER)<sp/>&amp;&amp;<sp/>(__get_mode()<sp/>!=<sp/>CPSR_MODE_SYSTEM))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="cmsis__os2_8c_1ab95d37f29a083ecbae5500bdac7fb90c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ_MODE()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__get_IPSR()<sp/>!=<sp/>0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_IRQ()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_IRQ_MODE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="cmsis__os2_8c_1a175bef38e15c35e3420559e9dd43b112" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVCall_IRQ_NBR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IRQn_Type)<sp/>-5<sp/><sp/></highlight><highlight class="comment">/*<sp/>SVCall_IRQ_NBR<sp/>added<sp/>as<sp/>SV_Call<sp/>handler<sp/>name<sp/>is<sp/>not<sp/>the<sp/>same<sp/>for<sp/>CM0<sp/>and<sp/>for<sp/>all<sp/>other<sp/>CMx<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Limits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="cmsis__os2_8c_1a07e090e218afff7169b927a09f769add" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BITS_TASK_NOTIFY<sp/><sp/><sp/><sp/><sp/><sp/>31U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="cmsis__os2_8c_1a711fcb67d2b932018350e8b1479ef64a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BITS_EVENT_GROUPS<sp/><sp/><sp/><sp/><sp/>24U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="cmsis__os2_8c_1ab19214e61e9b81acb72c867a9598c77a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_FLAGS_INVALID_BITS<sp/>(~((1UL<sp/>&lt;&lt;<sp/>MAX_BITS_TASK_NOTIFY)<sp/><sp/>-<sp/>1U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_FLAGS_INVALID_BITS<sp/><sp/>(~((1UL<sp/>&lt;&lt;<sp/>MAX_BITS_EVENT_GROUPS)<sp/>-<sp/>1U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kernel<sp/>version<sp/>and<sp/>identification<sp/>string<sp/>definition<sp/>(major.minor.rev:<sp/>mmnnnrrrr<sp/>dec)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KERNEL_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)tskKERNEL_VERSION_MAJOR<sp/>*<sp/>10000000UL)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)tskKERNEL_VERSION_MINOR<sp/>*<sp/><sp/><sp/><sp/>10000UL)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)tskKERNEL_VERSION_BUILD<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KERNEL_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&quot;FreeRTOS<sp/>&quot;<sp/>tskKERNEL_VERSION_NUMBER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Timer<sp/>callback<sp/>information<sp/>structure<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="struct_timer_callback__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98" refid="struct_timer_callback__t_1a37f4326608a0aa016b1b6fe697153262" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" kindref="member">osTimerFunc_t</ref><sp/><ref refid="struct_timer_callback__t_1a37f4326608a0aa016b1b6fe697153262" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="99" refid="struct_timer_callback__t_1a7753be50886fbeb70e0097bf380b42f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_timer_callback__t_1a7753be50886fbeb70e0097bf380b42f6" kindref="member">arg</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kernel<sp/>initialization<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref><sp/><ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" kindref="member">osKernelInactive</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>Heap<sp/>region<sp/>definition<sp/>used<sp/>by<sp/>heap_5<sp/>variant</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>Define<sp/>configAPPLICATION_ALLOCATED_HEAP<sp/>as<sp/>nonzero<sp/>value<sp/>in<sp/>FreeRTOSConfig.h<sp/>if</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>heap<sp/>regions<sp/>are<sp/>already<sp/>defined<sp/>and<sp/>vPortDefineHeapRegions<sp/>is<sp/>called<sp/>in<sp/>application.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/>Otherwise<sp/>vPortDefineHeapRegions<sp/>will<sp/>be<sp/>called<sp/>by<sp/>osKernelInitialize<sp/>using</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>definition<sp/>configHEAP_5_REGIONS<sp/>as<sp/>parameter.<sp/>Overriding<sp/>configHEAP_5_REGIONS</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>is<sp/>possible<sp/>by<sp/>defining<sp/>it<sp/>globally<sp/>or<sp/>in<sp/>FreeRTOSConfig.h.</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FreeRTOS_HEAP_5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configAPPLICATION_ALLOCATED_HEAP<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>FreeRTOS<sp/>heap<sp/>is<sp/>not<sp/>defined<sp/>by<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>Single<sp/>region<sp/>of<sp/>size<sp/>configTOTAL_HEAP_SIZE<sp/>(defined<sp/>in<sp/>FreeRTOSConfig.h)</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>provided<sp/>by<sp/>default.<sp/>Define<sp/>configHEAP_5_REGIONS<sp/>to<sp/>provide<sp/>custom</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>HeapRegion_t<sp/>array.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>HEAP_5_REGION_SETUP<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>configHEAP_5_REGIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configHEAP_5_REGIONS<sp/>xHeapRegions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="heap__4_8c_1a286aa29b13471f0d9f5a7ce688682694" kindref="member">ucHeap</ref>[<ref refid="_free_r_t_o_s_config_8h_1a9f213227674effff0122a75d94d87938" kindref="member">configTOTAL_HEAP_SIZE</ref>];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_heap_region" kindref="compound">HeapRegion_t</ref><sp/>xHeapRegions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="heap__4_8c_1a286aa29b13471f0d9f5a7ce688682694" kindref="member">ucHeap</ref>,<sp/><ref refid="_free_r_t_o_s_config_8h_1a9f213227674effff0122a75d94d87938" kindref="member">configTOTAL_HEAP_SIZE</ref><sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>NULL,<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Global<sp/>definition<sp/>is<sp/>provided<sp/>to<sp/>override<sp/>default<sp/>heap<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_heap_region" kindref="compound">HeapRegion_t</ref><sp/>configHEAP_5_REGIONS[];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>application<sp/>already<sp/>defined<sp/>the<sp/>array<sp/>used<sp/>for<sp/>the<sp/>FreeRTOS<sp/>heap<sp/>and</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>called<sp/>vPortDefineHeapRegions<sp/>to<sp/>initialize<sp/>heap.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>HEAP_5_REGION_SETUP<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configAPPLICATION_ALLOCATED_HEAP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_FreeRTOS_HEAP_5<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SysTick)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SysTick_Handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CMSIS<sp/>SysTick<sp/>interrupt<sp/>handler<sp/>prototype<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_p_i_o___i_o_toggle_2_inc_2stm32g0xx__it_8h_1ab5e09814056d617c521549e542639b7e" kindref="member">SysTick_Handler</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FreeRTOS<sp/>tick<sp/>timer<sp/>interrupt<sp/>handler<sp/>prototype<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_free_r_t_o_s_config__template_8h_1ae42e6318b5d564e44f97f8c765859448" kindref="member">xPortSysTickHandler</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>SysTick<sp/>handler<sp/>implementation<sp/>that<sp/>also<sp/>clears<sp/>overflow<sp/>flag.</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_p_i_o___i_o_toggle_2_inc_2stm32g0xx__it_8h_1ab5e09814056d617c521549e542639b7e" kindref="member">SysTick_Handler</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>overflow<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>SysTick-&gt;CTRL;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>()<sp/>!=<sp/><ref refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" kindref="member">taskSCHEDULER_NOT_STARTED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>tick<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config__template_8h_1ae42e6318b5d564e44f97f8c765859448" kindref="member">xPortSysTickHandler</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SysTick<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/>Setup<sp/>SVC<sp/>to<sp/>reset<sp/>value.</highlight></codeline>
<codeline lineno="173"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" kindref="member">SVC_Setup</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__ARM_ARCH_7A__<sp/>==<sp/>0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Service<sp/>Call<sp/>interrupt<sp/>might<sp/>be<sp/>configured<sp/>before<sp/>kernel<sp/>start<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>when<sp/>its<sp/>priority<sp/>is<sp/>lower<sp/>or<sp/>equal<sp/>to<sp/>BASEPRI,<sp/>svc<sp/>intruction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>causes<sp/>a<sp/>Hard<sp/>Fault.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>NVIC_SetPriority<sp/>(<ref refid="cmsis__os2_8c_1a175bef38e15c35e3420559e9dd43b112" kindref="member">SVCall_IRQ_NBR</ref>,<sp/>0U);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/>Function<sp/>macro<sp/>used<sp/>to<sp/>retrieve<sp/>semaphore<sp/>count<sp/>from<sp/>ISR</highlight></codeline>
<codeline lineno="185"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>uxSemaphoreGetCountFromISR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="cmsis__os2_8c_1a03b7cb6ac11b161ce9e11f18a111d24c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>uxSemaphoreGetCountFromISR(<sp/>xSemaphore<sp/>)<sp/>uxQueueMessagesWaitingFromISR(<sp/>(<sp/>QueueHandle_t<sp/>)<sp/>(<sp/>xSemaphore<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>count<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" kindref="member">OS_Tick_GetCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>overflow<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" kindref="member">OS_Tick_GetOverflow</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" kindref="member">OS_Tick_GetInterval</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="cmsis__os2_8c_1ae818f6611d25ba3140bede410a52d659" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1ae818f6611d25ba3140bede410a52d659" kindref="member">osKernelInitialize</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>==<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" kindref="member">osKernelInactive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(USE_TRACE_EVENT_RECORDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EvrFreeRTOSSetup(0U);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(USE_FreeRTOS_HEAP_5)<sp/>&amp;&amp;<sp/>(HEAP_5_REGION_SETUP<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee" kindref="member">vPortDefineHeapRegions</ref><sp/>(configHEAP_5_REGIONS);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" kindref="member">osKernelReady</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="cmsis__os2_8c_1a6f7764e7250c5c5364c00c45a5d1d199" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a6f7764e7250c5c5364c00c45a5d1d199" kindref="member">osKernelGetInfo</ref><sp/>(<ref refid="structos_version__t" kindref="compound">osVersion_t</ref><sp/>*version,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*id_buf,<sp/>uint32_t<sp/>id_size)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Version<sp/>encoding<sp/>is<sp/>major.minor.rev:<sp/>mmnnnrrrr<sp/>dec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>version-&gt;<ref refid="structos_version__t_1a399e0292985f12145a0e61c0b50a50ec" kindref="member">api</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" kindref="member">KERNEL_VERSION</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>version-&gt;<ref refid="structos_version__t_1a3a589e0cc665071abb720afda12e9a15" kindref="member">kernel</ref><sp/>=<sp/><ref refid="cmsis__os2_8c_1a02a011ae232d9bd03776f3a57d95cf89" kindref="member">KERNEL_VERSION</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((id_buf<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(id_size<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_size<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" kindref="member">KERNEL_ID</ref>))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>id_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" kindref="member">KERNEL_ID</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(id_buf,<sp/><ref refid="cmsis__os2_8c_1ab53adb106bfbfc72bc0918855fccdb18" kindref="member">KERNEL_ID</ref>,<sp/>id_size);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="cmsis__os2_8c_1a48b69b81012fce051f639be288b243ba" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref><sp/><ref refid="cmsis__os2_8c_1a48b69b81012fce051f639be288b243ba" kindref="member">osKernelGetState</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4" kindref="member">osKernelState_t</ref><sp/>state;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>())<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref>:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" kindref="member">osKernelRunning</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" kindref="member">taskSCHEDULER_SUSPENDED</ref>:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a033026d41a9309bd9551df1ae8153553" kindref="member">osKernelLocked</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" kindref="member">taskSCHEDULER_NOT_STARTED</ref>:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>==<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" kindref="member">osKernelReady</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" kindref="member">osKernelReady</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4ae9a7d578873c28590009479283922db9" kindref="member">osKernelInactive</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(state);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a9ae2cc00f0d89d7b6a307bba942b5221" kindref="member">osKernelStart</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>==<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a87ef9718301b92bfa9c97d61d660a8aa" kindref="member">osKernelReady</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>SVC<sp/>priority<sp/>is<sp/>at<sp/>the<sp/>reset<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmsis__os2_8c_1a359625bfe75dbe8149c2a86b8504639e" kindref="member">SVC_Setup</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>state<sp/>to<sp/>enable<sp/>IRQ<sp/>masking<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmsis__os2_8c_1a3441b8874e42699577e715034910f24e" kindref="member">KernelState</ref><sp/>=<sp/><ref refid="cmsis__os2_8h_1a08326469274b668140ca934b168a5ad4a98d8ad539d2cc6c3dbb7138356049db2" kindref="member">osKernelRunning</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>kernel<sp/>scheduler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1aaf9dca1065c60abdeb309d56ab7293cb" kindref="member">vTaskStartScheduler</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8c_1a948609ee930d9b38336b9e1c2a4dfe12" kindref="member">osKernelLock</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>int32_t<sp/>lock;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>())<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" kindref="member">taskSCHEDULER_SUSPENDED</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref>:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" kindref="member">vTaskSuspendAll</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" kindref="member">taskSCHEDULER_NOT_STARTED</ref>:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lock);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8c_1af401728b4657456198c33fe75f8d6720" kindref="member">osKernelUnlock</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>int32_t<sp/>lock;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>())<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" kindref="member">taskSCHEDULER_SUSPENDED</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>()<sp/>!=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>()<sp/>==<sp/><ref refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" kindref="member">taskSCHEDULER_SUSPENDED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref>:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" kindref="member">taskSCHEDULER_NOT_STARTED</ref>:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lock);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="cmsis__os2_8c_1ae7d0a71b9586cbbb49fcbdf6a04f0289" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="cmsis__os2_8c_1ae7d0a71b9586cbbb49fcbdf6a04f0289" kindref="member">osKernelRestoreLock</ref><sp/>(int32_t<sp/>lock)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>())<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0cad071ca127a35df93166e9ed5b6ada" kindref="member">taskSCHEDULER_SUSPENDED</ref>:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref>:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lock<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" kindref="member">vTaskSuspendAll</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lock<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>()<sp/>!=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>()<sp/>!=<sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed" kindref="member">taskSCHEDULER_NOT_STARTED</ref>:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>=<sp/>(int32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lock);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="cmsis__os2_8c_1a84bcdbf2fb76b10c8df4e439f0c7e11b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a84bcdbf2fb76b10c8df4e439f0c7e11b" kindref="member">osKernelGetTickCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>ticks;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ticks<sp/>=<sp/><ref refid="task_8h_1a092be3fd5752625303c307620be523ff" kindref="member">xTaskGetTickCountFromISR</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ticks<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ticks);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="cmsis__os2_8c_1a7a8d7bd927eaaa58999f91d7d6310cee" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a7a8d7bd927eaaa58999f91d7d6310cee" kindref="member">osKernelGetTickFreq</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_free_r_t_o_s_config_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" kindref="member">configTICK_RATE_HZ</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>count<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" kindref="member">OS_Tick_GetCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>uint32_t<sp/>load<sp/>=<sp/>SysTick-&gt;LOAD;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(load<sp/>-<sp/>SysTick-&gt;VAL);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>overflow<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" kindref="member">OS_Tick_GetOverflow</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((SysTick-&gt;CTRL<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>1U);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>OS<sp/>Tick<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" kindref="member">OS_Tick_GetInterval</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(SysTick-&gt;LOAD<sp/>+<sp/>1U);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1ae0fcaff6cecfb4013bb556c87afcd7d2" kindref="member">osKernelGetSysTimerCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>uint32_t<sp/>irqmask<sp/>=<sp/><ref refid="cmsis__os2_8c_1a5ebf8cfb0698df19b01d6294912068b9" kindref="member">IS_IRQ_MASKED</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>ticks;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>__disable_irq();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>ticks<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>val<sp/><sp/><sp/>=<sp/><ref refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" kindref="member">OS_Tick_GetCount</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1a41a1a03f0c8c0296c1a7a0ee50b5e28f" kindref="member">OS_Tick_GetOverflow</ref>()<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="cmsis__os2_8c_1a54064b30740a329e0c592d83444fdd23" kindref="member">OS_Tick_GetCount</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>ticks++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>val<sp/>+=<sp/>ticks<sp/>*<sp/><ref refid="cmsis__os2_8c_1ad0931976e8157887b6adce08041342d7" kindref="member">OS_Tick_GetInterval</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(irqmask<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>__enable_irq();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="cmsis__os2_8c_1a4d69215a93220f72be3684cad582f16a" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a4d69215a93220f72be3684cad582f16a" kindref="member">osKernelGetSysTimerFreq</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_free_r_t_o_s_config_8h_1aa68082df879e6fc96bcb9b26513639e7" kindref="member">configCPU_CLOCK_HZ</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8c_1a48d68b8666d99d28fa646ee1d2182b8f" kindref="member">osThreadNew</ref><sp/>(<ref refid="cmsis__os2_8h_1a8ef2773ed8ef63ab8727e0d06ebec4d2" kindref="member">osThreadFunc_t</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_thread_attr__t" kindref="compound">osThreadAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>uint32_t<sp/>stack;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>prio;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>hTask<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>&amp;&amp;<sp/>(func<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>stack<sp/>=<sp/><ref refid="_free_r_t_o_s_config_8h_1a6c534a6cf8a00528fe0be42083484f9a" kindref="member">configMINIMAL_STACK_SIZE</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>prio<sp/><sp/>=<sp/>(<ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref>)<ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca45a2895ad30c79fb97de18cac7cc19f1" kindref="member">osPriorityNormal</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" kindref="member">name</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_thread_attr__t_1aed20d9f112c97dcb4fc6374290ab7446" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" kindref="member">priority</ref><sp/>!=<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca6c437c7185161a3bd1e7e4669dfa17a3" kindref="member">osPriorityNone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>=<sp/>(<ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref>)attr-&gt;<ref refid="structos_thread_attr__t_1a90ae74b20698ee175b68f7f53a0b9091" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((prio<sp/>&lt;<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" kindref="member">osPriorityIdle</ref>)<sp/>||<sp/>(prio<sp/>&gt;<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" kindref="member">osPriorityISR</ref>)<sp/>||<sp/>((attr-&gt;<ref refid="structos_thread_attr__t_1a5f48a821ddc41410fe625860b6380d3a" kindref="member">attr_bits</ref><sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" kindref="member">osThreadJoinable</ref>)<sp/>==<sp/><ref refid="cmsis__os2_8h_1a249499c519f3f8eef5673009ab6cfcbe" kindref="member">osThreadJoinable</ref>))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" kindref="member">stack_size</ref><sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>FreeRTOS<sp/>stack<sp/>is<sp/>not<sp/>in<sp/>bytes,<sp/>but<sp/>in<sp/>sizeof(StackType_t)<sp/>which<sp/>is<sp/>4<sp/>on<sp/>ARM<sp/>ports.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stack<sp/>size<sp/>should<sp/>be<sp/>therefore<sp/>4<sp/>byte<sp/>aligned<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>division<sp/>caused<sp/>side<sp/>effects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>=<sp/>attr-&gt;<ref refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" kindref="member">stack_size</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" kindref="member">cb_mem</ref><sp/><sp/><sp/><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" kindref="member">cb_size</ref><sp/><sp/><sp/><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_free_r_t_o_s_8h_1af0002e4ad72220b34b95fcdf43bcd82d" kindref="member">StaticTask_t</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" kindref="member">stack_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1acb537dae7fecd9c744852ff6d6ea2c04" kindref="member">stack_size</ref><sp/>&gt;<sp/><sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1a8992f7ce1ac52bb8682ccd4f42751de5" kindref="member">cb_size</ref><sp/>==<sp/>0U)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" kindref="member">stack_mem</ref><sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTask<sp/>=<sp/>xTaskCreateStatic<sp/>((<ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref>)func,<sp/>name,<sp/>stack,<sp/>argument,<sp/>prio,<sp/>(<ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/><sp/>*)attr-&gt;<ref refid="structos_thread_attr__t_1a8ce05e5336d40cba01b6e1d1e36afe77" kindref="member">stack_mem</ref>,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>*)attr-&gt;<ref refid="structos_thread_attr__t_1a378962e098d6fc89cd0bdecaf03b59de" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTaskCreate<sp/>((<ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref>)func,<sp/>name,<sp/>(uint16_t)stack,<sp/>argument,<sp/>prio,<sp/>&amp;hTask)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTask<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref>)hTask);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="cmsis__os2_8c_1ac3230f3a55a297514b013ebf38f27e0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8c_1ac3230f3a55a297514b013ebf38f27e0a" kindref="member">osThreadGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTask<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="task_8h_1aedab278c23c41dcbfdf312d383bdb342" kindref="member">pcTaskGetName</ref><sp/>(hTask);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(name);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8c_1a8df03548e89fbc56402a5cd584a505da" kindref="member">osThreadGetId</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>id;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref>)<ref refid="task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc" kindref="member">xTaskGetCurrentTaskHandle</ref>();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="cmsis__os2_8c_1acc0a98b42f0a5928e12dc91dc76866b9" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref><sp/><ref refid="cmsis__os2_8c_1acc0a98b42f0a5928e12dc91dc76866b9" kindref="member">osThreadGetState</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820d" kindref="member">osThreadState_t</ref><sp/>state;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTask<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" kindref="member">osThreadError</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a954df77397d616484edb7c58c7760b10" kindref="member">eTaskGetState</ref><sp/>(hTask))<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6" kindref="member">eRunning</ref>:<sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da71dae1f35a4b4d9d2ab24e186461a17f" kindref="member">osThreadRunning</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83" kindref="member">eReady</ref>:<sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dad9a040e03d7e7943c0217a3359fc1e8b" kindref="member">osThreadReady</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af" kindref="member">eBlocked</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72" kindref="member">eSuspended</ref>:<sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820da476cd2370e6938974fb2a79811408819" kindref="member">osThreadBlocked</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" kindref="member">eDeleted</ref>:<sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac2a35280d5475f56352c539c9c9b42f9" kindref="member">osThreadTerminated</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86" kindref="member">eInvalid</ref>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad3dc89e942e38d9f3af858a0269a820dac841e73a7198a42364c9450f1f54a0ef" kindref="member">osThreadError</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(state);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="cmsis__os2_8c_1a9c83bd5dd8de329701775d6ef7012720" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a9c83bd5dd8de329701775d6ef7012720" kindref="member">osThreadGetStackSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sz;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTask<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>(uint32_t)(<ref refid="task_8h_1a799967af01d328132cde814e47733437" kindref="member">uxTaskGetStackHighWaterMark</ref>(hTask)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref>));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sz);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="cmsis__os2_8c_1a861a420fb2d643115b06622903fb3bfb" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a861a420fb2d643115b06622903fb3bfb" kindref="member">osThreadSetPriority</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id,<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/>priority)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hTask<sp/>==<sp/>NULL)<sp/>||<sp/>(priority<sp/>&lt;<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca549e79a43ff4f8b2b31afb613f5caa81" kindref="member">osPriorityIdle</ref>)<sp/>||<sp/>(priority<sp/>&gt;<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342eca3943224956e1ea667c6a931c74137b79" kindref="member">osPriorityISR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1a1ee31be76e326e0644dbd6ac40a787b6" kindref="member">vTaskPrioritySet</ref><sp/>(hTask,<sp/>(<ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref>)priority);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="cmsis__os2_8c_1a0aeaf349604f456e68e78f9d3b42e44b" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/><ref refid="cmsis__os2_8c_1a0aeaf349604f456e68e78f9d3b42e44b" kindref="member">osThreadGetPriority</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref><sp/>prio;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTask<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>prio<sp/>=<sp/><ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ecae35f5e2f9c64ad346822521b643bdea4" kindref="member">osPriorityError</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>prio<sp/>=<sp/>(<ref refid="cmsis__os2_8h_1ad4e3e0971b41f2d17584a8c6837342ec" kindref="member">osPriority_t</ref>)((int32_t)<ref refid="task_8h_1a18d1148c845f5c4bff3b9e5b2077e058" kindref="member">uxTaskPriorityGet</ref><sp/>(hTask));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(prio);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="cmsis__os2_8c_1ad01c7ec26535b1de6b018bb9466720e2" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1ad01c7ec26535b1de6b018bb9466720e2" kindref="member">osThreadYield</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1a767e474430db1e60056e9678763f9202" kindref="member">taskYIELD</ref>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_OS2_THREAD_SUSPEND_RESUME<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="cmsis__os2_8c_1aa9de419d0152bf77e9bbcd1f369fb990" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1aa9de419d0152bf77e9bbcd1f369fb990" kindref="member">osThreadSuspend</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTask<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1a84d4e660b04630be2939d91b3c2412f8" kindref="member">vTaskSuspend</ref><sp/>(hTask);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="cmsis__os2_8c_1a3dbad90eff394b02de76a452c84c5d80" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a3dbad90eff394b02de76a452c84c5d80" kindref="member">osThreadResume</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTask<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44" kindref="member">vTaskResume</ref><sp/>(hTask);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(configUSE_OS2_THREAD_SUSPEND_RESUME<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="cmsis__os2_8c_1a76c223e3a19bc16000e7017202610c82" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a153a4a31b276a9758959580538720a51" kindref="member">__NO_RETURN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a76c223e3a19bc16000e7017202610c82" kindref="member">osThreadExit</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1a27ff4ebce26565bef136bda84201ff80" kindref="member">vTaskDelete</ref><sp/>(NULL);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;);</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657" refid="cmsis__os2_8c_1a2f8ba6dba6e9c065a6e236ffd410d74a" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a2f8ba6dba6e9c065a6e236ffd410d74a" kindref="member">osThreadTerminate</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892c" kindref="member">eTaskState</ref><sp/>tstate;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTask<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate<sp/>=<sp/><ref refid="task_8h_1a954df77397d616484edb7c58c7760b10" kindref="member">eTaskGetState</ref><sp/>(hTask);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tstate<sp/>!=<sp/><ref refid="task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35" kindref="member">eDeleted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1a27ff4ebce26565bef136bda84201ff80" kindref="member">vTaskDelete</ref><sp/>(hTask);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="cmsis__os2_8c_1a495b3f812224e7301f23a691793765db" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a495b3f812224e7301f23a691793765db" kindref="member">osThreadGetCount</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" kindref="member">uxTaskGetNumberOfTasks</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count);</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_OS2_THREAD_ENUMERATE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="cmsis__os2_8c_1a5606604d56e21ece1a654664be877439" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a5606604d56e21ece1a654664be877439" kindref="member">osThreadEnumerate</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>*thread_array,<sp/>uint32_t<sp/>array_items)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i,<sp/>count;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref><sp/>*task;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(thread_array<sp/>==<sp/>NULL)<sp/>||<sp/>(array_items<sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" kindref="member">vTaskSuspendAll</ref>();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a" kindref="member">uxTaskGetNumberOfTasks</ref>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>task<sp/><sp/>=<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref><sp/>(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_t_a_s_k___s_t_a_t_u_s" kindref="compound">TaskStatus_t</ref>));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="task_8h_1aa4603f3de3d809e9beb18d10fbac005d" kindref="member">uxTaskGetSystemState</ref><sp/>(task,<sp/>count,<sp/>NULL);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0U;<sp/>(i<sp/>&lt;<sp/>count)<sp/>&amp;&amp;<sp/>(i<sp/>&lt;<sp/>array_items);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_array[i]<sp/>=<sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref>)task[i].xHandle;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(task);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(configUSE_OS2_THREAD_ENUMERATE<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_OS2_THREAD_FLAGS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a6f89ef9caded1d9963c7b12b0f6412c9" kindref="member">osThreadFlagsSet</ref><sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>thread_id,<sp/>uint32_t<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask<sp/>=<sp/>(<ref refid="task_8h_1a25b35e6e19ecf894173e7ff95edb96ef" kindref="member">TaskHandle_t</ref>)thread_id;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hTask<sp/>==<sp/>NULL)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1ab19214e61e9b81acb72c867a9598c77a" kindref="member">THREAD_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="task_8h_1a1ed9129068b96a909356bd0369c5ecb0" kindref="member">xTaskNotifyFromISR</ref><sp/>(hTask,<sp/>flags,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b" kindref="member">eSetBits</ref>,<sp/>&amp;yield);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="task_8h_1a5c491b42e243a91c7473887d1fb96dd5" kindref="member">xTaskNotifyAndQueryFromISR</ref><sp/>(hTask,<sp/>0,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a" kindref="member">eNoAction</ref>,<sp/>&amp;rflags,<sp/>NULL);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="task_8h_1a0d2d54fb8a64011dfbb54983e4ed06bd" kindref="member">xTaskNotify</ref><sp/>(hTask,<sp/>flags,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b" kindref="member">eSetBits</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="task_8h_1aaa80adec29a2eebbfe0a551684a0acca" kindref="member">xTaskNotifyAndQuery</ref><sp/>(hTask,<sp/>0,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a" kindref="member">eNoAction</ref>,<sp/>&amp;rflags);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>flags<sp/>after<sp/>setting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a656abc1c862c5b9a2b13584c42cc0bfa" kindref="member">osThreadFlagsClear</ref><sp/>(uint32_t<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags,<sp/>cflags;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1ab19214e61e9b81acb72c867a9598c77a" kindref="member">THREAD_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>hTask<sp/>=<sp/><ref refid="task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc" kindref="member">xTaskGetCurrentTaskHandle</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1aaa80adec29a2eebbfe0a551684a0acca" kindref="member">xTaskNotifyAndQuery</ref><sp/>(hTask,<sp/>0,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a" kindref="member">eNoAction</ref>,<sp/>&amp;cflags)<sp/>==<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>cflags;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cflags<sp/>&amp;=<sp/>~flags;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1a0d2d54fb8a64011dfbb54983e4ed06bd" kindref="member">xTaskNotify</ref><sp/>(hTask,<sp/>cflags,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab61fc296ef909186b5824c823b33e130" kindref="member">eSetValueWithOverwrite</ref>)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>flags<sp/>before<sp/>clearing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a85c8d2c89466e25abbcb545d9ddd71ba" kindref="member">osThreadFlagsGet</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>hTask;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>hTask<sp/>=<sp/><ref refid="task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc" kindref="member">xTaskGetCurrentTaskHandle</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="task_8h_1aaa80adec29a2eebbfe0a551684a0acca" kindref="member">xTaskNotifyAndQuery</ref><sp/>(hTask,<sp/>0,<sp/><ref refid="task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a" kindref="member">eNoAction</ref>,<sp/>&amp;rflags)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ac11542ad6300b600f872fc96e340ec2b" kindref="member">osThreadFlagsWait</ref><sp/>(uint32_t<sp/>flags,<sp/>uint32_t<sp/>options,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags,<sp/>nval;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clear;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>t0,<sp/>td,<sp/>tout;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>rval;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1ab19214e61e9b81acb72c867a9598c77a" kindref="member">THREAD_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" kindref="member">osFlagsNoClear</ref>)<sp/>==<sp/><ref refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" kindref="member">osFlagsNoClear</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>tout<sp/><sp/><sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rval<sp/>=<sp/><ref refid="task_8h_1a0475fcda9718f403521c270a7270ff93" kindref="member">xTaskNotifyWait</ref><sp/>(0,<sp/>clear,<sp/>&amp;nval,<sp/>tout);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>==<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>&amp;=<sp/>flags;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>|=<sp/>nval;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" kindref="member">osFlagsWaitAll</ref>)<sp/>==<sp/><ref refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" kindref="member">osFlagsWaitAll</ref>)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>rflags)<sp/>==<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>rflags)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>td<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>()<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(td<sp/>&gt;<sp/>tout)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tout<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tout<sp/>-=<sp/>td;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rval<sp/>!=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>flags<sp/>before<sp/>clearing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(configUSE_OS2_THREAD_FLAGS<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="cmsis__os2_8c_1af6055a51390ef65b6b6edc28bf47322e" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1af6055a51390ef65b6b6edc28bf47322e" kindref="member">osDelay</ref><sp/>(uint32_t<sp/>ticks)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ticks<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1aa154068cecd7f31446a7a84af44ab1a3" kindref="member">vTaskDelay</ref>(ticks);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="cmsis__os2_8c_1a3c807924c2d6d43bc2ffb49da3f7f3a1" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a3c807924c2d6d43bc2ffb49da3f7f3a1" kindref="member">osDelayUntil</ref><sp/>(uint32_t<sp/>ticks)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>tcnt,<sp/>delay;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>tcnt<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>remaining<sp/>number<sp/>of<sp/>ticks<sp/>to<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)ticks<sp/>-<sp/>tcnt;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>target<sp/>tick<sp/>has<sp/>not<sp/>expired<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((delay<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>(delay<sp/>&gt;&gt;<sp/>(8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)<sp/>-<sp/>1))))<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1a067da3e949e248096ec6c01f9cb75a47" kindref="member">vTaskDelayUntil</ref><sp/>(&amp;tcnt,<sp/>delay);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>delay<sp/>or<sp/>already<sp/>expired<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_OS2_TIMER<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TimerCallback<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref><sp/>*callb;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>callb<sp/>=<sp/>(<ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref><sp/>*)<ref refid="timers_8h_1a116df5c5464393c6aeda6ecec6c9e916" kindref="member">pvTimerGetTimerID</ref><sp/>(hTimer);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callb<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>callb-&gt;<ref refid="struct_timer_callback__t_1a37f4326608a0aa016b1b6fe697153262" kindref="member">func</ref><sp/>(callb-&gt;<ref refid="struct_timer_callback__t_1a7753be50886fbeb70e0097bf380b42f6" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/><ref refid="cmsis__os2_8h_1ad4e7f785c5f700a509f55a3bf6a62bec" kindref="member">osTimerNew</ref><sp/>(<ref refid="cmsis__os2_8h_1a77a298218f3c8382b39a09a6d134d040" kindref="member">osTimerFunc_t</ref><sp/>func,<sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915" kindref="member">osTimerType_t</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argument,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_timer_attr__t" kindref="compound">osTimerAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref><sp/>*callb;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>reload;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>hTimer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>&amp;&amp;<sp/>(func<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>to<sp/>store<sp/>callback<sp/>function<sp/>and<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>callb<sp/>=<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref>));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callb<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callb-&gt;<ref refid="struct_timer_callback__t_1a37f4326608a0aa016b1b6fe697153262" kindref="member">func</ref><sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>callb-&gt;<ref refid="struct_timer_callback__t_1a7753be50886fbeb70e0097bf380b42f6" kindref="member">arg</ref><sp/><sp/>=<sp/>argument;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="cmsis__os2_8h_1a7dc24a4c2b90334427081c3da7a71915ad21712f8df5f97069c82dc9eec37b951" kindref="member">osTimerOnce</ref>)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reload<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reload<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_timer_attr__t_1a2b432a32e222f51f5c3ed37db14a2db5" kindref="member">name</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_timer_attr__t_1a2b432a32e222f51f5c3ed37db14a2db5" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_timer_attr__t_1a2a7f8245862c91afe08d0c671ded2fd3" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_timer_attr__t_1aa5c0dc5e54b430c01ca3d212a44e31fb" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_timer_attr__t_1a2a7f8245862c91afe08d0c671ded2fd3" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_timer_attr__t_1aa5c0dc5e54b430c01ca3d212a44e31fb" kindref="member">cb_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTimer<sp/>=<sp/>xTimerCreateStatic<sp/>(name,<sp/>1,<sp/>reload,<sp/>callb,<sp/>TimerCallback,<sp/>(<ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref><sp/>*)attr-&gt;<ref refid="structos_timer_attr__t_1a2a7f8245862c91afe08d0c671ded2fd3" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTimer<sp/>=<sp/>xTimerCreate<sp/>(name,<sp/>1,<sp/>reload,<sp/>callb,<sp/>TimerCallback);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hTimer<sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(callb<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(callb);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref>)hTimer);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a7938dde88ada1a01b60f41cf120069c0" kindref="member">osTimerGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer<sp/>=<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref>)timer_id;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTimer<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="timers_8h_1a5007aef53e4cc6aea1aadcdcc72aa9da" kindref="member">pcTimerGetName</ref><sp/>(hTimer);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ab6ee2859ea657641b7adfac599b8121d" kindref="member">osTimerStart</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id,<sp/>uint32_t<sp/>ticks)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer<sp/>=<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref>)timer_id;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTimer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timers_8h_1ab12eac1c69a3437b8161ce81ff34b2f4" kindref="member">xTimerChangePeriod</ref><sp/>(hTimer,<sp/>ticks,<sp/>0)<sp/>==<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abd7a89356da7717293eb0bc5d87b8ac9" kindref="member">osTimerStop</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer<sp/>=<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref>)timer_id;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTimer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timers_8h_1a2cd9b1399fb25203be698f123846dc33" kindref="member">xTimerIsTimerActive</ref><sp/>(hTimer)<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timers_8h_1a8327c7fc10aee414cb163b445c5269a4" kindref="member">xTimerStop</ref><sp/>(hTimer,<sp/>0)<sp/>==<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a69d3589f54194022c30dd01e45ec6741" kindref="member">osTimerIsRunning</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer<sp/>=<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref>)timer_id;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>uint32_t<sp/>running;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hTimer<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>running<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>running<sp/>=<sp/>(uint32_t)<ref refid="timers_8h_1a2cd9b1399fb25203be698f123846dc33" kindref="member">xTimerIsTimerActive</ref><sp/>(hTimer);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(running);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1ad0001dd74721ab461789324806db2453" kindref="member">osTimerDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1ac2000ac2a8c6740700fd8e6c938cff44" kindref="member">osTimerId_t</ref><sp/>timer_id)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>hTimer<sp/>=<sp/>(<ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref>)timer_id;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref><sp/>*callb;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTimer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>callb<sp/>=<sp/>(<ref refid="struct_timer_callback__t" kindref="compound">TimerCallback_t</ref><sp/>*)<ref refid="timers_8h_1a116df5c5464393c6aeda6ecec6c9e916" kindref="member">pvTimerGetTimerID</ref><sp/>(hTimer);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timers_8h_1a8c8e21f05ebe92e15449addc5d269d10" kindref="member">xTimerDelete</ref><sp/>(hTimer,<sp/>0)<sp/>==<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(callb);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(configUSE_OS2_TIMER<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110" refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/><ref refid="cmsis__os2_8c_1ab14b1caeb12ffa42cce1bfe889cd07df" kindref="member">osEventFlagsNew</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_event_flags_attr__t" kindref="compound">osEventFlagsAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>hEventGroup<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p" kindref="compound">StaticEventGroup_t</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_event_flags_attr__t_1a93ff7c1bc7cb7508e817b83169dc5840" kindref="member">cb_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hEventGroup<sp/>=<sp/>xEventGroupCreateStatic<sp/>(attr-&gt;<ref refid="structos_event_flags_attr__t_1adbcc8550d7f5129aacb083ac773874e4" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hEventGroup<sp/>=<sp/>xEventGroupCreate();</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref>)hEventGroup);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150" refid="cmsis__os2_8c_1a33b71d14cecf90b4e72639dd19f23a5e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a33b71d14cecf90b4e72639dd19f23a5e" kindref="member">osEventFlagsSet</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup<sp/>=<sp/>(<ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref>)ef_id;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hEventGroup<sp/>==<sp/>NULL)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" kindref="member">EVENT_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(configUSE_OS2_EVENTFLAGS_FROM_ISR<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)yield;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>timers<sp/>and<sp/>xTimerPendFunctionCall<sp/>function<sp/>to<sp/>support<sp/>osEventFlagsSet<sp/>from<sp/>ISR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="event__groups_8h_1a62b68278abac6358369ae8e390988a02" kindref="member">xEventGroupSetBitsFromISR</ref><sp/>(hEventGroup,<sp/>(<ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref>)flags,<sp/>&amp;yield)<sp/>==<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239" kindref="member">xEventGroupSetBits</ref><sp/>(hEventGroup,<sp/>(<ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref>)flags);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181" refid="cmsis__os2_8c_1a93bf258ca0007c6641fbe8e4f2b8a1e5" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a93bf258ca0007c6641fbe8e4f2b8a1e5" kindref="member">osEventFlagsClear</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup<sp/>=<sp/>(<ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref>)ef_id;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hEventGroup<sp/>==<sp/>NULL)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" kindref="member">EVENT_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(configUSE_OS2_EVENTFLAGS_FROM_ISR<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>timers<sp/>and<sp/>xTimerPendFunctionCall<sp/>function<sp/>to<sp/>support<sp/>osEventFlagsSet<sp/>from<sp/>ISR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" kindref="member">xEventGroupGetBitsFromISR</ref><sp/>(hEventGroup);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="event__groups_8h_1a3d7de214a697f33fe7b914e26a93f33a" kindref="member">xEventGroupClearBitsFromISR</ref><sp/>(hEventGroup,<sp/>(<ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref>)flags)<sp/>==<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba" kindref="member">xEventGroupClearBits</ref><sp/>(hEventGroup,<sp/>(<ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref>)flags);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207" refid="cmsis__os2_8c_1a8bda3185f46bfd278cea8a6cf357677d" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a8bda3185f46bfd278cea8a6cf357677d" kindref="member">osEventFlagsGet</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup<sp/>=<sp/>(<ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref>)ef_id;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ef_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d" kindref="member">xEventGroupGetBitsFromISR</ref><sp/>(hEventGroup);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8h_1a0ae86f092fb07ccb475ae938f9a12584" kindref="member">xEventGroupGetBits</ref><sp/>(hEventGroup);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224" refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a52acb34a8322e58020227344fe662b4e" kindref="member">osEventFlagsWait</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id,<sp/>uint32_t<sp/>flags,<sp/>uint32_t<sp/>options,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup<sp/>=<sp/>(<ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref>)ef_id;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>wait_all;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>exit_clr;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rflags;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hEventGroup<sp/>==<sp/>NULL)<sp/>||<sp/>((flags<sp/>&amp;<sp/><ref refid="cmsis__os2_8c_1a2a664044d244e86d89878ea3a77471a1" kindref="member">EVENT_FLAGS_INVALID_BITS</ref>)<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" kindref="member">osFlagsWaitAll</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait_all<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait_all<sp/>=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1aade844a42237d8c37569d4d9b16b9f1c" kindref="member">osFlagsNoClear</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit_clr<sp/>=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit_clr<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/><ref refid="event__groups_8c_1a379c5cca4552d3d8acd4c51e8220a6c3" kindref="member">xEventGroupWaitBits</ref><sp/>(hEventGroup,<sp/>(<ref refid="event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e" kindref="member">EventBits_t</ref>)flags,<sp/>exit_clr,<sp/>wait_all,<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)timeout);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1a8b6f562736fbfb5428940e0c017dec24" kindref="member">osFlagsWaitAll</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>rflags)<sp/>!=<sp/>flags)<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>rflags)<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rflags<sp/>=<sp/>(uint32_t)<ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rflags);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274" refid="cmsis__os2_8c_1a7c4acf2fb0d506ec82905dee53fb5435" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a7c4acf2fb0d506ec82905dee53fb5435" kindref="member">osEventFlagsDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1af0a3ba8f502ca6581ed1009005c0dadd" kindref="member">osEventFlagsId_t</ref><sp/>ef_id)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="struct_event_group_def__t" kindref="compound">EventGroupHandle_t</ref><sp/>hEventGroup<sp/>=<sp/>(<ref refid="event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed" kindref="member">EventGroupHandle_t</ref>)ef_id;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hEventGroup<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="event__groups_8c_1a6939faca89fc4ba52fa8288527042464" kindref="member">vEventGroupDelete</ref><sp/>(hEventGroup);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_OS2_MUTEX<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/><ref refid="cmsis__os2_8h_1ab90920022ab944296821368ef6bb52f8" kindref="member">osMutexNew</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_mutex_attr__t" kindref="compound">osMutexAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hMutex;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>uint32_t<sp/>type;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rmtx;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>int32_t<sp/><sp/>mem;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>hMutex<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>attr-&gt;<ref refid="structos_mutex_attr__t_1a9dbf080ff04a6e5fde40b8e962868fd5" kindref="member">attr_bits</ref>;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1a65c2482cc64a35d03871f3180f305926" kindref="member">osMutexRecursive</ref>)<sp/>==<sp/><ref refid="cmsis__os2_8h_1a65c2482cc64a35d03871f3180f305926" kindref="member">osMutexRecursive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmtx<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmtx<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>&amp;<sp/><ref refid="cmsis__os2_8h_1af0e1dee376798b4d516d164981526780" kindref="member">osMutexRobust</ref>)<sp/>!=<sp/><ref refid="cmsis__os2_8h_1af0e1dee376798b4d516d164981526780" kindref="member">osMutexRobust</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_mutex_attr__t_1a444c834a2336196cc87b200cbd33106c" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticSemaphore_t</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_mutex_attr__t_1a444c834a2336196cc87b200cbd33106c" kindref="member">cb_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmtx<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configUSE_RECURSIVE_MUTEXES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMutex<sp/>=<sp/>xSemaphoreCreateRecursiveMutexStatic<sp/>(attr-&gt;<ref refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMutex<sp/>=<sp/>xSemaphoreCreateMutexStatic<sp/>(attr-&gt;<ref refid="structos_mutex_attr__t_1afb6e0bd20375f3ebc1cca487b9c01799" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmtx<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configUSE_RECURSIVE_MUTEXES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMutex<sp/>=<sp/>xSemaphoreCreateRecursiveMutex<sp/>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMutex<sp/>=<sp/>xSemaphoreCreateMutex<sp/>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hMutex<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_mutex_attr__t_1af3997dba664ce0e0f788a35e8f473a4d" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" kindref="member">vQueueAddToRegistry</ref><sp/>(hMutex,<sp/>name);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hMutex<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(rmtx<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMutex<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)((uint32_t)hMutex<sp/>|<sp/>1U);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref>)hMutex);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abc54686ea0fc281823b1763422d2a924" kindref="member">osMutexAcquire</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hMutex;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rmtx;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>hMutex<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)((uint32_t)mutex_id<sp/>&amp;<sp/>~1U);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>rmtx<sp/>=<sp/>(uint32_t)mutex_id<sp/>&amp;<sp/>1U;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hMutex<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmtx<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configUSE_RECURSIVE_MUTEXES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTakeRecursive<sp/>(hMutex,<sp/>timeout)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" kindref="member">xSemaphoreTake</ref><sp/>(hMutex,<sp/>timeout)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1aea629705703580ff58776bf73c8db915" kindref="member">osMutexRelease</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hMutex;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rmtx;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>hMutex<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)((uint32_t)mutex_id<sp/>&amp;<sp/>~1U);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>rmtx<sp/>=<sp/>(uint32_t)mutex_id<sp/>&amp;<sp/>1U;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hMutex<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmtx<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configUSE_RECURSIVE_MUTEXES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreGiveRecursive<sp/>(hMutex)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" kindref="member">xSemaphoreGive</ref><sp/>(hMutex)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/><ref refid="cmsis__os2_8h_1a7f9a7666df0978738cd570cb700b83fb" kindref="member">osMutexGetOwner</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hMutex;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref><sp/>owner;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>hMutex<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)((uint32_t)mutex_id<sp/>&amp;<sp/>~1U);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>||<sp/>(hMutex<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>owner<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>owner<sp/>=<sp/>(<ref refid="cmsis__os2_8h_1a6333e016ba9b008e6dd76851c38b9217" kindref="member">osThreadId_t</ref>)<ref refid="semphr_8h_1a7403bfbc06fb8449b2334f55d939a4c4" kindref="member">xSemaphoreGetMutexHolder</ref><sp/>(hMutex);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(owner);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abee73ad227ba4587d3db12ef9bd582bc" kindref="member">osMutexDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a29b7ba721f4fe0b11c84c55d079cc3e7" kindref="member">osMutexId_t</ref><sp/>mutex_id)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hMutex;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>hMutex<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)((uint32_t)mutex_id<sp/>&amp;<sp/>~1U);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hMutex<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" kindref="member">vQueueUnregisterQueue</ref><sp/>(hMutex);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" kindref="member">vSemaphoreDelete</ref><sp/>(hMutex);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(configUSE_OS2_MUTEX<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509" refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/><ref refid="cmsis__os2_8c_1a2a39806ace781a0008a4374ca701b14a" kindref="member">osSemaphoreNew</ref><sp/>(uint32_t<sp/>max_count,<sp/>uint32_t<sp/>initial_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_semaphore_attr__t" kindref="compound">osSemaphoreAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hSemaphore;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>hSemaphore<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>&amp;&amp;<sp/>(max_count<sp/>&gt;<sp/>0U)<sp/>&amp;&amp;<sp/>(initial_count<sp/>&lt;=<sp/>max_count))<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticSemaphore_t</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_semaphore_attr__t_1aa674886431b3111d252bb90b6f911d32" kindref="member">cb_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_count<sp/>==<sp/>1U)<sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSemaphore<sp/>=<sp/>xSemaphoreCreateBinaryStatic<sp/>((<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticSemaphore_t</ref><sp/>*)attr-&gt;<ref refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSemaphore<sp/>=<sp/>xSemaphoreCreateBinary();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hSemaphore<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(initial_count<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" kindref="member">xSemaphoreGive</ref><sp/>(hSemaphore)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" kindref="member">vSemaphoreDelete</ref><sp/>(hSemaphore);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSemaphore<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSemaphore<sp/>=<sp/>xSemaphoreCreateCountingStatic<sp/>(max_count,<sp/>initial_count,<sp/>(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticSemaphore_t</ref><sp/>*)attr-&gt;<ref refid="structos_semaphore_attr__t_1adcabe022804af99fc5a4477dd95c8003" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSemaphore<sp/>=<sp/>xSemaphoreCreateCounting<sp/>(max_count,<sp/>initial_count);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hSemaphore<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_semaphore_attr__t_1a0151928f02ecbbc0a22793a63892af66" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" kindref="member">vQueueAddToRegistry</ref><sp/>(hSemaphore,<sp/>name);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref>)hSemaphore);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="cmsis__os2_8c_1a7e94c8b242a0c81f2cc79ec22895c87b" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a7e94c8b242a0c81f2cc79ec22895c87b" kindref="member">osSemaphoreAcquire</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hSemaphore<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)semaphore_id;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hSemaphore<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1a076419b58e072655686939016e7ca3c5" kindref="member">xSemaphoreTakeFromISR</ref><sp/>(hSemaphore,<sp/>&amp;yield)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" kindref="member">xSemaphoreTake</ref><sp/>(hSemaphore,<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)timeout)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621" refid="cmsis__os2_8c_1a0abcee1b5449d7a6928fb9248c690bb6" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a0abcee1b5449d7a6928fb9248c690bb6" kindref="member">osSemaphoreRelease</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hSemaphore<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)semaphore_id;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hSemaphore<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1a68aa43df8b2a0dbe17d05fad74670ef0" kindref="member">xSemaphoreGiveFromISR</ref><sp/>(hSemaphore,<sp/>&amp;yield)<sp/>!=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" kindref="member">xSemaphoreGive</ref><sp/>(hSemaphore)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649" refid="cmsis__os2_8c_1a7559d4dff3cda9992fc5ab5de3e74c70" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a7559d4dff3cda9992fc5ab5de3e74c70" kindref="member">osSemaphoreGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id)<sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hSemaphore<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)semaphore_id;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hSemaphore<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" kindref="member">uxQueueMessagesWaitingFromISR</ref><sp/>(hSemaphore);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(uint32_t)<ref refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" kindref="member">uxSemaphoreGetCount</ref><sp/>(hSemaphore);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665" refid="cmsis__os2_8c_1a81258ce9c67fa89f07cc49d2e136cd88" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1a81258ce9c67fa89f07cc49d2e136cd88" kindref="member">osSemaphoreDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a5abc2c02a86678b63a711e13894ac5b1" kindref="member">osSemaphoreId_t</ref><sp/>semaphore_id)<sp/>{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">SemaphoreHandle_t</ref><sp/>hSemaphore<sp/>=<sp/>(<ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref>)semaphore_id;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hSemaphore<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" kindref="member">vQueueUnregisterQueue</ref><sp/>(hSemaphore);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" kindref="member">vSemaphoreDelete</ref><sp/>(hSemaphore);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693" refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/><ref refid="cmsis__os2_8c_1a24e895a00f9d484db33aaf784c57bfed" kindref="member">osMessageQueueNew</ref><sp/>(uint32_t<sp/>msg_count,<sp/>uint32_t<sp/>msg_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_message_queue_attr__t" kindref="compound">osMessageQueueAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>hQueue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>()<sp/>&amp;&amp;<sp/>(msg_count<sp/>&gt;<sp/>0U)<sp/>&amp;&amp;<sp/>(msg_size<sp/>&gt;<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" kindref="member">mq_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" kindref="member">mq_size</ref><sp/>&gt;=<sp/>(msg_count<sp/>*<sp/>msg_size)))<sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1af027a158b586c5064006bba6f965b8fa" kindref="member">cb_size</ref><sp/>==<sp/>0U)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" kindref="member">mq_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_message_queue_attr__t_1adec49e7e57147aed14e83bd99cf2c6d7" kindref="member">mq_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hQueue<sp/>=<sp/>xQueueCreateStatic<sp/>(msg_count,<sp/>msg_size,<sp/>attr-&gt;<ref refid="structos_message_queue_attr__t_1af1492738958bf4a44c90d96a08d34a57" kindref="member">mq_mem</ref>,<sp/>attr-&gt;<ref refid="structos_message_queue_attr__t_1ad3452e2c35fbdccbedfc88781ad16059" kindref="member">cb_mem</ref>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hQueue<sp/>=<sp/>xQueueCreate<sp/>(msg_count,<sp/>msg_size);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hQueue<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_message_queue_attr__t_1a7a0ddc31f97f8d8e5d9f880f5d03768b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" kindref="member">vQueueAddToRegistry</ref><sp/>(hQueue,<sp/>name);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref>)hQueue);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750" refid="cmsis__os2_8c_1aa515fc8b956f721a8f72b2c505813bfc" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1aa515fc8b956f721a8f72b2c505813bfc" kindref="member">osMessageQueuePut</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_ptr,<sp/>uint8_t<sp/>msg_prio,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue<sp/>=<sp/>(<ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref>)mq_id;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>(void)msg_prio;<sp/></highlight><highlight class="comment">/*<sp/>Message<sp/>priority<sp/>is<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hQueue<sp/>==<sp/>NULL)<sp/>||<sp/>(msg_ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(timeout<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="queue_8h_1a51e9f73417b11441a181cdc4f33a68e9" kindref="member">xQueueSendToBackFromISR</ref><sp/>(hQueue,<sp/>msg_ptr,<sp/>&amp;yield)<sp/>!=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hQueue<sp/>==<sp/>NULL)<sp/>||<sp/>(msg_ptr<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" kindref="member">xQueueSendToBack</ref><sp/>(hQueue,<sp/>msg_ptr,<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)timeout)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791" refid="cmsis__os2_8c_1ad90d4959466a7a65105061da8256ab9e" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1ad90d4959466a7a65105061da8256ab9e" kindref="member">osMessageQueueGet</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg_ptr,<sp/>uint8_t<sp/>*msg_prio,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue<sp/>=<sp/>(<ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref>)mq_id;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>(void)msg_prio;<sp/></highlight><highlight class="comment">/*<sp/>Message<sp/>priority<sp/>is<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hQueue<sp/>==<sp/>NULL)<sp/>||<sp/>(msg_ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(timeout<sp/>!=<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="queue_8h_1acdf528f5c91131ae2f31c669cfd65758" kindref="member">xQueueReceiveFromISR</ref><sp/>(hQueue,<sp/>msg_ptr,<sp/>&amp;yield)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hQueue<sp/>==<sp/>NULL)<sp/>||<sp/>(msg_ptr<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9" kindref="member">xQueueReceive</ref><sp/>(hQueue,<sp/>msg_ptr,<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)timeout)<sp/>!=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea913eb5df15ad85f8557eb3a456b56879" kindref="member">osErrorTimeout</ref>;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832" refid="cmsis__os2_8c_1ac24f87d4f395e9e9c900c320e45ade8a" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1ac24f87d4f395e9e9c900c320e45ade8a" kindref="member">osMessageQueueGetCapacity</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*mq<sp/>=<sp/>(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*)mq_id;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>uint32_t<sp/>capacity;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mq<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>capacity<sp/>=<sp/>pxQueue-&gt;uxLength<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity<sp/>=<sp/>mq-&gt;<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" kindref="member">uxDummy4</ref>[1];</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(capacity);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846" refid="cmsis__os2_8c_1a96d3d84069b20359de48109e28a1a89e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a96d3d84069b20359de48109e28a1a89e" kindref="member">osMessageQueueGetMsgSize</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*mq<sp/>=<sp/>(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*)mq_id;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>uint32_t<sp/>size;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mq<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>=<sp/>pxQueue-&gt;uxItemSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>mq-&gt;<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" kindref="member">uxDummy4</ref>[2];</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(size);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860" refid="cmsis__os2_8c_1a6a32ac394fcff568b251c160cc3014b2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1a6a32ac394fcff568b251c160cc3014b2" kindref="member">osMessageQueueGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue<sp/>=<sp/>(<ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref>)mq_id;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>count;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hQueue<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="queue_8h_1a3e89b6189166f9544f283435e2732f9a" kindref="member">uxQueueMessagesWaitingFromISR</ref><sp/>(hQueue);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="queue_8h_1add7ee0701ba35904d190811b9e5a4eda" kindref="member">uxQueueMessagesWaiting</ref><sp/>(hQueue);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)count);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877" refid="cmsis__os2_8c_1addf0904427436dd3880d46263c2dc9fa" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8c_1addf0904427436dd3880d46263c2dc9fa" kindref="member">osMessageQueueGetSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*mq<sp/>=<sp/>(<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>*)mq_id;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>uint32_t<sp/>space;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>uint32_t<sp/>isrm;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mq<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>isrm<sp/>=<sp/><ref refid="task_8h_1acb27098fc27d117f720d96bfdcd2b4c8" kindref="member">taskENTER_CRITICAL_FROM_ISR</ref>();</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>space<sp/>=<sp/>pxQueue-&gt;uxLength<sp/>-<sp/>pxQueue-&gt;uxMessagesWaiting;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/>mq-&gt;<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" kindref="member">uxDummy4</ref>[1]<sp/>-<sp/>mq-&gt;<ref refid="structx_s_t_a_t_i_c___q_u_e_u_e_1a502854697731754ce445f6503d14b127" kindref="member">uxDummy4</ref>[0];</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1afa2f5acc3c925b6542ecca1acf67a234" kindref="member">taskEXIT_CRITICAL_FROM_ISR</ref>(isrm);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>space<sp/>=<sp/>(uint32_t)<ref refid="queue_8h_1aae75791e91707c1e0bb31d761921531c" kindref="member">uxQueueSpacesAvailable</ref><sp/>((<ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref>)mq);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(space);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900" refid="cmsis__os2_8c_1ac6dce7f9ad132d266292c2e979d861b4" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1ac6dce7f9ad132d266292c2e979d861b4" kindref="member">osMessageQueueReset</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue<sp/>=<sp/>(<ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref>)mq_id;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hQueue<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="queue_8h_1a94df8d8bc938424151f8196db2f1177b" kindref="member">xQueueReset</ref><sp/>(hQueue);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918" refid="cmsis__os2_8c_1aba987f665444e0d83fa6a3a68bc72abe" refkind="member"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8c_1aba987f665444e0d83fa6a3a68bc72abe" kindref="member">osMessageQueueDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1a206dbc05367e03c39fc6d4d1ebcff317" kindref="member">osMessageQueueId_t</ref><sp/>mq_id)<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>hQueue<sp/>=<sp/>(<ref refid="queue_8h_1a57349603001f8ddf51c888c49e2804d7" kindref="member">QueueHandle_t</ref>)mq_id;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_FreeRTOS_HEAP_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hQueue<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" kindref="member">vQueueUnregisterQueue</ref><sp/>(hQueue);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="queue_8h_1a707cbcfe3aed6b877b6aa6d9d75a3f22" kindref="member">vQueueDelete</ref><sp/>(hQueue);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eabb7b2d2c4efa66df42f1c10635467b09" kindref="member">osError</ref>;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FREERTOS_MPOOL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Static<sp/>memory<sp/>pool<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>FreeBlock<sp/><sp/><sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*AllocBlock<sp/><sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CreateBlock<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/><ref refid="cmsis__os2_8h_1a497ced5d72dc5cd405c4c418516220dc" kindref="member">osMemoryPoolNew</ref><sp/>(uint32_t<sp/>block_count,<sp/>uint32_t<sp/>block_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structos_memory_pool_attr__t" kindref="compound">osMemoryPoolAttr_t</ref><sp/>*attr)<sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>int32_t<sp/>mem_cb,<sp/>mem_mp;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>uint32_t<sp/>sz;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((block_count<sp/>==<sp/>0U)<sp/>||<sp/>(block_size<sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/><ref refid="freertos__mpool_8h_1a16be8a5c9af53c61c83f7920074522b8" kindref="member">MEMPOOL_ARR_SIZE</ref><sp/>(block_count,<sp/>block_size);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>mem_cb<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>mem_mp<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1a1a14604293f5327ce10f33f67f718679" kindref="member">name</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>attr-&gt;<ref refid="structos_memory_pool_attr__t_1a1a14604293f5327ce10f33f67f718679" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_memory_pool_attr__t_1a429ab7932bd1acff955ece56f51b2fe1" kindref="member">cb_mem</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1ac503c59e0429dd8bb57058ac6264a3b7" kindref="member">cb_size</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Static<sp/>control<sp/>block<sp/>is<sp/>provided<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_cb<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_memory_pool_attr__t_1a429ab7932bd1acff955ece56f51b2fe1" kindref="member">cb_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1ac503c59e0429dd8bb57058ac6264a3b7" kindref="member">cb_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>control<sp/>block<sp/>memory<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_cb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr-&gt;<ref refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" kindref="member">mp_mem</ref><sp/>==<sp/>NULL)<sp/>&amp;&amp;<sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1a170b59ba063d6d3f5387a23478db8d28" kindref="member">mp_size</ref><sp/>==<sp/>0U))<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>array<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_mp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" kindref="member">mp_mem</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>array<sp/>is<sp/>4-byte<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((uint32_t)attr-&gt;<ref refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" kindref="member">mp_mem</ref><sp/>&amp;<sp/>3U)<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>array<sp/>big<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr-&gt;<ref refid="structos_memory_pool_attr__t_1a170b59ba063d6d3f5387a23478db8d28" kindref="member">mp_size</ref><sp/>&gt;=<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Static<sp/>memory<sp/>pool<sp/>array<sp/>is<sp/>provided<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_mp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attributes<sp/>not<sp/>provided,<sp/>allocate<sp/>memory<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_cb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mem_mp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_cb<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp<sp/>=<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref>));</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>attr-&gt;<ref refid="structos_memory_pool_attr__t_1a429ab7932bd1acff955ece56f51b2fe1" kindref="member">cb_mem</ref>;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>semaphore<sp/>(max<sp/>count<sp/>==<sp/>initial<sp/>count<sp/>==<sp/>block_count)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref><sp/>=<sp/>xSemaphoreCreateCountingStatic<sp/>(block_count,<sp/>block_count,<sp/>&amp;mp-&gt;mem_sem);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>(configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref><sp/>=<sp/>xSemaphoreCreateCounting<sp/>(block_count,<sp/>block_count);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref><sp/>==<sp/>NULL;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>memory<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_mp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref><sp/>=<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref><sp/>(sz);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref><sp/>=<sp/>attr-&gt;<ref refid="structos_memory_pool_attr__t_1adbf721bdd533e8a0e021ab2f4759a7ce" kindref="member">mp_mem</ref>;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref><sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>pool<sp/>can<sp/>be<sp/>created<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a913622747c8e449d6fb0758e468cbe4b" kindref="member">mem_sz</ref><sp/><sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1add14aa7ad63751f794c6418111c8de10" kindref="member">name</ref><sp/><sp/><sp/><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a3f23b4d7db508e8dff3a900710dd2277" kindref="member">bl_sz</ref><sp/><sp/><sp/>=<sp/>block_size;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref><sp/><sp/>=<sp/>block_count;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a0150d8854edf3b0d4629b316eae60c22" kindref="member">n</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>heap<sp/>allocated<sp/>memory<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_cb<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Control<sp/>block<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>|=<sp/>1U;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_mp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>array<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>|=<sp/>2U;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>pool<sp/>cannot<sp/>be<sp/>created,<sp/>release<sp/>allocated<sp/>resources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mem_cb<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(mp<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>control<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(mp);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mp);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1ab414a1e138205a55820acfa277c8f386" kindref="member">osMemoryPoolGetName</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp<sp/>=<sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref>)mp_id;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1add14aa7ad63751f794c6418111c8de10" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cmsis__os2_8h_1a8ead54e99ccb8f112356c88f99d38fbe" kindref="member">osMemoryPoolAlloc</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>uint32_t<sp/>isrm;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>block<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>block<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>==<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1a076419b58e072655686939016e7ca3c5" kindref="member">xSemaphoreTakeFromISR</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>,<sp/>NULL)<sp/>==<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>==<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isrm<sp/><sp/>=<sp/><ref refid="task_8h_1acb27098fc27d117f720d96bfdcd2b4c8" kindref="member">taskENTER_CRITICAL_FROM_ISR</ref>();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>block<sp/>from<sp/>the<sp/>free-list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>AllocBlock(mp);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>free<sp/>blocks<sp/>is<sp/>empty,<sp/>&apos;create&apos;<sp/>new<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>CreateBlock(mp);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1afa2f5acc3c925b6542ecca1acf67a234" kindref="member">taskEXIT_CRITICAL_FROM_ISR</ref>(isrm);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" kindref="member">xSemaphoreTake</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>,<sp/>(<ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref>)timeout)<sp/>==<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>==<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>block<sp/>from<sp/>the<sp/>free-list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>AllocBlock(mp);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>free<sp/>blocks<sp/>is<sp/>empty,<sp/>&apos;create&apos;<sp/>new<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>CreateBlock(mp);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(block);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1abb4f4560daa6d1f8c8789082ee186d16" kindref="member">osMemoryPoolFree</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block)<sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>uint32_t<sp/>isrm;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>yield;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp_id<sp/>==<sp/>NULL)<sp/>||<sp/>(block<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>!=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>object<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((block<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref>[0])<sp/>||<sp/>(block<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref>[mp-&gt;<ref refid="struct_mem_pool_def__t_1a913622747c8e449d6fb0758e468cbe4b" kindref="member">mem_sz</ref>-1]))<sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Block<sp/>pointer<sp/>outside<sp/>of<sp/>memory<sp/>array<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1a03b7cb6ac11b161ce9e11f18a111d24c" kindref="member">uxSemaphoreGetCountFromISR</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>)<sp/>==<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isrm<sp/>=<sp/><ref refid="task_8h_1acb27098fc27d117f720d96bfdcd2b4c8" kindref="member">taskENTER_CRITICAL_FROM_ISR</ref>();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>block<sp/>to<sp/>the<sp/>list<sp/>of<sp/>free<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeBlock(mp,<sp/>block);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1afa2f5acc3c925b6542ecca1acf67a234" kindref="member">taskEXIT_CRITICAL_FROM_ISR</ref>(isrm);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1a68aa43df8b2a0dbe17d05fad74670ef0" kindref="member">xSemaphoreGiveFromISR</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>,<sp/>&amp;yield);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aac6850c66595efdc02a8bbb95fb4648e" kindref="member">portYIELD_FROM_ISR</ref><sp/>(yield);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" kindref="member">uxSemaphoreGetCount</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>)<sp/>==<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea8fc5801e8b0482bdf22ad63a77f0155d" kindref="member">osErrorResource</ref>;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>block<sp/>to<sp/>the<sp/>list<sp/>of<sp/>free<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeBlock(mp,<sp/>block);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" kindref="member">xSemaphoreGive</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ad696e94bfbe28f0b6613f9303fdf6a37" kindref="member">osMemoryPoolGetCapacity</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>n;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>!=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>object<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref>;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>maximum<sp/>number<sp/>of<sp/>memory<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1ab2bf059b7fa7679c3cccdaeec60b6c0e" kindref="member">osMemoryPoolGetBlockSize</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>sz;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>!=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>object<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a3f23b4d7db508e8dff3a900710dd2277" kindref="member">bl_sz</ref>;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>memory<sp/>block<sp/>size<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sz);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a958a9449bff8c95ce213de98eef5739d" kindref="member">osMemoryPoolGetCount</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>n;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>!=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>object<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cmsis__os2_8c_1a03b7cb6ac11b161ce9e11f18a111d24c" kindref="member">uxSemaphoreGetCountFromISR</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" kindref="member">uxSemaphoreGetCount</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref><sp/>-<sp/>n;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>number<sp/>of<sp/>memory<sp/>blocks<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal">uint32_t<sp/><ref refid="cmsis__os2_8h_1a0394cffa9479a7994e3b03c79c1cb909" kindref="member">osMemoryPoolGetSpace</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>n;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>!=<sp/><ref refid="freertos__mpool_8h_1a8c2537ba17a49647cef36d14c3b28dc2" kindref="member">MPOOL_STATUS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>object<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cmsis__os2_8c_1a03b7cb6ac11b161ce9e11f18a111d24c" kindref="member">uxSemaphoreGetCountFromISR</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="semphr_8h_1aa26a3d7cf9b5595a652daeb7f81229f3" kindref="member">uxSemaphoreGetCount</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>number<sp/>of<sp/>memory<sp/>blocks<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/><ref refid="cmsis__os2_8h_1a8c39e7e5cd2b9eda907466808e59d62e" kindref="member">osMemoryPoolDelete</ref><sp/>(<ref refid="cmsis__os2_8h_1abe4cd283a0a9b0a900f53ef08356155c" kindref="member">osMemoryPoolId_t</ref><sp/>mp_id)<sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813e" kindref="member">osStatus_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp_id<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>input<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813eac24adca6a5d072c9f01c32178ba0d109" kindref="member">osErrorParameter</ref>;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmsis__os2_8c_1aba58771db835c12c494e779a33209f5f" kindref="member">IS_IRQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea21635bdc492d3094fe83027fa4a30e2f" kindref="member">osErrorISR</ref>;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>mp<sp/>=<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*)mp_id;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalidate<sp/>control<sp/>block<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/><sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/>3U;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wake-up<sp/>tasks<sp/>waiting<sp/>for<sp/>pool<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" kindref="member">xSemaphoreGive</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a419a1bb2902914f7c890c4a6306e9459" kindref="member">sem</ref>)<sp/>==<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a3f23b4d7db508e8dff3a900710dd2277" kindref="member">bl_sz</ref><sp/><sp/><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref><sp/><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/>2U)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>pool<sp/>array<sp/>allocated<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref>);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mp-&gt;<ref refid="struct_mem_pool_def__t_1ad6bf5c42e1ed231d6cbafefdf7ad5f4a" kindref="member">status</ref><sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>pool<sp/>control<sp/>block<sp/>allocated<sp/>on<sp/>heap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref><sp/>(mp);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="cmsis__os2_8h_1a6c0dbe6069e4e7f47bb4cd32ae2b813ea9e1c9e2550bb4de8969a935acffc968f" kindref="member">osOK</ref>;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/><sp/>Create<sp/>new<sp/>block<sp/>given<sp/>according<sp/>to<sp/>the<sp/>current<sp/>block<sp/>index.</highlight></codeline>
<codeline lineno="2356"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CreateBlock<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp)<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_block__t" kindref="compound">MemPoolBlock_t</ref><sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a0150d8854edf3b0d4629b316eae60c22" kindref="member">n</ref><sp/>&lt;<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a6b60a6cdec4d73325af6789243c60cc7" kindref="member">bl_cnt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unallocated<sp/>blocks<sp/>exist,<sp/>set<sp/>pointer<sp/>to<sp/>new<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(mp-&gt;<ref refid="struct_mem_pool_def__t_1a3e0cdb18ef901e5aa739542396ac0abc" kindref="member">mem_arr</ref><sp/>+<sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1a3f23b4d7db508e8dff3a900710dd2277" kindref="member">bl_sz</ref><sp/>*<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a0150d8854edf3b0d4629b316eae60c22" kindref="member">n</ref>));</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>block<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1a0150d8854edf3b0d4629b316eae60c22" kindref="member">n</ref><sp/>+=<sp/>1U;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2372"><highlight class="comment"><sp/><sp/>Allocate<sp/>a<sp/>block<sp/>by<sp/>reading<sp/>the<sp/>list<sp/>of<sp/>free<sp/>blocks.</highlight></codeline>
<codeline lineno="2373"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*AllocBlock<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp)<sp/>{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_block__t" kindref="compound">MemPoolBlock_t</ref><sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>free<sp/>block<sp/>exists,<sp/>get<sp/>head<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Head<sp/>block<sp/>is<sp/>now<sp/>next<sp/>on<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref><sp/>=<sp/>p-&gt;<ref refid="struct_mem_pool_block__t_1a7e9f4311c39574495a7f9a309d5c70b5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2389"><highlight class="comment"><sp/><sp/>Free<sp/>block<sp/>by<sp/>putting<sp/>it<sp/>to<sp/>the<sp/>list<sp/>of<sp/>free<sp/>blocks.</highlight></codeline>
<codeline lineno="2390"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FreeBlock<sp/>(<ref refid="struct_mem_pool_def__t" kindref="compound">MemPool_t</ref><sp/>*mp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block)<sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><ref refid="struct_mem_pool_block__t" kindref="compound">MemPoolBlock_t</ref><sp/>*p<sp/>=<sp/>block;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>current<sp/>head<sp/>into<sp/>block<sp/>memory<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="struct_mem_pool_block__t_1a7e9f4311c39574495a7f9a309d5c70b5" kindref="member">next</ref><sp/>=<sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>current<sp/>block<sp/>as<sp/>new<sp/>head<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>mp-&gt;<ref refid="struct_mem_pool_def__t_1ad1f539c9838255451dbd9b4eabf89bf3" kindref="member">head</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FREERTOS_MPOOL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Callback<sp/>function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404" refid="cmsis__os2_8c_1a97fd430f36f8b065226e2bff9bad1de5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a97fd430f36f8b065226e2bff9bad1de5" kindref="member">vApplicationIdleHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2405" refid="cmsis__os2_8c_1a9ca051aa77e17583aa5a85d5de5c199a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a9ca051aa77e17583aa5a85d5de5c199a" kindref="member">vApplicationTickHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2406" refid="cmsis__os2_8c_1ab7e5c95cf72a3f819bc4462a7fb62ca3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab7e5c95cf72a3f819bc4462a7fb62ca3" kindref="member">vApplicationMallocFailedHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2407" refid="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" kindref="member">vApplicationDaemonTaskStartupHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2408" refid="cmsis__os2_8c_1ab87104b26fc04ce57c4717306fc97735" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab87104b26fc04ce57c4717306fc97735" kindref="member">vApplicationStackOverflowHook</ref><sp/>(<ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>xTask,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcTaskName);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_IDLE_HOOK<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a97fd430f36f8b065226e2bff9bad1de5" kindref="member">vApplicationIdleHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_TICK_HOOK<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/>__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1a9ca051aa77e17583aa5a85d5de5c199a" kindref="member">vApplicationTickHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_MALLOC_FAILED_HOOK<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab7e5c95cf72a3f819bc4462a7fb62ca3" kindref="member">vApplicationMallocFailedHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configUSE_DAEMON_TASK_STARTUP_HOOK<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" kindref="member">vApplicationDaemonTaskStartupHook</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configCHECK_FOR_STACK_OVERFLOW<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab87104b26fc04ce57c4717306fc97735" kindref="member">vApplicationStackOverflowHook</ref><sp/>(<ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>xTask,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcTaskName)<sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>(void)xTask;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/>(void)pcTaskName;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(0);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>External<sp/>Idle<sp/>and<sp/>Timer<sp/>task<sp/>static<sp/>memory<sp/>allocation<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vApplicationGetIdleTaskMemory<sp/><sp/>(<ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>**ppxIdleTaskTCBBuffer,<sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>**ppxIdleTaskStackBuffer,<sp/><sp/>uint32_t<sp/>*pulIdleTaskStackSize);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vApplicationGetTimerTaskMemory<sp/>(<ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>**ppxTimerTaskTCBBuffer,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>**ppxTimerTaskStackBuffer,<sp/>uint32_t<sp/>*pulTimerTaskStackSize);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2456"><highlight class="comment"><sp/><sp/>vApplicationGetIdleTaskMemory<sp/>gets<sp/>called<sp/>when<sp/>configSUPPORT_STATIC_ALLOCATION</highlight></codeline>
<codeline lineno="2457"><highlight class="comment"><sp/><sp/>equals<sp/>to<sp/>1<sp/>and<sp/>is<sp/>required<sp/>for<sp/>static<sp/>memory<sp/>allocation<sp/>support.</highlight></codeline>
<codeline lineno="2458"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vApplicationGetIdleTaskMemory<sp/>(<ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>**ppxIdleTaskTCBBuffer,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>**ppxIdleTaskStackBuffer,<sp/>uint32_t<sp/>*pulIdleTaskStackSize)<sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Idle<sp/>task<sp/>control<sp/>block<sp/>and<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>Idle_TCB;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/><sp/>Idle_Stack[<ref refid="_free_r_t_o_s_config_8h_1a6c534a6cf8a00528fe0be42083484f9a" kindref="member">configMINIMAL_STACK_SIZE</ref>];</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>*ppxIdleTaskTCBBuffer<sp/><sp/><sp/>=<sp/>&amp;Idle_TCB;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/>*ppxIdleTaskStackBuffer<sp/>=<sp/>&amp;Idle_Stack[0];</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/>*pulIdleTaskStackSize<sp/><sp/><sp/>=<sp/>(uint32_t)<ref refid="_free_r_t_o_s_config_8h_1a6c534a6cf8a00528fe0be42083484f9a" kindref="member">configMINIMAL_STACK_SIZE</ref>;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2470"><highlight class="comment"><sp/><sp/>vApplicationGetTimerTaskMemory<sp/>gets<sp/>called<sp/>when<sp/>configSUPPORT_STATIC_ALLOCATION</highlight></codeline>
<codeline lineno="2471"><highlight class="comment"><sp/><sp/>equals<sp/>to<sp/>1<sp/>and<sp/>is<sp/>required<sp/>for<sp/>static<sp/>memory<sp/>allocation<sp/>support.</highlight></codeline>
<codeline lineno="2472"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal">__WEAK<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vApplicationGetTimerTaskMemory<sp/>(<ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>**ppxTimerTaskTCBBuffer,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>**ppxTimerTaskStackBuffer,<sp/>uint32_t<sp/>*pulTimerTaskStackSize)<sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timer<sp/>task<sp/>control<sp/>block<sp/>and<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>Timer_TCB;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/><sp/>Timer_Stack[<ref refid="_free_r_t_o_s_config_8h_1aed7c7ebcdee603583a55e8ce04e55841" kindref="member">configTIMER_TASK_STACK_DEPTH</ref>];</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>*ppxTimerTaskTCBBuffer<sp/><sp/><sp/>=<sp/>&amp;Timer_TCB;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/>*ppxTimerTaskStackBuffer<sp/>=<sp/>&amp;Timer_Stack[0];</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>*pulTimerTaskStackSize<sp/><sp/><sp/>=<sp/>(uint32_t)<ref refid="_free_r_t_o_s_config_8h_1aed7c7ebcdee603583a55e8ce04e55841" kindref="member">configTIMER_TASK_STACK_DEPTH</ref>;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c"/>
  </compounddef>
</doxygen>
