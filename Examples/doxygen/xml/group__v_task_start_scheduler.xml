<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="group__v_task_start_scheduler" kind="group">
    <compoundname>vTaskStartScheduler</compoundname>
    <title>vTaskStartScheduler</title>
    <briefdescription>
<para>task. </para>
    </briefdescription>
    <detaileddescription>
<para>h <preformatted>void <ref refid="task_8h_1aaf9dca1065c60abdeb309d56ab7293cb" kindref="member">vTaskStartScheduler( void )</ref>;</preformatted></para>
<para>Starts the real time kernel tick processing. After calling the kernel has control over which tasks are executed and when.</para>
<para>See the demo application file main.c for an example of creating tasks and starting the kernel.</para>
<para>Example usage: <preformatted>
void vAFunction( void )
{
  // Create at least one task before starting the kernel.
  xTaskCreate( vTaskCode, &quot;NAME&quot;, STACK_SIZE, NULL, tskIDLE_PRIORITY, NULL );

  // Start the real time kernel with preemption.
  vTaskStartScheduler ();

  // Will not get here unless a task calls vTaskEndScheduler ()
}
  </preformatted></para>
    </detaileddescription>
  </compounddef>
</doxygen>
