<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="timers_8c" kind="file" language="C++">
    <compoundname>timers.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="_free_r_t_o_s_8h" local="yes">FreeRTOS.h</includes>
    <includes refid="task_8h" local="yes">task.h</includes>
    <includes refid="queue_8h" local="yes">queue.h</includes>
    <includes refid="timers_8h" local="yes">timers.h</includes>
    <incdepgraph>
      <node id="6">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
      </node>
      <node id="3">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>deprecated_definitions.h</label>
        <link refid="deprecated__definitions_8h"/>
      </node>
      <node id="13">
        <label>list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="11">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h"/>
      </node>
      <node id="8">
        <label>portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>projdefs.h</label>
        <link refid="projdefs_8h"/>
      </node>
      <node id="14">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>timers.h</label>
        <link refid="timers_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>portmacro.h</label>
        <link refid="portmacro_8h"/>
      </node>
      <node id="1">
        <label>NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/timers.c</label>
        <link refid="timers_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="timers_8c_1ab622d8c674f2a417a666a7ed89109e79" prot="public" static="no">
        <name>MPU_WRAPPERS_INCLUDED_FROM_API_FILE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/timers.c" line="34" column="9" bodyfile="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/timers.c" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.3.1</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Standard<sp/>includes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Defining<sp/>MPU_WRAPPERS_INCLUDED_FROM_API_FILE<sp/>prevents<sp/>task.h<sp/>from<sp/>redefining</highlight></codeline>
<codeline lineno="32"><highlight class="comment">all<sp/>the<sp/>API<sp/>functions<sp/>to<sp/>use<sp/>the<sp/>MPU<sp/>wrappers.<sp/><sp/>That<sp/>should<sp/>only<sp/>be<sp/>done<sp/>when</highlight></codeline>
<codeline lineno="33"><highlight class="comment">task.h<sp/>is<sp/>included<sp/>from<sp/>an<sp/>application<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="timers_8c_1ab622d8c674f2a417a666a7ed89109e79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_WRAPPERS_INCLUDED_FROM_API_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s_8h" kindref="compound">FreeRTOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="task_8h" kindref="compound">task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="queue_8h" kindref="compound">queue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timers_8h" kindref="compound">timers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>INCLUDE_xTimerPendFunctionCall<sp/>==<sp/>1<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>configUSE_TIMERS<sp/>==<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>configUSE_TIMERS<sp/>must<sp/>be<sp/>set<sp/>to<sp/>1<sp/>to<sp/>make<sp/>the<sp/>xTimerPendFunctionCall()<sp/>function<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Lint<sp/>e9021,<sp/>e961<sp/>and<sp/>e750<sp/>are<sp/>suppressed<sp/>as<sp/>a<sp/>MISRA<sp/>exception<sp/>justified</highlight></codeline>
<codeline lineno="46"><highlight class="comment">because<sp/>the<sp/>MPU<sp/>ports<sp/>require<sp/>MPU_WRAPPERS_INCLUDED_FROM_API_FILE<sp/>to<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="47"><highlight class="comment">for<sp/>the<sp/>header<sp/>files<sp/>above,<sp/>but<sp/>not<sp/>in<sp/>this<sp/>file,<sp/>in<sp/>order<sp/>to<sp/>generate<sp/>the</highlight></codeline>
<codeline lineno="48"><highlight class="comment">correct<sp/>privileged<sp/>Vs<sp/>unprivileged<sp/>linkage<sp/>and<sp/>placement.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MPU_WRAPPERS_INCLUDED_FROM_API_FILE<sp/></highlight><highlight class="comment">/*lint<sp/>!e9021<sp/>!e961<sp/>!e750.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>entire<sp/>source<sp/>file<sp/>will<sp/>be<sp/>skipped<sp/>if<sp/>the<sp/>application<sp/>is<sp/>not<sp/>configured</highlight></codeline>
<codeline lineno="53"><highlight class="comment">to<sp/>include<sp/>software<sp/>timer<sp/>functionality.<sp/><sp/>This<sp/>#if<sp/>is<sp/>closed<sp/>at<sp/>the<sp/>very<sp/>bottom</highlight></codeline>
<codeline lineno="54"><highlight class="comment">of<sp/>this<sp/>file.<sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>include<sp/>software<sp/>timer<sp/>functionality<sp/>then<sp/>ensure</highlight></codeline>
<codeline lineno="55"><highlight class="comment">configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1<sp/>in<sp/>FreeRTOSConfig.h.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>configUSE_TIMERS<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Misc<sp/>definitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tmrNO_DELAY<sp/><sp/><sp/>(<sp/>TickType_t<sp/>)<sp/>0U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>name<sp/>assigned<sp/>to<sp/>the<sp/>timer<sp/>service<sp/>task.<sp/><sp/>This<sp/>can<sp/>be<sp/>overridden<sp/>by</highlight></codeline>
<codeline lineno="62"><highlight class="comment">defining<sp/>trmTIMER_SERVICE_TASK_NAME<sp/>in<sp/>FreeRTOSConfig.h.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configTIMER_SERVICE_TASK_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>configTIMER_SERVICE_TASK_NAME<sp/>&quot;Tmr<sp/>Svc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bit<sp/>definitions<sp/>used<sp/>in<sp/>the<sp/>ucStatus<sp/>member<sp/>of<sp/>a<sp/>timer<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tmrSTATUS_IS_ACTIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>uint8_t<sp/>)<sp/>0x01<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tmrSTATUS_IS_STATICALLY_ALLOCATED<sp/>(<sp/>(<sp/>uint8_t<sp/>)<sp/>0x02<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tmrSTATUS_IS_AUTORELOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>uint8_t<sp/>)<sp/>0x04<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>definition<sp/>of<sp/>the<sp/>timers<sp/>themselves.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tmrTimerControl<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>old<sp/>naming<sp/>convention<sp/>is<sp/>used<sp/>to<sp/>prevent<sp/>breaking<sp/>kernel<sp/>aware<sp/>debuggers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pcTimerName;<sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>Text<sp/>name.<sp/><sp/>This<sp/>is<sp/>not<sp/>used<sp/>by<sp/>the<sp/>kernel,<sp/>it<sp/>is<sp/>included<sp/>simply<sp/>to<sp/>make<sp/>debugging<sp/>easier.<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structx_l_i_s_t___i_t_e_m" kindref="compound">ListItem_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTimerListItem;<sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>Standard<sp/>linked<sp/>list<sp/>item<sp/>as<sp/>used<sp/>by<sp/>all<sp/>kernel<sp/>features<sp/>for<sp/>event<sp/>management.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTimerPeriodInTicks;</highlight><highlight class="comment">/*&lt;&lt;<sp/>How<sp/>quickly<sp/>and<sp/>often<sp/>the<sp/>timer<sp/>expires.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pvTimerID;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>An<sp/>ID<sp/>to<sp/>identify<sp/>the<sp/>timer.<sp/><sp/>This<sp/>allows<sp/>the<sp/>timer<sp/>to<sp/>be<sp/>identified<sp/>when<sp/>the<sp/>same<sp/>callback<sp/>is<sp/>used<sp/>for<sp/>multiple<sp/>timers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction;<sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>The<sp/>function<sp/>that<sp/>will<sp/>be<sp/>called<sp/>when<sp/>the<sp/>timer<sp/>expires.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if(<sp/>configUSE_TRACE_FACILITY<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/><sp/><sp/><sp/><sp/>uxTimerNumber;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>An<sp/>ID<sp/>assigned<sp/>by<sp/>trace<sp/>tools<sp/>such<sp/>as<sp/>FreeRTOS+Trace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucStatus;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>Holds<sp/>bits<sp/>to<sp/>say<sp/>if<sp/>the<sp/>timer<sp/>was<sp/>statically<sp/>allocated<sp/>or<sp/>not,<sp/>and<sp/>if<sp/>it<sp/>is<sp/>active<sp/>or<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/>xTIMER;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>old<sp/>xTIMER<sp/>name<sp/>is<sp/>maintained<sp/>above<sp/>then<sp/>typedefed<sp/>to<sp/>the<sp/>new<sp/>Timer_t</highlight></codeline>
<codeline lineno="87"><highlight class="comment">name<sp/>below<sp/>to<sp/>enable<sp/>the<sp/>use<sp/>of<sp/>older<sp/>kernel<sp/>aware<sp/>debuggers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xTIMER<sp/>Timer_t;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>definition<sp/>of<sp/>messages<sp/>that<sp/>can<sp/>be<sp/>sent<sp/>and<sp/>received<sp/>on<sp/>the<sp/>timer<sp/>queue.</highlight></codeline>
<codeline lineno="91"><highlight class="comment">Two<sp/>types<sp/>of<sp/>message<sp/>can<sp/>be<sp/>queued<sp/>-<sp/>messages<sp/>that<sp/>manipulate<sp/>a<sp/>software<sp/>timer,</highlight></codeline>
<codeline lineno="92"><highlight class="comment">and<sp/>messages<sp/>that<sp/>request<sp/>the<sp/>execution<sp/>of<sp/>a<sp/>non-timer<sp/>related<sp/>callback.<sp/><sp/>The</highlight></codeline>
<codeline lineno="93"><highlight class="comment">two<sp/>message<sp/>types<sp/>are<sp/>defined<sp/>in<sp/>two<sp/>separate<sp/>structures,<sp/>xTimerParametersType</highlight></codeline>
<codeline lineno="94"><highlight class="comment">and<sp/>xCallbackParametersType<sp/>respectively.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tmrTimerParameters</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>xMessageValue;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>An<sp/>optional<sp/>value<sp/>used<sp/>by<sp/>a<sp/>subset<sp/>of<sp/>commands,<sp/>for<sp/>example,<sp/>when<sp/>changing<sp/>the<sp/>period<sp/>of<sp/>a<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>Timer_t<sp/>*<sp/><sp/><sp/><sp/><sp/>pxTimer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>The<sp/>timer<sp/>to<sp/>which<sp/>the<sp/>command<sp/>will<sp/>be<sp/>applied.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/>TimerParameter_t;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tmrCallbackParameters</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622" kindref="member">PendedFunction_t</ref><sp/><sp/>pxCallbackFunction;<sp/></highlight><highlight class="comment">/*<sp/>&lt;&lt;<sp/>The<sp/>callback<sp/>function<sp/>to<sp/>execute.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&lt;&lt;<sp/>The<sp/>value<sp/>that<sp/>will<sp/>be<sp/>used<sp/>as<sp/>the<sp/>callback<sp/>functions<sp/>first<sp/>parameter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ulParameter2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&lt;&lt;<sp/>The<sp/>value<sp/>that<sp/>will<sp/>be<sp/>used<sp/>as<sp/>the<sp/>callback<sp/>functions<sp/>second<sp/>parameter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/>CallbackParameters_t;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>structure<sp/>that<sp/>contains<sp/>the<sp/>two<sp/>message<sp/>types,<sp/>along<sp/>with<sp/>an<sp/>identifier</highlight></codeline>
<codeline lineno="110"><highlight class="comment">that<sp/>is<sp/>used<sp/>to<sp/>determine<sp/>which<sp/>message<sp/>type<sp/>is<sp/>valid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tmrTimerQueueMessage</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>xMessageID;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;&lt;<sp/>The<sp/>command<sp/>being<sp/>sent<sp/>to<sp/>the<sp/>timer<sp/>service<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>TimerParameter_t<sp/>xTimerParameters;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>include<sp/>xCallbackParameters<sp/>if<sp/>it<sp/>is<sp/>not<sp/>going<sp/>to<sp/>be<sp/>used<sp/>as</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>makes<sp/>the<sp/>structure<sp/>(and<sp/>therefore<sp/>the<sp/>timer<sp/>queue)<sp/>larger.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(<sp/>INCLUDE_xTimerPendFunctionCall<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CallbackParameters_t<sp/>xCallbackParameters;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_xTimerPendFunctionCall<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/>DaemonTaskMessage_t;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*lint<sp/>-save<sp/>-e956<sp/>A<sp/>manual<sp/>analysis<sp/>and<sp/>inspection<sp/>has<sp/>been<sp/>used<sp/>to<sp/>determine</highlight></codeline>
<codeline lineno="127"><highlight class="comment">which<sp/>static<sp/>variables<sp/>must<sp/>be<sp/>declared<sp/>volatile.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>list<sp/>in<sp/>which<sp/>active<sp/>timers<sp/>are<sp/>stored.<sp/><sp/>Timers<sp/>are<sp/>referenced<sp/>in<sp/>expire</highlight></codeline>
<codeline lineno="130"><highlight class="comment">time<sp/>order,<sp/>with<sp/>the<sp/>nearest<sp/>expiry<sp/>time<sp/>at<sp/>the<sp/>front<sp/>of<sp/>the<sp/>list.<sp/><sp/>Only<sp/>the</highlight></codeline>
<codeline lineno="131"><highlight class="comment">timer<sp/>service<sp/>task<sp/>is<sp/>allowed<sp/>to<sp/>access<sp/>these<sp/>lists.</highlight></codeline>
<codeline lineno="132"><highlight class="comment">xActiveTimerList1<sp/>and<sp/>xActiveTimerList2<sp/>could<sp/>be<sp/>at<sp/>function<sp/>scope<sp/>but<sp/>that</highlight></codeline>
<codeline lineno="133"><highlight class="comment">breaks<sp/>some<sp/>kernel<sp/>aware<sp/>debuggers,<sp/>and<sp/>debuggers<sp/>that<sp/>reply<sp/>on<sp/>removing<sp/>the</highlight></codeline>
<codeline lineno="134"><highlight class="comment">static<sp/>qualifier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>xActiveTimerList1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>xActiveTimerList2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxCurrentTimerList;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxOverflowTimerList;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>queue<sp/>that<sp/>is<sp/>used<sp/>to<sp/>send<sp/>commands<sp/>to<sp/>the<sp/>timer<sp/>service<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_queue_definition" kindref="compound">QueueHandle_t</ref><sp/>xTimerQueue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/>xTimerTaskHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*lint<sp/>-restore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>static<sp/>allocation<sp/>is<sp/>supported<sp/>then<sp/>the<sp/>application<sp/>must<sp/>provide<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/>following<sp/>callback<sp/>function<sp/>-<sp/>which<sp/>enables<sp/>the<sp/>application<sp/>to<sp/>optionally</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>provide<sp/>the<sp/>memory<sp/>that<sp/>will<sp/>be<sp/>used<sp/>by<sp/>the<sp/>timer<sp/>task<sp/>as<sp/>the<sp/>task&apos;s<sp/>stack</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/>and<sp/>TCB.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vApplicationGetTimerTaskMemory(<sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>**ppxTimerTaskTCBBuffer,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>**ppxTimerTaskStackBuffer,<sp/>uint32_t<sp/>*pulTimerTaskStackSize<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>Initialise<sp/>the<sp/>infrastructure<sp/>used<sp/>by<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>if<sp/>it<sp/>has<sp/>not</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>been<sp/>initialised<sp/>already.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckForValidListAndQueue(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>The<sp/>timer<sp/>service<sp/>task<sp/>(daemon).<sp/><sp/>Timer<sp/>functionality<sp/>is<sp/>controlled<sp/>by<sp/>this</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>task.<sp/><sp/>Other<sp/>tasks<sp/>communicate<sp/>with<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>xTimerQueue<sp/>queue.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a2921e1c5a1f974dfa01ae44d1f665f14" kindref="member">portTASK_FUNCTION_PROTO</ref>(<sp/>prvTimerTask,<sp/>pvParameters<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>Called<sp/>by<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>to<sp/>interpret<sp/>and<sp/>process<sp/>a<sp/>command<sp/>it</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>received<sp/>on<sp/>the<sp/>timer<sp/>queue.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessReceivedCommands(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>Insert<sp/>the<sp/>timer<sp/>into<sp/>either<sp/>xActiveTimerList1,<sp/>or<sp/>xActiveTimerList2,</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>depending<sp/>on<sp/>if<sp/>the<sp/>expire<sp/>time<sp/>causes<sp/>a<sp/>timer<sp/>counter<sp/>overflow.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>prvInsertTimerInActiveList(<sp/>Timer_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpiryTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xCommandTime<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>An<sp/>active<sp/>timer<sp/>has<sp/>reached<sp/>its<sp/>expire<sp/>time.<sp/><sp/>Reload<sp/>the<sp/>timer<sp/>if<sp/>it<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>auto-reload<sp/>timer,<sp/>then<sp/>call<sp/>its<sp/>callback.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessExpiredTimer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>The<sp/>tick<sp/>count<sp/>has<sp/>overflowed.<sp/><sp/>Switch<sp/>the<sp/>timer<sp/>lists<sp/>after<sp/>ensuring<sp/>the</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>current<sp/>timer<sp/>list<sp/>does<sp/>not<sp/>still<sp/>reference<sp/>some<sp/>timers.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvSwitchTimerLists(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>current<sp/>tick<sp/>count,<sp/>setting<sp/>*pxTimerListsWereSwitched<sp/>to<sp/>pdTRUE</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>if<sp/>a<sp/>tick<sp/>count<sp/>overflow<sp/>occurred<sp/>since<sp/>prvSampleTimeNow()<sp/>was<sp/>last<sp/>called.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>prvSampleTimeNow(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimerListsWereSwitched<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>timer<sp/>list<sp/>contains<sp/>any<sp/>active<sp/>timers<sp/>then<sp/>return<sp/>the<sp/>expire<sp/>time<sp/>of</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>the<sp/>timer<sp/>that<sp/>will<sp/>expire<sp/>first<sp/>and<sp/>set<sp/>*pxListWasEmpty<sp/>to<sp/>false.<sp/><sp/>If<sp/>the</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>timer<sp/>list<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>timers<sp/>then<sp/>return<sp/>0<sp/>and<sp/>set<sp/>*pxListWasEmpty</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>to<sp/>pdTRUE.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>prvGetNextExpireTime(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxListWasEmpty<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>timer<sp/>has<sp/>expired,<sp/>process<sp/>it.<sp/><sp/>Otherwise,<sp/>block<sp/>the<sp/>timer<sp/>service<sp/>task</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>until<sp/>either<sp/>a<sp/>timer<sp/>does<sp/>expire<sp/>or<sp/>a<sp/>command<sp/>is<sp/>received.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessTimerOrBlockTask(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xListWasEmpty<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>Called<sp/>after<sp/>a<sp/>Timer_t<sp/>structure<sp/>has<sp/>been<sp/>allocated<sp/>either<sp/>statically<sp/>or</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>dynamically<sp/>to<sp/>fill<sp/>in<sp/>the<sp/>structure&apos;s<sp/>members.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvInitialiseNewTimer(<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimerPeriodInTicks,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxAutoReload,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timer_t<sp/>*pxNewTimer<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="timers_8h_1af777ab3e9ac04abd5dd21be739fa1321" kindref="member">xTimerCreateTimerTask</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>the<sp/>scheduler<sp/>is<sp/>started<sp/>if</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/>configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1.<sp/><sp/>Check<sp/>that<sp/>the<sp/>infrastructure<sp/>used<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/>timer<sp/>service<sp/>task<sp/>has<sp/>been<sp/>created/initialised.<sp/><sp/>If<sp/>timers<sp/>have<sp/>already</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>been<sp/>created<sp/>then<sp/>the<sp/>initialisation<sp/>will<sp/>already<sp/>have<sp/>been<sp/>performed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>prvCheckForValidListAndQueue();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerQueue<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx_s_t_a_t_i_c___t_c_b" kindref="compound">StaticTask_t</ref><sp/>*pxTimerTaskTCBBuffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTimerTaskStackBuffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ulTimerTaskStackSize;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vApplicationGetTimerTaskMemory(<sp/>&amp;pxTimerTaskTCBBuffer,<sp/>&amp;pxTimerTaskStackBuffer,<sp/>&amp;ulTimerTaskStackSize<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xTimerTaskHandle<sp/>=<sp/>xTaskCreateStatic(<sp/>prvTimerTask,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configTIMER_SERVICE_TASK_NAME,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulTimerTaskStackSize,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1a05c75ff9029ba3f0ab5bde9196f1e873" kindref="member">configTIMER_TASK_PRIORITY</ref><sp/>)<sp/>|<sp/><ref refid="_free_r_t_o_s_8h_1a27b7e11718b2ec5b5217e60f3b9e8aec" kindref="member">portPRIVILEGE_BIT</ref>,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimerTaskStackBuffer,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimerTaskTCBBuffer<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerTaskHandle<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1a07848d3078849bd32353c69d30a479b3" kindref="member">pdPASS</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/>xTaskCreate(<sp/><sp/>prvTimerTask,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configTIMER_SERVICE_TASK_NAME,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1aed7c7ebcdee603583a55e8ce04e55841" kindref="member">configTIMER_TASK_STACK_DEPTH</ref>,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1a05c75ff9029ba3f0ab5bde9196f1e873" kindref="member">configTIMER_TASK_PRIORITY</ref><sp/>)<sp/>|<sp/><ref refid="_free_r_t_o_s_8h_1a27b7e11718b2ec5b5217e60f3b9e8aec" kindref="member">portPRIVILEGE_BIT</ref>,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xTimerTaskHandle<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xReturn<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimerCreate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimerPeriodInTicks,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxAutoReload,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>Timer_t<sp/>*pxNewTimer;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer<sp/>=<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/><ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Timer_t<sp/>)<sp/>);<sp/></highlight><highlight class="comment">/*lint<sp/>!e9087<sp/>!e9079<sp/>All<sp/>values<sp/>returned<sp/>by<sp/>pvPortMalloc()<sp/>have<sp/>at<sp/>least<sp/>the<sp/>alignment<sp/>required<sp/>by<sp/>the<sp/>MCU&apos;s<sp/>stack,<sp/>and<sp/>the<sp/>first<sp/>member<sp/>of<sp/>Timer_t<sp/>is<sp/>always<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>timer&apos;s<sp/>mame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxNewTimer<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Status<sp/>is<sp/>thus<sp/>far<sp/>zero<sp/>as<sp/>the<sp/>timer<sp/>is<sp/>not<sp/>created<sp/>statically</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>has<sp/>not<sp/>been<sp/>started.<sp/><sp/>The<sp/>auto-reload<sp/>bit<sp/>may<sp/>get<sp/>set<sp/>in</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>prvInitialiseNewTimer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxNewTimer-&gt;ucStatus<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prvInitialiseNewTimer(<sp/>pcTimerName,<sp/>xTimerPeriodInTicks,<sp/>uxAutoReload,<sp/>pvTimerID,<sp/>pxCallbackFunction,<sp/>pxNewTimer<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pxNewTimer;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configSUPPORT_DYNAMIC_ALLOCATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimerCreateStatic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/><sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimerPeriodInTicks,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxAutoReload,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structx_s_t_a_t_i_c___t_i_m_e_r" kindref="compound">StaticTimer_t</ref><sp/>*pxTimerBuffer<sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>Timer_t<sp/>*pxNewTimer;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(<sp/>configASSERT_DEFINED<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sanity<sp/>check<sp/>that<sp/>the<sp/>size<sp/>of<sp/>the<sp/>structure<sp/>used<sp/>to<sp/>declare<sp/>a</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>of<sp/>type<sp/>StaticTimer_t<sp/>equals<sp/>the<sp/>size<sp/>of<sp/>the<sp/>real<sp/>timer</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="_free_r_t_o_s_8h_1a85fc227d111ec21647641e0deddcccc6" kindref="member">StaticTimer_t</ref><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xSize<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Timer_t<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/>xSize;<sp/></highlight><highlight class="comment">/*<sp/>Keeps<sp/>lint<sp/>quiet<sp/>when<sp/>configASSERT()<sp/>is<sp/>not<sp/>defined.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configASSERT_DEFINED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>StaticTimer_t<sp/>structure<sp/>MUST<sp/>be<sp/>provided,<sp/>use<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>pxTimerBuffer<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer<sp/>=<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/>pxTimerBuffer;<sp/></highlight><highlight class="comment">/*lint<sp/>!e740<sp/>!e9087<sp/>StaticTimer_t<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>Timer_t,<sp/>so<sp/>guaranteed<sp/>to<sp/>be<sp/>aligned<sp/>and<sp/>sized<sp/>correctly<sp/>(checked<sp/>by<sp/>an<sp/>assert()),<sp/>so<sp/>this<sp/>is<sp/>safe.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxNewTimer<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timers<sp/>can<sp/>be<sp/>created<sp/>statically<sp/>or<sp/>dynamically<sp/>so<sp/>note<sp/>this</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>was<sp/>created<sp/>statically<sp/>in<sp/>case<sp/>it<sp/>is<sp/>later<sp/>deleted.<sp/><sp/>The</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>auto-reload<sp/>bit<sp/>may<sp/>get<sp/>set<sp/>in<sp/>prvInitialiseNewTimer().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxNewTimer-&gt;ucStatus<sp/>=<sp/>tmrSTATUS_IS_STATICALLY_ALLOCATED;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prvInitialiseNewTimer(<sp/>pcTimerName,<sp/>xTimerPeriodInTicks,<sp/>uxAutoReload,<sp/>pvTimerID,<sp/>pxCallbackFunction,<sp/>pxNewTimer<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pxNewTimer;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvInitialiseNewTimer(<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcTimerName,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimerPeriodInTicks,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxAutoReload,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pvTimerID,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027" kindref="member">TimerCallbackFunction_t</ref><sp/>pxCallbackFunction,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timer_t<sp/>*pxNewTimer<sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>value<sp/>for<sp/>xTimerPeriodInTicks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>(<sp/>xTimerPeriodInTicks<sp/>&gt;<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pxNewTimer<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>infrastructure<sp/>used<sp/>by<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>created/initialised.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>prvCheckForValidListAndQueue();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>the<sp/>timer<sp/>structure<sp/>members<sp/>using<sp/>the<sp/>function</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer-&gt;pcTimerName<sp/>=<sp/>pcTimerName;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer-&gt;xTimerPeriodInTicks<sp/>=<sp/>xTimerPeriodInTicks;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer-&gt;pvTimerID<sp/>=<sp/>pvTimerID;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>pxNewTimer-&gt;pxCallbackFunction<sp/>=<sp/>pxCallbackFunction;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1ab91611baae53be209a05d211f55f5395" kindref="member">vListInitialiseItem</ref>(<sp/>&amp;(<sp/>pxNewTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>uxAutoReload<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxNewTimer-&gt;ucStatus<sp/>|=<sp/>tmrSTATUS_IS_AUTORELOAD;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a21b54dae77c227db92f56131cae6de81" kindref="member">traceTIMER_CREATE</ref>(<sp/>pxNewTimer<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="timers_8h_1a1ee4da95d99c4e81bfa14c0350fbd594" kindref="member">xTimerGenericCommand</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xCommandID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xOptionalValue,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHigherPriorityTaskWoken,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTicksToWait<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">DaemonTaskMessage_t<sp/>xMessage;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>a<sp/>message<sp/>to<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>to<sp/>perform<sp/>a<sp/>particular<sp/>action</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/>on<sp/>a<sp/>particular<sp/>timer<sp/>definition.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerQueue<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>a<sp/>command<sp/>to<sp/>the<sp/>timer<sp/>service<sp/>task<sp/>to<sp/>start<sp/>the<sp/>xTimer<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.xMessageID<sp/>=<sp/>xCommandID;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xTimerParameters.xMessageValue<sp/>=<sp/>xOptionalValue;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xTimerParameters.pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xCommandID<sp/>&lt;<sp/><ref refid="timers_8h_1afab5e13e40f49f678d62925ab8bc44a1" kindref="member">tmrFIRST_FROM_ISR_COMMAND</ref><sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="task_8h_1a0241000e08a261372186d34825a35979" kindref="member">xTaskGetSchedulerState</ref>()<sp/>==<sp/><ref refid="task_8h_1acbb675035741787d29da475b5a887545" kindref="member">taskSCHEDULER_RUNNING</ref><sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" kindref="member">xQueueSendToBack</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" kindref="member">xQueueSendToBack</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>tmrNO_DELAY<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="queue_8h_1a51e9f73417b11441a181cdc4f33a68e9" kindref="member">xQueueSendToBackFromISR</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>pxHigherPriorityTaskWoken<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1aa5e8cd9587c262fdf914b56c286c47b8" kindref="member">traceTIMER_COMMAND_SEND</ref>(<sp/>xTimer,<sp/>xCommandID,<sp/>xOptionalValue,<sp/>xReturn<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="structtsk_task_control_block" kindref="compound">TaskHandle_t</ref><sp/><ref refid="timers_8h_1ad2a0d15a1e213493bd898e748d9f7555" kindref="member">xTimerGetTimerDaemonTaskHandle</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>xTimerGetTimerDaemonTaskHandle()<sp/>is<sp/>called<sp/>before<sp/>the<sp/>scheduler<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/>started,<sp/>then<sp/>xTimerTaskHandle<sp/>will<sp/>be<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>(<sp/>xTimerTaskHandle<sp/>!=<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xTimerTaskHandle;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/><ref refid="timers_8h_1a2735e79e155b2ca2a3809958ebb7431e" kindref="member">xTimerGetPeriod</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal">Timer_t<sp/>*pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pxTimer-&gt;xTimerPeriodInTicks;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a27ecb4105b9180a2f354384ee00e6848" kindref="member">vTimerSetReloadMode</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxAutoReload<sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal">Timer_t<sp/>*<sp/>pxTimer<sp/>=<sp/><sp/>xTimer;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>uxAutoReload<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>|=<sp/>tmrSTATUS_IS_AUTORELOAD;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>&amp;=<sp/>~tmrSTATUS_IS_AUTORELOAD;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/><ref refid="timers_8h_1a0e66306f2e9c482a28e750e90eec3d65" kindref="member">uxTimerGetReloadMode</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal">Timer_t<sp/>*<sp/>pxTimer<sp/>=<sp/><sp/>xTimer;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxReturn;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_AUTORELOAD<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>an<sp/>auto-reload<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uxReturn<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>an<sp/>auto-reload<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uxReturn<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uxReturn;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/><ref refid="timers_8h_1a06cdc26759c622eeb575070064e26025" kindref="member">xTimerGetExpiryTime</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal">Timer_t<sp/>*<sp/>pxTimer<sp/>=<sp/><sp/>xTimer;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>xReturn<sp/>=<sp/><ref refid="list_8h_1aa50d09950abc602741d7ebe8387f4e1a" kindref="member">listGET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="timers_8h_1a5007aef53e4cc6aea1aadcdcc72aa9da" kindref="member">pcTimerGetName</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e971<sp/>Unqualified<sp/>char<sp/>types<sp/>are<sp/>allowed<sp/>for<sp/>strings<sp/>and<sp/>single<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal">Timer_t<sp/>*pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pxTimer-&gt;pcTimerName;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessExpiredTimer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow<sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xResult;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">Timer_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimer<sp/>=<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/><ref refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" kindref="member">listGET_OWNER_OF_HEAD_ENTRY</ref>(<sp/>pxCurrentTimerList<sp/>);<sp/></highlight><highlight class="comment">/*lint<sp/>!e9087<sp/>!e9079<sp/>void<sp/>*<sp/>is<sp/>used<sp/>as<sp/>this<sp/>macro<sp/>is<sp/>used<sp/>with<sp/>tasks<sp/>and<sp/>co-routines<sp/>too.<sp/><sp/>Alignment<sp/>is<sp/>known<sp/>to<sp/>be<sp/>fine<sp/>as<sp/>the<sp/>type<sp/>of<sp/>the<sp/>pointer<sp/>stored<sp/>and<sp/>retrieved<sp/>is<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>timer<sp/>from<sp/>the<sp/>list<sp/>of<sp/>active<sp/>timers.<sp/><sp/>A<sp/>check<sp/>has<sp/>already</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/>been<sp/>performed<sp/>to<sp/>ensure<sp/>the<sp/>list<sp/>is<sp/>not<sp/>empty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a71329ddad88950ea45b32d5adcb1b2f3" kindref="member">traceTIMER_EXPIRED</ref>(<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>timer<sp/>is<sp/>an<sp/>auto-reload<sp/>timer<sp/>then<sp/>calculate<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/>expiry<sp/>time<sp/>and<sp/>re-insert<sp/>the<sp/>timer<sp/>in<sp/>the<sp/>list<sp/>of<sp/>active<sp/>timers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_AUTORELOAD<sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>is<sp/>inserted<sp/>into<sp/>a<sp/>list<sp/>using<sp/>a<sp/>time<sp/>relative<sp/>to<sp/>anything</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/>other<sp/>than<sp/>the<sp/>current<sp/>time.<sp/><sp/>It<sp/>will<sp/>therefore<sp/>be<sp/>inserted<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/>correct<sp/>list<sp/>relative<sp/>to<sp/>the<sp/>time<sp/>this<sp/>task<sp/>thinks<sp/>it<sp/>is<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>prvInsertTimerInActiveList(<sp/>pxTimer,<sp/>(<sp/>xNextExpireTime<sp/>+<sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>),<sp/>xTimeNow,<sp/>xNextExpireTime<sp/>)<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>expired<sp/>before<sp/>it<sp/>was<sp/>added<sp/>to<sp/>the<sp/>active<sp/>timer</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>list.<sp/><sp/>Reload<sp/>it<sp/>now.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xResult<sp/>=<sp/><ref refid="timers_8h_1a1ee4da95d99c4e81bfa14c0350fbd594" kindref="member">xTimerGenericCommand</ref>(<sp/>pxTimer,<sp/><ref refid="timers_8h_1adcc4f4391b0850b18596974d7618bdfc" kindref="member">tmrCOMMAND_START_DONT_TRACE</ref>,<sp/>xNextExpireTime,<sp/>NULL,<sp/>tmrNO_DELAY<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xResult<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/>xResult;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>&amp;=<sp/>~tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>timer<sp/>callback.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>pxTimer-&gt;pxCallbackFunction(<sp/>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>)<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a3a289793652f505c538abea27045ccdf" kindref="member">portTASK_FUNCTION</ref>(<sp/>prvTimerTask,<sp/>pvParameters<sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xListWasEmpty;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>(<sp/>void<sp/>)<sp/>pvParameters;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if(<sp/>configUSE_DAEMON_TASK_STARTUP_HOOK<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" kindref="member">vApplicationDaemonTaskStartupHook</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>the<sp/>application<sp/>writer<sp/>to<sp/>execute<sp/>some<sp/>code<sp/>in<sp/>the<sp/>context<sp/>of</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>task<sp/>at<sp/>the<sp/>point<sp/>the<sp/>task<sp/>starts<sp/>executing.<sp/><sp/>This<sp/>is<sp/>useful<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/>application<sp/>includes<sp/>initialisation<sp/>code<sp/>that<sp/>would<sp/>benefit<sp/>from</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>executing<sp/>after<sp/>the<sp/>scheduler<sp/>has<sp/>been<sp/>started.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmsis__os2_8c_1ab9ec7b1bf1b922c22bca56c92e2d4c62" kindref="member">vApplicationDaemonTaskStartupHook</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_DAEMON_TASK_STARTUP_HOOK<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;;<sp/>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Query<sp/>the<sp/>timers<sp/>list<sp/>to<sp/>see<sp/>if<sp/>it<sp/>contains<sp/>any<sp/>timers,<sp/>and<sp/>if<sp/>so,</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/>obtain<sp/>the<sp/>time<sp/>at<sp/>which<sp/>the<sp/>next<sp/>timer<sp/>will<sp/>expire.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>xNextExpireTime<sp/>=<sp/>prvGetNextExpireTime(<sp/>&amp;xListWasEmpty<sp/>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>timer<sp/>has<sp/>expired,<sp/>process<sp/>it.<sp/><sp/>Otherwise,<sp/>block<sp/>this<sp/>task</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/>until<sp/>either<sp/>a<sp/>timer<sp/>does<sp/>expire,<sp/>or<sp/>a<sp/>command<sp/>is<sp/>received.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>prvProcessTimerOrBlockTask(<sp/>xNextExpireTime,<sp/>xListWasEmpty<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Empty<sp/>the<sp/>command<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>prvProcessReceivedCommands();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessTimerOrBlockTask(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xListWasEmpty<sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xTimerListsWereSwitched;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1a366b302eba79d10b5ee2a3756f0fcc43" kindref="member">vTaskSuspendAll</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Obtain<sp/>the<sp/>time<sp/>now<sp/>to<sp/>make<sp/>an<sp/>assessment<sp/>as<sp/>to<sp/>whether<sp/>the<sp/>timer</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/>has<sp/>expired<sp/>or<sp/>not.<sp/><sp/>If<sp/>obtaining<sp/>the<sp/>time<sp/>causes<sp/>the<sp/>lists<sp/>to<sp/>switch</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/>then<sp/>don&apos;t<sp/>process<sp/>this<sp/>timer<sp/>as<sp/>any<sp/>timers<sp/>that<sp/>remained<sp/>in<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/>when<sp/>the<sp/>lists<sp/>were<sp/>switched<sp/>will<sp/>have<sp/>been<sp/>processed<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/><sp/>prvSampleTimeNow()<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>xTimeNow<sp/>=<sp/>prvSampleTimeNow(<sp/>&amp;xTimerListsWereSwitched<sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerListsWereSwitched<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>tick<sp/>count<sp/>has<sp/>not<sp/>overflowed,<sp/>has<sp/>the<sp/>timer<sp/>expired?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>xListWasEmpty<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)<sp/>&amp;&amp;<sp/>(<sp/>xNextExpireTime<sp/>&lt;=<sp/>xTimeNow<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prvProcessExpiredTimer(<sp/>xNextExpireTime,<sp/>xTimeNow<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>tick<sp/>count<sp/>has<sp/>not<sp/>overflowed,<sp/>and<sp/>the<sp/>next<sp/>expire</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>has<sp/>not<sp/>been<sp/>reached<sp/>yet.<sp/><sp/>This<sp/>task<sp/>should<sp/>therefore</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>next<sp/>expire<sp/>time<sp/>or<sp/>a<sp/>command<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>received<sp/>-<sp/>whichever<sp/>comes<sp/>first.<sp/><sp/>The<sp/>following<sp/>line<sp/>cannot</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>reached<sp/>unless<sp/>xNextExpireTime<sp/>&gt;<sp/>xTimeNow,<sp/>except<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>when<sp/>the<sp/>current<sp/>timer<sp/>list<sp/>is<sp/>empty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xListWasEmpty<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>current<sp/>timer<sp/>list<sp/>is<sp/>empty<sp/>-<sp/>is<sp/>the<sp/>overflow<sp/>list</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>empty?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xListWasEmpty<sp/>=<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>pxOverflowTimerList<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="queue_8h_1abaa0f8224837d82e60cf799127185546" kindref="member">vQueueWaitForMessageRestricted</ref>(<sp/>xTimerQueue,<sp/>(<sp/>xNextExpireTime<sp/>-<sp/>xTimeNow<sp/>),<sp/>xListWasEmpty<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>()<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Yield<sp/>to<sp/>wait<sp/>for<sp/>either<sp/>a<sp/>command<sp/>to<sp/>arrive,<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>time<sp/>to<sp/>expire.<sp/><sp/>If<sp/>a<sp/>command<sp/>arrived<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>critical<sp/>section<sp/>being<sp/>exited<sp/>and<sp/>this<sp/>yield<sp/>then<sp/>the<sp/>yield</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>not<sp/>cause<sp/>the<sp/>task<sp/>to<sp/>block.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e" kindref="member">portYIELD_WITHIN_API</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="task_8h_1a003f8ae6d649225abd030cc76e1c7d0e" kindref="member">xTaskResumeAll</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>prvGetNextExpireTime(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxListWasEmpty<sp/>)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timers<sp/>are<sp/>listed<sp/>in<sp/>expiry<sp/>time<sp/>order,<sp/>with<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/>referencing<sp/>the<sp/>task<sp/>that<sp/>will<sp/>expire<sp/>first.<sp/><sp/>Obtain<sp/>the<sp/>time<sp/>at<sp/>which</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/>the<sp/>timer<sp/>with<sp/>the<sp/>nearest<sp/>expiry<sp/>time<sp/>will<sp/>expire.<sp/><sp/>If<sp/>there<sp/>are<sp/>no</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/>active<sp/>timers<sp/>then<sp/>just<sp/>set<sp/>the<sp/>next<sp/>expire<sp/>time<sp/>to<sp/>0.<sp/><sp/>That<sp/>will<sp/>cause</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/>this<sp/>task<sp/>to<sp/>unblock<sp/>when<sp/>the<sp/>tick<sp/>count<sp/>overflows,<sp/>at<sp/>which<sp/>point<sp/>the</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/>timer<sp/>lists<sp/>will<sp/>be<sp/>switched<sp/>and<sp/>the<sp/>next<sp/>expiry<sp/>time<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/>re-assessed.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>*pxListWasEmpty<sp/>=<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>pxCurrentTimerList<sp/>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*pxListWasEmpty<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>xNextExpireTime<sp/>=<sp/><ref refid="list_8h_1a63742b27958b959ac9ab69d8e9aed241" kindref="member">listGET_ITEM_VALUE_OF_HEAD_ENTRY</ref>(<sp/>pxCurrentTimerList<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>task<sp/>unblocks<sp/>when<sp/>the<sp/>tick<sp/>count<sp/>rolls<sp/>over.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>xNextExpireTime<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>)<sp/>0U;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xNextExpireTime;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>prvSampleTimeNow(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimerListsWereSwitched<sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><ref refid="mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5" kindref="member">PRIVILEGED_DATA</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xLastTime<sp/>=<sp/>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>)<sp/>0U;<sp/></highlight><highlight class="comment">/*lint<sp/>!e956<sp/>Variable<sp/>is<sp/>only<sp/>accessible<sp/>to<sp/>one<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>xTimeNow<sp/>=<sp/><ref refid="task_8h_1a753ecfe23e7386066ecccad5d16422f7" kindref="member">xTaskGetTickCount</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimeNow<sp/>&lt;<sp/>xLastTime<sp/>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>prvSwitchTimerLists();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>*pxTimerListsWereSwitched<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>*pxTimerListsWereSwitched<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>xLastTime<sp/>=<sp/>xTimeNow;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xTimeNow;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>prvInsertTimerInActiveList(<sp/>Timer_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpiryTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xCommandTime<sp/>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xProcessTimerNow<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1a83e95e61652f032fdc26aa622f5e2610" kindref="member">listSET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>),<sp/>xNextExpiryTime<sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="list_8h_1acc01a08e534b54fe438847ef02e5060a" kindref="member">listSET_LIST_ITEM_OWNER</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>),<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xNextExpiryTime<sp/>&lt;=<sp/>xTimeNow<sp/>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>the<sp/>expiry<sp/>time<sp/>elapsed<sp/>between<sp/>the<sp/>command<sp/>to<sp/>start/reset<sp/>a</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/>timer<sp/>was<sp/>issued,<sp/>and<sp/>the<sp/>time<sp/>the<sp/>command<sp/>was<sp/>processed?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>(<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>)<sp/>(<sp/>xTimeNow<sp/>-<sp/>xCommandTime<sp/>)<sp/>)<sp/>&gt;=<sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e961<sp/>MISRA<sp/>exception<sp/>as<sp/>the<sp/>casts<sp/>are<sp/>only<sp/>redundant<sp/>for<sp/>some<sp/>ports.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>time<sp/>between<sp/>a<sp/>command<sp/>being<sp/>issued<sp/>and<sp/>the<sp/>command<sp/>being</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>processed<sp/>actually<sp/>exceeds<sp/>the<sp/>timers<sp/>period.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xProcessTimerNow<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>pxOverflowTimerList,<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>xTimeNow<sp/>&lt;<sp/>xCommandTime<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>xNextExpiryTime<sp/>&gt;=<sp/>xCommandTime<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If,<sp/>since<sp/>the<sp/>command<sp/>was<sp/>issued,<sp/>the<sp/>tick<sp/>count<sp/>has<sp/>overflowed</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>the<sp/>expiry<sp/>time<sp/>has<sp/>not,<sp/>then<sp/>the<sp/>timer<sp/>must<sp/>have<sp/>already<sp/>passed</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>expiry<sp/>time<sp/>and<sp/>should<sp/>be<sp/>processed<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xProcessTimerNow<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>pxCurrentTimerList,<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xProcessTimerNow;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvProcessReceivedCommands(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal">DaemonTaskMessage_t<sp/>xMessage;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">Timer_t<sp/>*pxTimer;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xTimerListsWereSwitched,<sp/>xResult;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTimeNow;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9" kindref="member">xQueueReceive</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>tmrNO_DELAY<sp/>)<sp/>!=<sp/><ref refid="projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6" kindref="member">pdFAIL</ref><sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e603<sp/>xMessage<sp/>does<sp/>not<sp/>have<sp/>to<sp/>be<sp/>initialised<sp/>as<sp/>it<sp/>is<sp/>passed<sp/>out,<sp/>not<sp/>in,<sp/>and<sp/>it<sp/>is<sp/>not<sp/>used<sp/>unless<sp/>xQueueReceive()<sp/>returns<sp/>pdTRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(<sp/>INCLUDE_xTimerPendFunctionCall<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Negative<sp/>commands<sp/>are<sp/>pended<sp/>function<sp/>calls<sp/>rather<sp/>than<sp/>timer</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>commands.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xMessage.xMessageID<sp/>&lt;<sp/>(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>)<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallbackParameters_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxCallback<sp/>=<sp/>&amp;(<sp/>xMessage.u.xCallbackParameters<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>uses<sp/>the<sp/>xCallbackParameters<sp/>member<sp/>to<sp/>request<sp/>a</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>be<sp/>executed.<sp/><sp/>Check<sp/>the<sp/>callback<sp/>is<sp/>not<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>pxCallback<sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxCallback-&gt;pxCallbackFunction(<sp/>pxCallback-&gt;pvParameter1,<sp/>pxCallback-&gt;ulParameter2<sp/>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_xTimerPendFunctionCall<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Commands<sp/>that<sp/>are<sp/>positive<sp/>are<sp/>timer<sp/>commands<sp/>rather<sp/>than<sp/>pended</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/>function<sp/>calls.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xMessage.xMessageID<sp/>&gt;=<sp/>(<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>)<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>messages<sp/>uses<sp/>the<sp/>xTimerParameters<sp/>member<sp/>to<sp/>work<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>software<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer<sp/>=<sp/>xMessage.u.xTimerParameters.pxTimer;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="list_8h_1a60302b468d21f8c53d13987372acb8fa" kindref="member">listIS_CONTAINED_WITHIN</ref>(<sp/>NULL,<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>)<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e961.<sp/>The<sp/>cast<sp/>is<sp/>only<sp/>redundant<sp/>when<sp/>NULL<sp/>is<sp/>passed<sp/>into<sp/>the<sp/>macro.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>is<sp/>in<sp/>a<sp/>list,<sp/>remove<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a6c6d5767fb1746077b62e5da5a28db63" kindref="member">traceTIMER_COMMAND_RECEIVED</ref>(<sp/>pxTimer,<sp/>xMessage.xMessageID,<sp/>xMessage.u.xTimerParameters.xMessageValue<sp/>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>case<sp/>the<sp/>xTimerListsWereSwitched<sp/>parameter<sp/>is<sp/>not<sp/>used,<sp/>but</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>must<sp/>be<sp/>present<sp/>in<sp/>the<sp/>function<sp/>call.<sp/><sp/>prvSampleTimeNow()<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>after<sp/>the<sp/>message<sp/>is<sp/>received<sp/>from<sp/>xTimerQueue<sp/>so<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>possibility<sp/>of<sp/>a<sp/>higher<sp/>priority<sp/>task<sp/>adding<sp/>a<sp/>message<sp/>to<sp/>the<sp/>message</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/>with<sp/>a<sp/>time<sp/>that<sp/>is<sp/>ahead<sp/>of<sp/>the<sp/>timer<sp/>daemon<sp/>task<sp/>(because<sp/>it</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>pre-empted<sp/>the<sp/>timer<sp/>daemon<sp/>task<sp/>after<sp/>the<sp/>xTimeNow<sp/>value<sp/>was<sp/>set).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xTimeNow<sp/>=<sp/>prvSampleTimeNow(<sp/>&amp;xTimerListsWereSwitched<sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>xMessage.xMessageID<sp/>)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1afc38af63403775cc4ced3995f920343a" kindref="member">tmrCOMMAND_START</ref><sp/>:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1add053fdcf41607ba790004590c11844f" kindref="member">tmrCOMMAND_START_FROM_ISR</ref><sp/>:</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a0a63f701c021371d186adca7c590e923" kindref="member">tmrCOMMAND_RESET</ref><sp/>:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a1d69bd5e47301570a4aa149bd868534a" kindref="member">tmrCOMMAND_RESET_FROM_ISR</ref><sp/>:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1adcc4f4391b0850b18596974d7618bdfc" kindref="member">tmrCOMMAND_START_DONT_TRACE</ref><sp/>:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>or<sp/>restart<sp/>a<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>|=<sp/>tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>prvInsertTimerInActiveList(<sp/>pxTimer,<sp/><sp/>xMessage.u.xTimerParameters.xMessageValue<sp/>+<sp/>pxTimer-&gt;xTimerPeriodInTicks,<sp/>xTimeNow,<sp/>xMessage.u.xTimerParameters.xMessageValue<sp/>)<sp/>!=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>expired<sp/>before<sp/>it<sp/>was<sp/>added<sp/>to<sp/>the<sp/>active</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>list.<sp/><sp/>Process<sp/>it<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;pxCallbackFunction(<sp/>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>)<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a71329ddad88950ea45b32d5adcb1b2f3" kindref="member">traceTIMER_EXPIRED</ref>(<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_AUTORELOAD<sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xResult<sp/>=<sp/><ref refid="timers_8h_1a1ee4da95d99c4e81bfa14c0350fbd594" kindref="member">xTimerGenericCommand</ref>(<sp/>pxTimer,<sp/><ref refid="timers_8h_1adcc4f4391b0850b18596974d7618bdfc" kindref="member">tmrCOMMAND_START_DONT_TRACE</ref>,<sp/>xMessage.u.xTimerParameters.xMessageValue<sp/>+<sp/>pxTimer-&gt;xTimerPeriodInTicks,<sp/>NULL,<sp/>tmrNO_DELAY<sp/>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xResult<sp/>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/>xResult;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a0cd6f6a41dcd52d2fc06c350f43516c0" kindref="member">tmrCOMMAND_STOP</ref><sp/>:</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1acbf988b64a5897a1c030da417cc654de" kindref="member">tmrCOMMAND_STOP_FROM_ISR</ref><sp/>:</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>has<sp/>already<sp/>been<sp/>removed<sp/>from<sp/>the<sp/>active<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>&amp;=<sp/>~tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1adb27881a1a1118b9cc4d711391c89414" kindref="member">tmrCOMMAND_CHANGE_PERIOD</ref><sp/>:</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1ab520106084753fbb137ac275ab3ff20b" kindref="member">tmrCOMMAND_CHANGE_PERIOD_FROM_ISR</ref><sp/>:</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>|=<sp/>tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>=<sp/>xMessage.u.xTimerParameters.xMessageValue;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>(<sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>&gt;<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>new<sp/>period<sp/>does<sp/>not<sp/>really<sp/>have<sp/>a<sp/>reference,<sp/>and<sp/>can</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>longer<sp/>or<sp/>shorter<sp/>than<sp/>the<sp/>old<sp/>one.<sp/><sp/>The<sp/>command<sp/>time<sp/>is</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>therefore<sp/>set<sp/>to<sp/>the<sp/>current<sp/>time,<sp/>and<sp/>as<sp/>the<sp/>period<sp/>cannot</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>zero<sp/>the<sp/>next<sp/>expiry<sp/>time<sp/>can<sp/>only<sp/>be<sp/>in<sp/>the<sp/>future,</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meaning<sp/>(unlike<sp/>for<sp/>the<sp/>xTimerStart()<sp/>case<sp/>above)<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>fail<sp/>case<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>handled<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/>prvInsertTimerInActiveList(<sp/>pxTimer,<sp/>(<sp/>xTimeNow<sp/>+<sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>),<sp/>xTimeNow,<sp/>xTimeNow<sp/>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a5a5586339a9dbc1320153fd96a1c2f33" kindref="member">tmrCOMMAND_DELETE</ref><sp/>:</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(<sp/>configSUPPORT_DYNAMIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>has<sp/>already<sp/>been<sp/>removed<sp/>from<sp/>the<sp/>active<sp/>list,</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>free<sp/>up<sp/>the<sp/>memory<sp/>if<sp/>the<sp/>memory<sp/>was<sp/>dynamically</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_STATICALLY_ALLOCATED<sp/>)<sp/>==<sp/>(<sp/>uint8_t<sp/>)<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref>(<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>&amp;=<sp/>~tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>dynamic<sp/>allocation<sp/>is<sp/>not<sp/>enabled,<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>could<sp/>not<sp/>have<sp/>been<sp/>dynamically<sp/>allocated.<sp/>So<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>need<sp/>to<sp/>free<sp/>the<sp/>memory<sp/>-<sp/>just<sp/>mark<sp/>the<sp/>timer<sp/>as</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;not<sp/>active&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pxTimer-&gt;ucStatus<sp/>&amp;=<sp/>~tmrSTATUS_IS_ACTIVE;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configSUPPORT_DYNAMIC_ALLOCATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>expect<sp/>to<sp/>get<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvSwitchTimerLists(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xNextExpireTime,<sp/>xReloadTime;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><ref refid="structx_l_i_s_t" kindref="compound">List_t</ref><sp/>*pxTemp;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">Timer_t<sp/>*pxTimer;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xResult;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>tick<sp/>count<sp/>has<sp/>overflowed.<sp/><sp/>The<sp/>timer<sp/>lists<sp/>must<sp/>be<sp/>switched.</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/>If<sp/>there<sp/>are<sp/>any<sp/>timers<sp/>still<sp/>referenced<sp/>from<sp/>the<sp/>current<sp/>timer<sp/>list</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/>then<sp/>they<sp/>must<sp/>have<sp/>expired<sp/>and<sp/>should<sp/>be<sp/>processed<sp/>before<sp/>the<sp/>lists</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/>are<sp/>switched.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="list_8h_1aaba6eb05d67ebc8026bea29193eca28f" kindref="member">listLIST_IS_EMPTY</ref>(<sp/>pxCurrentTimerList<sp/>)<sp/>==<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>xNextExpireTime<sp/>=<sp/><ref refid="list_8h_1a63742b27958b959ac9ab69d8e9aed241" kindref="member">listGET_ITEM_VALUE_OF_HEAD_ENTRY</ref>(<sp/>pxCurrentTimerList<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>timer<sp/>from<sp/>the<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>pxTimer<sp/>=<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/><ref refid="list_8h_1a715561302af8cb5b74416b23ce4e999d" kindref="member">listGET_OWNER_OF_HEAD_ENTRY</ref>(<sp/>pxCurrentTimerList<sp/>);<sp/></highlight><highlight class="comment">/*lint<sp/>!e9087<sp/>!e9079<sp/>void<sp/>*<sp/>is<sp/>used<sp/>as<sp/>this<sp/>macro<sp/>is<sp/>used<sp/>with<sp/>tasks<sp/>and<sp/>co-routines<sp/>too.<sp/><sp/>Alignment<sp/>is<sp/>known<sp/>to<sp/>be<sp/>fine<sp/>as<sp/>the<sp/>type<sp/>of<sp/>the<sp/>pointer<sp/>stored<sp/>and<sp/>retrieved<sp/>is<sp/>the<sp/>same.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/><ref refid="list_8h_1a2eb1558482076fff8cafc63419c2d34a" kindref="member">uxListRemove</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a71329ddad88950ea45b32d5adcb1b2f3" kindref="member">traceTIMER_EXPIRED</ref>(<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Execute<sp/>its<sp/>callback,<sp/>then<sp/>send<sp/>a<sp/>command<sp/>to<sp/>restart<sp/>the<sp/>timer<sp/>if</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>is<sp/>an<sp/>auto-reload<sp/>timer.<sp/><sp/>It<sp/>cannot<sp/>be<sp/>restarted<sp/>here<sp/>as<sp/>the<sp/>lists</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/><sp/><sp/><sp/>have<sp/>not<sp/>yet<sp/>been<sp/>switched.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>pxTimer-&gt;pxCallbackFunction(<sp/>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>)<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_AUTORELOAD<sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>reload<sp/>value,<sp/>and<sp/>if<sp/>the<sp/>reload<sp/>value<sp/>results<sp/>in</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>timer<sp/>going<sp/>into<sp/>the<sp/>same<sp/>timer<sp/>list<sp/>then<sp/>it<sp/>has<sp/>already<sp/>expired</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>timer<sp/>should<sp/>be<sp/>re-inserted<sp/>into<sp/>the<sp/>current<sp/>list<sp/>so<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>processed<sp/>again<sp/>within<sp/>this<sp/>loop.<sp/><sp/>Otherwise<sp/>a<sp/>command<sp/>should<sp/>be<sp/>sent</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>restart<sp/>the<sp/>timer<sp/>to<sp/>ensure<sp/>it<sp/>is<sp/>only<sp/>inserted<sp/>into<sp/>a<sp/>list<sp/>after</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>lists<sp/>have<sp/>been<sp/>swapped.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xReloadTime<sp/>=<sp/>(<sp/>xNextExpireTime<sp/>+<sp/>pxTimer-&gt;xTimerPeriodInTicks<sp/>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xReloadTime<sp/>&gt;<sp/>xNextExpireTime<sp/>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1a83e95e61652f032fdc26aa622f5e2610" kindref="member">listSET_LIST_ITEM_VALUE</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>),<sp/>xReloadTime<sp/>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1acc01a08e534b54fe438847ef02e5060a" kindref="member">listSET_LIST_ITEM_OWNER</ref>(<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>),<sp/>pxTimer<sp/>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa129290da5cbda47dffb7bf877b2f02a" kindref="member">vListInsert</ref>(<sp/>pxCurrentTimerList,<sp/>&amp;(<sp/>pxTimer-&gt;xTimerListItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xResult<sp/>=<sp/><ref refid="timers_8h_1a1ee4da95d99c4e81bfa14c0350fbd594" kindref="member">xTimerGenericCommand</ref>(<sp/>pxTimer,<sp/><ref refid="timers_8h_1adcc4f4391b0850b18596974d7618bdfc" kindref="member">tmrCOMMAND_START_DONT_TRACE</ref>,<sp/>xNextExpireTime,<sp/>NULL,<sp/>tmrNO_DELAY<sp/>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xResult<sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>void<sp/>)<sp/>xResult;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>pxTemp<sp/>=<sp/>pxCurrentTimerList;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>pxCurrentTimerList<sp/>=<sp/>pxOverflowTimerList;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>pxOverflowTimerList<sp/>=<sp/>pxTemp;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prvCheckForValidListAndQueue(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>list<sp/>from<sp/>which<sp/>active<sp/>timers<sp/>are<sp/>referenced,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/>queue<sp/>used<sp/>to<sp/>communicate<sp/>with<sp/>the<sp/>timer<sp/>service,<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/>initialised.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerQueue<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>&amp;xActiveTimerList1<sp/>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="list_8h_1adeef7734d7d6d9a3eea642a70c106919" kindref="member">vListInitialise</ref>(<sp/>&amp;xActiveTimerList2<sp/>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxCurrentTimerList<sp/>=<sp/>&amp;xActiveTimerList1;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pxOverflowTimerList<sp/>=<sp/>&amp;xActiveTimerList2;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if(<sp/>configSUPPORT_STATIC_ALLOCATION<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer<sp/>queue<sp/>is<sp/>allocated<sp/>statically<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configSUPPORT_DYNAMIC_ALLOCATION<sp/>is<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structx_s_t_a_t_i_c___q_u_e_u_e" kindref="compound">StaticQueue_t</ref><sp/>xStaticTimerQueue;<sp/></highlight><highlight class="comment">/*lint<sp/>!e956<sp/>Ok<sp/>to<sp/>declare<sp/>in<sp/>this<sp/>manner<sp/>to<sp/>prevent<sp/>additional<sp/>conditional<sp/>compilation<sp/>guards<sp/>in<sp/>other<sp/>locations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>ucStaticTimerQueueStorage[<sp/>(<sp/>size_t<sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1abb9aa0f31c1f3b14a15083a3c6120918" kindref="member">configTIMER_QUEUE_LENGTH</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DaemonTaskMessage_t<sp/>)<sp/>];<sp/></highlight><highlight class="comment">/*lint<sp/>!e956<sp/>Ok<sp/>to<sp/>declare<sp/>in<sp/>this<sp/>manner<sp/>to<sp/>prevent<sp/>additional<sp/>conditional<sp/>compilation<sp/>guards<sp/>in<sp/>other<sp/>locations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTimerQueue<sp/>=<sp/>xQueueCreateStatic(<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1abb9aa0f31c1f3b14a15083a3c6120918" kindref="member">configTIMER_QUEUE_LENGTH</ref>,<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DaemonTaskMessage_t<sp/>),<sp/>&amp;(<sp/>ucStaticTimerQueueStorage[<sp/>0<sp/>]<sp/>),<sp/>&amp;xStaticTimerQueue<sp/>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTimerQueue<sp/>=<sp/>xQueueCreate(<sp/>(<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>)<sp/><ref refid="_free_r_t_o_s_config_8h_1abb9aa0f31c1f3b14a15083a3c6120918" kindref="member">configTIMER_QUEUE_LENGTH</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DaemonTaskMessage_t<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(<sp/>configQUEUE_REGISTRY_SIZE<sp/>&gt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xTimerQueue<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" kindref="member">vQueueAddToRegistry</ref>(<sp/>xTimerQueue,<sp/></highlight><highlight class="stringliteral">&quot;TmrQ&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configQUEUE_REGISTRY_SIZE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8" kindref="member">mtCOVERAGE_TEST_MARKER</ref>();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="timers_8h_1a2cd9b1399fb25203be698f123846dc33" kindref="member">xTimerIsTimerActive</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">Timer_t<sp/>*pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>timer<sp/>in<sp/>the<sp/>list<sp/>of<sp/>active<sp/>timers?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pxTimer-&gt;ucStatus<sp/>&amp;<sp/>tmrSTATUS_IS_ACTIVE<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1aa56260e937e7e203026707e5ba944273" kindref="member">pdFALSE</ref>;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="projdefs_8h_1af268cf937960eb029256bd9c4d949fbe" kindref="member">pdTRUE</ref>;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*lint<sp/>!e818<sp/>Can&apos;t<sp/>be<sp/>pointer<sp/>to<sp/>const<sp/>due<sp/>to<sp/>the<sp/>typedef.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timers_8h_1a116df5c5464393c6aeda6ecec6c9e916" kindref="member">pvTimerGetTimerID</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">Timer_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvReturn;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>pvReturn<sp/>=<sp/>pxTimer-&gt;pvTimerID;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pvReturn;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timers_8h_1a1f06045a953481dd7012d4c7762990cb" kindref="member">vTimerSetTimerID</ref>(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvNewID<sp/>)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">Timer_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxTimer<sp/>=<sp/>xTimer;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimer<sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1ab7bf0ae866292ba8296091a9d5209689" kindref="member">taskENTER_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>pxTimer-&gt;pvTimerID<sp/>=<sp/>pvNewID;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><ref refid="task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643" kindref="member">taskEXIT_CRITICAL</ref>();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>INCLUDE_xTimerPendFunctionCall<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="timers_8h_1ae0d9338933037e6feebe6437763fa299" kindref="member">xTimerPendFunctionCallFromISR</ref>(<sp/><ref refid="timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622" kindref="member">PendedFunction_t</ref><sp/>xFunctionToPend,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter1,<sp/>uint32_t<sp/>ulParameter2,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>*pxHigherPriorityTaskWoken<sp/>)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>DaemonTaskMessage_t<sp/>xMessage;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Complete<sp/>the<sp/>message<sp/>with<sp/>the<sp/>function<sp/>parameters<sp/>and<sp/>post<sp/>it<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/>daemon<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.xMessageID<sp/>=<sp/><ref refid="timers_8h_1aff0b8d2d5d743afef9d52861618139bf" kindref="member">tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR</ref>;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.pxCallbackFunction<sp/>=<sp/>xFunctionToPend;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.pvParameter1<sp/>=<sp/>pvParameter1;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.ulParameter2<sp/>=<sp/>ulParameter2;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="queue_8h_1a21d5919ed26c21d121df4a4debeb643c" kindref="member">xQueueSendFromISR</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>pxHigherPriorityTaskWoken<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1a9b864660c6d826e802d9e3f94548cd7f" kindref="member">tracePEND_FUNC_CALL_FROM_ISR</ref>(<sp/>xFunctionToPend,<sp/>pvParameter1,<sp/>ulParameter2,<sp/>xReturn<sp/>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_xTimerPendFunctionCall<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>INCLUDE_xTimerPendFunctionCall<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="timers_8h_1a04e031135bd3276caaedd656d464dc23" kindref="member">xTimerPendFunctionCall</ref>(<sp/><ref refid="timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622" kindref="member">PendedFunction_t</ref><sp/>xFunctionToPend,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameter1,<sp/>uint32_t<sp/>ulParameter2,<sp/><ref refid="portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9" kindref="member">TickType_t</ref><sp/>xTicksToWait<sp/>)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>DaemonTaskMessage_t<sp/>xMessage;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xReturn;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>can<sp/>only<sp/>be<sp/>called<sp/>after<sp/>a<sp/>timer<sp/>has<sp/>been<sp/>created<sp/>or</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/>after<sp/>the<sp/>scheduler<sp/>has<sp/>been<sp/>started<sp/>because,<sp/>until<sp/>then,<sp/>the<sp/>timer</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/>queue<sp/>does<sp/>not<sp/>exist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_config_8h_1a228c70cd48927d6ab730ed1a6dfbe35f" kindref="member">configASSERT</ref>(<sp/>xTimerQueue<sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Complete<sp/>the<sp/>message<sp/>with<sp/>the<sp/>function<sp/>parameters<sp/>and<sp/>post<sp/>it<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/>daemon<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.xMessageID<sp/>=<sp/><ref refid="timers_8h_1aca42f545424488ce7dfd43c0d70ca610" kindref="member">tmrCOMMAND_EXECUTE_CALLBACK</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.pxCallbackFunction<sp/>=<sp/>xFunctionToPend;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.pvParameter1<sp/>=<sp/>pvParameter1;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>xMessage.u.xCallbackParameters.ulParameter2<sp/>=<sp/>ulParameter2;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>xReturn<sp/>=<sp/><ref refid="queue_8h_1a81d24a2c1199d58efb76fbee15853112" kindref="member">xQueueSendToBack</ref>(<sp/>xTimerQueue,<sp/>&amp;xMessage,<sp/>xTicksToWait<sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_free_r_t_o_s_8h_1ab9c72706acbdbcec75ffb2cdaca45b24" kindref="member">tracePEND_FUNC_CALL</ref>(<sp/>xFunctionToPend,<sp/>pvParameter1,<sp/>ulParameter2,<sp/>xReturn<sp/>);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xReturn;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_xTimerPendFunctionCall<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>configUSE_TRACE_FACILITY<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxTimerGetTimerNumber(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer<sp/>)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/>xTimer<sp/>)-&gt;uxTimerNumber;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TRACE_FACILITY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>configUSE_TRACE_FACILITY<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vTimerSetTimerNumber(<sp/><ref refid="timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6" kindref="member">TimerHandle_t</ref><sp/>xTimer,<sp/><ref refid="portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6" kindref="member">UBaseType_t</ref><sp/>uxTimerNumber<sp/>)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>(<sp/>Timer_t<sp/>*<sp/>)<sp/>xTimer<sp/>)-&gt;uxTimerNumber<sp/>=<sp/>uxTimerNumber;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TRACE_FACILITY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>entire<sp/>source<sp/>file<sp/>will<sp/>be<sp/>skipped<sp/>if<sp/>the<sp/>application<sp/>is<sp/>not<sp/>configured</highlight></codeline>
<codeline lineno="1122"><highlight class="comment">to<sp/>include<sp/>software<sp/>timer<sp/>functionality.<sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>include<sp/>software<sp/>timer</highlight></codeline>
<codeline lineno="1123"><highlight class="comment">functionality<sp/>then<sp/>ensure<sp/>configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1<sp/>in<sp/>FreeRTOSConfig.h.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TIMERS<sp/>==<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="NUCLEO-G0B1RE/FreeRTOS_Queues/Middlewares/Third_Party/FreeRTOS/Source/timers.c"/>
  </compounddef>
</doxygen>
